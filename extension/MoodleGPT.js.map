{"version":3,"file":"MoodleGPT.js","sources":["../src/background/utils/title-indications.ts","../node_modules/tslib/tslib.es6.js","../src/background/utils/pick-best-response.ts","../src/background/utils/logs.ts","../src/background/utils/normalize-text.ts","../src/background/core/get-content-with-history.ts","../src/background/utils/version-support-images.ts","../src/background/utils/image-to-base64.ts","../node_modules/openai/internal/qs/formats.mjs","../node_modules/openai/internal/qs/utils.mjs","../node_modules/openai/internal/qs/stringify.mjs","../node_modules/openai/version.mjs","../node_modules/openai/_shims/registry.mjs","../node_modules/openai/_shims/MultipartBody.mjs","../node_modules/openai/_shims/index.mjs","../node_modules/openai/_shims/web-runtime.mjs","../node_modules/openai/error.mjs","../node_modules/openai/internal/decoders/line.mjs","../node_modules/openai/internal/stream-utils.mjs","../node_modules/openai/streaming.mjs","../node_modules/openai/uploads.mjs","../node_modules/openai/core.mjs","../node_modules/openai/pagination.mjs","../node_modules/openai/resource.mjs","../node_modules/openai/resources/chat/completions/messages.mjs","../node_modules/openai/resources/chat/completions/completions.mjs","../node_modules/openai/resources/chat/chat.mjs","../node_modules/openai/resources/audio/speech.mjs","../node_modules/openai/resources/audio/transcriptions.mjs","../node_modules/openai/resources/audio/translations.mjs","../node_modules/openai/resources/audio/audio.mjs","../node_modules/openai/resources/batches.mjs","../node_modules/openai/lib/EventStream.mjs","../node_modules/openai/lib/AssistantStream.mjs","../node_modules/openai/resources/beta/assistants.mjs","../node_modules/openai/lib/RunnableFunction.mjs","../node_modules/openai/lib/chatCompletionUtils.mjs","../node_modules/openai/lib/parser.mjs","../node_modules/openai/lib/AbstractChatCompletionRunner.mjs","../node_modules/openai/lib/ChatCompletionRunner.mjs","../node_modules/openai/_vendor/partial-json-parser/parser.mjs","../node_modules/openai/lib/ChatCompletionStream.mjs","../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","../node_modules/openai/resources/beta/chat/completions.mjs","../node_modules/openai/resources/beta/chat/chat.mjs","../node_modules/openai/resources/beta/realtime/sessions.mjs","../node_modules/openai/resources/beta/realtime/transcription-sessions.mjs","../node_modules/openai/resources/beta/realtime/realtime.mjs","../node_modules/openai/resources/beta/threads/messages.mjs","../node_modules/openai/resources/beta/threads/runs/steps.mjs","../node_modules/openai/resources/beta/threads/runs/runs.mjs","../node_modules/openai/resources/beta/threads/threads.mjs","../node_modules/openai/resources/beta/beta.mjs","../node_modules/openai/resources/completions.mjs","../node_modules/openai/resources/containers/files/content.mjs","../node_modules/openai/resources/containers/files/files.mjs","../node_modules/openai/resources/containers/containers.mjs","../node_modules/openai/resources/embeddings.mjs","../node_modules/openai/resources/evals/runs/output-items.mjs","../node_modules/openai/resources/evals/runs/runs.mjs","../node_modules/openai/resources/evals/evals.mjs","../node_modules/openai/resources/files.mjs","../node_modules/openai/resources/fine-tuning/methods.mjs","../node_modules/openai/resources/fine-tuning/alpha/graders.mjs","../node_modules/openai/resources/fine-tuning/alpha/alpha.mjs","../node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs","../node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs","../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","../node_modules/openai/resources/fine-tuning/fine-tuning.mjs","../node_modules/openai/resources/graders/grader-models.mjs","../node_modules/openai/resources/graders/graders.mjs","../node_modules/openai/resources/images.mjs","../node_modules/openai/resources/models.mjs","../node_modules/openai/resources/moderations.mjs","../node_modules/openai/lib/ResponsesParser.mjs","../node_modules/openai/resources/responses/input-items.mjs","../node_modules/openai/lib/responses/ResponseStream.mjs","../node_modules/openai/resources/responses/responses.mjs","../node_modules/openai/resources/uploads/parts.mjs","../node_modules/openai/resources/uploads/uploads.mjs","../node_modules/openai/resources/vector-stores/files.mjs","../node_modules/openai/resources/vector-stores/file-batches.mjs","../node_modules/openai/lib/Util.mjs","../node_modules/openai/resources/vector-stores/vector-stores.mjs","../node_modules/openai/index.mjs","../node_modules/zod/dist/esm/v3/helpers/util.js","../node_modules/zod/dist/esm/v3/ZodError.js","../node_modules/zod/dist/esm/v3/locales/en.js","../node_modules/zod/dist/esm/v3/errors.js","../node_modules/zod/dist/esm/v3/helpers/parseUtil.js","../node_modules/zod/dist/esm/v3/helpers/errorUtil.js","../node_modules/zod/dist/esm/v3/types.js","../node_modules/@google/genai/dist/web/index.mjs","../src/background/utils/html-table-to-string.ts","../src/background/core/questions/clipboard.ts","../src/background/core/questions/contenteditable.ts","../src/background/core/questions/number.ts","../src/background/core/questions/radio.ts","../src/background/core/questions/checkbox.ts","../src/background/core/questions/select.ts","../src/background/core/questions/textbox.ts","../src/background/core/questions/atto.ts","../src/background/core/reply.ts","../src/background/core/create-question.ts","../src/background/core/get-response.ts","../src/background/utils/fixe-o1.ts","../src/background/core/modes/clipboard.ts","../src/background/core/modes/question-to-answer.ts","../src/background/core/modes/autocomplete.ts","../src/background/core/code-listener.ts","../src/background/index.ts"],"sourcesContent":[null,"/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n",null,null,null,null,null,null,"export const default_format = 'RFC3986';\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: (v) => String(v),\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\nconst hex_table = (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (is_array(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (is_array(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) ||\n                !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (is_array(target) && !is_array(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (is_array(target) && is_array(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (is_array(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map } from \"./utils.mjs\";\nimport { default_format, formatters } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function (arr, value_or_array) {\n    push.apply(arr, is_array(value_or_array) ? value_or_array : [value_or_array]);\n};\nconst to_ISO = Date.prototype.toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: formatters[default_format],\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return to_ISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (is_array(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = is_array(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && is_array(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || is_array(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (is_array(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export const VERSION = '4.104.0'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nexport const init = () => {\n  if (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\n};\nexport * from './registry.mjs';\n\ninit();\n","import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import … from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.request_id = headers?.['x-request-id'];\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\n//# sourceMappingURL=error.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LineDecoder_carriageReturnIndex;\nimport { OpenAIError } from \"../../error.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        this.buffer = new Uint8Array();\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(this.buffer.length + binaryChunk.length);\n        newData.set(this.buffer);\n        newData.set(binaryChunk, this.buffer.length);\n        this.buffer = newData;\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(this.buffer, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(this.decodeText(this.buffer.slice(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                this.buffer = this.buffer.slice(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"));\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = this.decodeText(this.buffer.slice(0, endIndex));\n            lines.push(line);\n            this.buffer = this.buffer.slice(patternIndex.index);\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=stream-utils.mjs.map","import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"./internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"./internal/stream-utils.mjs\";\nimport { createResponseHeaders } from \"./core.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null ||\n                        sse.event.startsWith('response.') ||\n                        sse.event.startsWith('transcript.')) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, createResponseHeaders(response.headers));\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, init, } from \"./_shims/index.mjs\";\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\ninit();\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const mediaType = contentType?.split(';')[0]?.trim();\n    const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return _addRequestID(json, response);\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\nfunction _addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overriddenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts) => {\n            const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n                : opts?.body instanceof DataView ? opts.body\n                    : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n                        : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n                            : opts?.body;\n            return { method, path, ...opts, body };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = { ...inputOptions };\n        const { method, path, query, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n            options.body\n            : isMultipartBody(options.body) ? options.body.body\n                : options.body ? JSON.stringify(options.body, null, 2)\n                    : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!inputOptions.idempotencyKey)\n                inputOptions.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = inputOptions.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n            getHeader(headers, 'x-stainless-timeout') === undefined &&\n            options.timeout) {\n            reqHeaders['x-stainless-timeout'] = String(Math.trunc(options.timeout / 1000));\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options,\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        return (\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __metadata: true,\n    __binaryRequest: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nconst SENSITIVE_HEADERS = new Set(['authorization', 'api-key']);\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        const modifiedArgs = args.map((arg) => {\n            if (!arg) {\n                return arg;\n            }\n            // Check for sensitive headers in request body 'headers' object\n            if (arg['headers']) {\n                // clone so we don't mutate\n                const modifiedArg = { ...arg, headers: { ...arg['headers'] } };\n                for (const header in arg['headers']) {\n                    if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                        modifiedArg['headers'][header] = 'REDACTED';\n                    }\n                }\n                return modifiedArg;\n            }\n            let modifiedArg = null;\n            // Check for sensitive headers in headers object\n            for (const header in arg) {\n                if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                    // avoid making a copy until we need to\n                    modifiedArg ?? (modifiedArg = { ...arg });\n                    modifiedArg[header] = 'REDACTED';\n                }\n            }\n            return modifiedArg ?? arg;\n        });\n        console.log(`OpenAI:DEBUG:${action}`, ...modifiedArgs);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */\nexport const toFloat32Array = (base64Str) => {\n    if (typeof Buffer !== 'undefined') {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, 'base64');\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    }\n    else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    /**\n     * This page represents a response that isn't actually paginated at the API level\n     * so there will never be any next page params.\n     */\n    nextPageParams() {\n        return null;\n    }\n    nextPageInfo() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        const data = this.getPaginatedItems();\n        if (!data.length) {\n            return null;\n        }\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return { params: { after: id } };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { ChatCompletionStoreMessagesPage } from \"./completions.mjs\";\nexport class Messages extends APIResource {\n    list(completionId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(completionId, {}, query);\n        }\n        return this._client.getAPIList(`/chat/completions/${completionId}/messages`, ChatCompletionStoreMessagesPage, { query, ...options });\n    }\n}\nexport { ChatCompletionStoreMessagesPage };\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages } from \"./messages.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Completions extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion =\n     *   await client.chat.completions.retrieve('completion_id');\n     * ```\n     */\n    retrieve(completionId, options) {\n        return this._client.get(`/chat/completions/${completionId}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion = await client.chat.completions.update(\n     *   'completion_id',\n     *   { metadata: { foo: 'string' } },\n     * );\n     * ```\n     */\n    update(completionId, body, options) {\n        return this._client.post(`/chat/completions/${completionId}`, { body, ...options });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/chat/completions', ChatCompletionsPage, { query, ...options });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     *\n     * @example\n     * ```ts\n     * const chatCompletionDeleted =\n     *   await client.chat.completions.del('completion_id');\n     * ```\n     */\n    del(completionId, options) {\n        return this._client.delete(`/chat/completions/${completionId}`, options);\n    }\n}\nexport class ChatCompletionsPage extends CursorPage {\n}\nexport class ChatCompletionStoreMessagesPage extends CursorPage {\n}\nCompletions.ChatCompletionsPage = ChatCompletionsPage;\nCompletions.Messages = Messages;\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions/completions.mjs\";\nimport { ChatCompletionsPage, Completions, } from \"./completions/completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\nChat.ChatCompletionsPage = ChatCompletionsPage;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'input',\n     *   model: 'string',\n     *   voice: 'ash',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: { Accept: 'application/octet-stream', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', Core.multipartFormRequestOptions({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: { model: body.model },\n        }));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', Core.multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchId, options) {\n        return this._client.get(`/batches/${batchId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/batches', BatchesPage, { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchId, options) {\n        return this._client.post(`/batches/${batchId}/cancel`, options);\n    }\n}\nexport class BatchesPage extends CursorPage {\n}\nBatches.BatchesPage = BatchesPage;\n//# sourceMappingURL=batches.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AssistantStream_instances, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport * as Core from \"../core.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(threadId, runId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runToolAssistantStream(threadId, runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, threadId, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(threadId, runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (Core.isObj(accValue) && Core.isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!Core.isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(threadId, runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, threadId, runId, params, options);\n    }\n}\n_AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.incomplete':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return AssistantStream.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\nfunction assertNever(_x) { }\n//# sourceMappingURL=AssistantStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nimport { AssistantStream } from \"../../lib/AssistantStream.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.create({\n     *   model: 'gpt-4o',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.retrieve(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    retrieve(assistantId, options) {\n        return this._client.get(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.update(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    update(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/assistants', AssistantsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistantDeleted = await client.beta.assistants.del(\n     *   'assistant_id',\n     * );\n     * ```\n     */\n    del(assistantId, options) {\n        return this._client.delete(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class AssistantsPage extends CursorPage {\n}\nAssistants.AssistantsPage = AssistantsPage;\n//# sourceMappingURL=assistants.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function makeParseableTextFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => ({\n                ...choice,\n                message: {\n                    ...choice.message,\n                    parsed: null,\n                    ...(choice.message.tool_calls ?\n                        {\n                            tool_calls: choice.message.tool_calls,\n                        }\n                        : undefined),\n                },\n            })),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...(choice.message.tool_calls ?\n                    {\n                        tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n                    }\n                    : undefined),\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { OpenAIError } from \"../error.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runFunctions(client, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            const { function_call, ...rest } = message;\n            // TODO: support audio here\n            const ret = {\n                ...rest,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            if (function_call) {\n                ret.function_call = function_call;\n            }\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError, LengthFinishReasonError, ContentFilterFinishReasonError, } from \"../error.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name);\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingFunction, ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner, } from \"../../../lib/ChatCompletionRunner.mjs\";\nexport class Completions extends APIResource {\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'beta.chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runFunctions(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runFunctions(this._client, body, options);\n        }\n        return ChatCompletionRunner.runFunctions(this._client, body, options);\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const session =\n     *   await client.beta.realtime.sessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class TranscriptionSessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const transcriptionSession =\n     *   await client.beta.realtime.transcriptionSessions.create();\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/realtime/transcription_sessions', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\n//# sourceMappingURL=transcription-sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nimport * as TranscriptionSessionsAPI from \"./transcription-sessions.mjs\";\nimport { TranscriptionSessions, } from \"./transcription-sessions.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n        this.transcriptionSessions = new TranscriptionSessionsAPI.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\nRealtime.TranscriptionSessions = TranscriptionSessions;\n//# sourceMappingURL=realtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieve a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(threadId, messageId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(threadId, messageId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages`, MessagesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Deletes a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    del(threadId, messageId, options) {\n        return this._client.delete(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class MessagesPage extends CursorPage {\n}\nMessages.MessagesPage = MessagesPage;\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Steps extends APIResource {\n    retrieve(threadId, runId, stepId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(threadId, runId, stepId, {}, query);\n        }\n        return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class RunStepsPage extends CursorPage {\n}\nSteps.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../core.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { RunStepsPage, Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadId, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(`/threads/${threadId}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(threadId, runId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    cancel(threadId, runId, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(threadId, runId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: run, response } = await this.retrieve(threadId, runId, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(threadId, runId, body, options) {\n        const run = await this.submitToolOutputs(threadId, runId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(threadId, runId, body, options) {\n        return AssistantStream.createToolAssistantStream(threadId, runId, this._client.beta.threads.runs, body, options);\n    }\n}\nexport class RunsPage extends CursorPage {\n}\nRuns.RunsPage = RunsPage;\nRuns.Steps = Steps;\nRuns.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, MessagesPage, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, RunsPage, } from \"./runs/runs.mjs\";\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body = {}, options) {\n        if (isRequestOptions(body)) {\n            return this.create({}, body);\n        }\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    retrieve(threadId, options) {\n        return this._client.get(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    update(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */\n    del(threadId, options) {\n        return this._client.delete(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.thread_id, run.id, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.RunsPage = RunsPage;\nThreads.Messages = Messages;\nThreads.MessagesPage = MessagesPage;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport * as ChatAPI from \"./chat/chat.mjs\";\nimport { Assistants, AssistantsPage, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime, } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nimport { Chat } from \"./chat/chat.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.chat = new ChatAPI.Chat(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.AssistantsPage = AssistantsPage;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class Content extends APIResource {\n    /**\n     * Retrieve Container File Content\n     */\n    retrieve(containerId, fileId, options) {\n        return this._client.get(`/containers/${containerId}/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/binary', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=content.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as Core from \"../../../core.mjs\";\nimport * as ContentAPI from \"./content.mjs\";\nimport { Content } from \"./content.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Files extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.content = new ContentAPI.Content(this._client);\n    }\n    /**\n     * Create a Container File\n     *\n     * You can send either a multipart/form-data request with the raw file content, or\n     * a JSON request with a file ID.\n     */\n    create(containerId, body, options) {\n        return this._client.post(`/containers/${containerId}/files`, Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Retrieve Container File\n     */\n    retrieve(containerId, fileId, options) {\n        return this._client.get(`/containers/${containerId}/files/${fileId}`, options);\n    }\n    list(containerId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(containerId, {}, query);\n        }\n        return this._client.getAPIList(`/containers/${containerId}/files`, FileListResponsesPage, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Delete Container File\n     */\n    del(containerId, fileId, options) {\n        return this._client.delete(`/containers/${containerId}/files/${fileId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n}\nexport class FileListResponsesPage extends CursorPage {\n}\nFiles.FileListResponsesPage = FileListResponsesPage;\nFiles.Content = Content;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport * as FilesAPI from \"./files/files.mjs\";\nimport { FileListResponsesPage, Files, } from \"./files/files.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Containers extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create Container\n     */\n    create(body, options) {\n        return this._client.post('/containers', { body, ...options });\n    }\n    /**\n     * Retrieve Container\n     */\n    retrieve(containerId, options) {\n        return this._client.get(`/containers/${containerId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/containers', ContainerListResponsesPage, { query, ...options });\n    }\n    /**\n     * Delete Container\n     */\n    del(containerId, options) {\n        return this._client.delete(`/containers/${containerId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n}\nexport class ContainerListResponsesPage extends CursorPage {\n}\nContainers.ContainerListResponsesPage = ContainerListResponsesPage;\nContainers.Files = Files;\nContainers.FileListResponsesPage = FileListResponsesPage;\n//# sourceMappingURL=containers.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'text-embedding-3-small',\n     *   });\n     * ```\n     */\n    create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : 'base64';\n        if (hasUserProvidedEncodingFormat) {\n            Core.debug('Request', 'User defined encoding_format:', body.encoding_format);\n        }\n        const response = this._client.post('/embeddings', {\n            body: {\n                ...body,\n                encoding_format: encoding_format,\n            },\n            ...options,\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        Core.debug('response', 'Decoding base64 embeddings to float32 array');\n        return response._thenUnwrap((response) => {\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj) => {\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = Core.toFloat32Array(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class OutputItems extends APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */\n    retrieve(evalId, runId, outputItemId, options) {\n        return this._client.get(`/evals/${evalId}/runs/${runId}/output_items/${outputItemId}`, options);\n    }\n    list(evalId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(evalId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/evals/${evalId}/runs/${runId}/output_items`, OutputItemListResponsesPage, { query, ...options });\n    }\n}\nexport class OutputItemListResponsesPage extends CursorPage {\n}\nOutputItems.OutputItemListResponsesPage = OutputItemListResponsesPage;\n//# sourceMappingURL=output-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as OutputItemsAPI from \"./output-items.mjs\";\nimport { OutputItemListResponsesPage, OutputItems, } from \"./output-items.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.outputItems = new OutputItemsAPI.OutputItems(this._client);\n    }\n    /**\n     * Kicks off a new run for a given evaluation, specifying the data source, and what\n     * model configuration to use to test. The datasource will be validated against the\n     * schema specified in the config of the evaluation.\n     */\n    create(evalId, body, options) {\n        return this._client.post(`/evals/${evalId}/runs`, { body, ...options });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */\n    retrieve(evalId, runId, options) {\n        return this._client.get(`/evals/${evalId}/runs/${runId}`, options);\n    }\n    list(evalId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(evalId, {}, query);\n        }\n        return this._client.getAPIList(`/evals/${evalId}/runs`, RunListResponsesPage, { query, ...options });\n    }\n    /**\n     * Delete an eval run.\n     */\n    del(evalId, runId, options) {\n        return this._client.delete(`/evals/${evalId}/runs/${runId}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */\n    cancel(evalId, runId, options) {\n        return this._client.post(`/evals/${evalId}/runs/${runId}`, options);\n    }\n}\nexport class RunListResponsesPage extends CursorPage {\n}\nRuns.RunListResponsesPage = RunListResponsesPage;\nRuns.OutputItems = OutputItems;\nRuns.OutputItemListResponsesPage = OutputItemListResponsesPage;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { RunListResponsesPage, Runs, } from \"./runs/runs.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Evals extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and the config for a\n     * data source, which dictates the schema of the data used in the evaluation. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */\n    create(body, options) {\n        return this._client.post('/evals', { body, ...options });\n    }\n    /**\n     * Get an evaluation by ID.\n     */\n    retrieve(evalId, options) {\n        return this._client.get(`/evals/${evalId}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */\n    update(evalId, body, options) {\n        return this._client.post(`/evals/${evalId}`, { body, ...options });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/evals', EvalListResponsesPage, { query, ...options });\n    }\n    /**\n     * Delete an evaluation.\n     */\n    del(evalId, options) {\n        return this._client.delete(`/evals/${evalId}`, options);\n    }\n}\nexport class EvalListResponsesPage extends CursorPage {\n}\nEvals.EvalListResponsesPage = EvalListResponsesPage;\nEvals.Runs = Runs;\nEvals.RunListResponsesPage = RunListResponsesPage;\n//# sourceMappingURL=evals.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { sleep } from \"../core.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport * as Core from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 100 GB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileId, options) {\n        return this._client.get(`/files/${fileId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    del(fileId, options) {\n        return this._client.delete(`/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/binary', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Returns the contents of the specified file.\n     *\n     * @deprecated The `.content()` method should be used instead\n     */\n    retrieveContent(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, options);\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\nexport class FileObjectsPage extends CursorPage {\n}\nFiles.FileObjectsPage = FileObjectsPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Methods extends APIResource {\n}\n//# sourceMappingURL=methods.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class Graders extends APIResource {\n    /**\n     * Run a grader.\n     *\n     * @example\n     * ```ts\n     * const response = await client.fineTuning.alpha.graders.run({\n     *   grader: {\n     *     input: 'input',\n     *     name: 'name',\n     *     operation: 'eq',\n     *     reference: 'reference',\n     *     type: 'string_check',\n     *   },\n     *   model_sample: 'model_sample',\n     *   reference_answer: 'string',\n     * });\n     * ```\n     */\n    run(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/run', { body, ...options });\n    }\n    /**\n     * Validate a grader.\n     *\n     * @example\n     * ```ts\n     * const response =\n     *   await client.fineTuning.alpha.graders.validate({\n     *     grader: {\n     *       input: 'input',\n     *       name: 'name',\n     *       operation: 'eq',\n     *       reference: 'reference',\n     *       type: 'string_check',\n     *     },\n     *   });\n     * ```\n     */\n    validate(body, options) {\n        return this._client.post('/fine_tuning/alpha/graders/validate', { body, ...options });\n    }\n}\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as GradersAPI from \"./graders.mjs\";\nimport { Graders, } from \"./graders.mjs\";\nexport class Alpha extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graders = new GradersAPI.Graders(this._client);\n    }\n}\nAlpha.Graders = Graders;\n//# sourceMappingURL=alpha.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { Page } from \"../../../pagination.mjs\";\nexport class Permissions extends APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n     *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *   { project_ids: ['string'] },\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */\n    create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, PermissionCreateResponsesPage, { body, method: 'post', ...options });\n    }\n    retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(fineTunedModelCheckpoint, {}, query);\n        }\n        return this._client.get(`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.del(\n     *     'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n     *   );\n     * ```\n     */\n    del(fineTunedModelCheckpoint, permissionId, options) {\n        return this._client.delete(`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions/${permissionId}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class PermissionCreateResponsesPage extends Page {\n}\nPermissions.PermissionCreateResponsesPage = PermissionCreateResponsesPage;\n//# sourceMappingURL=permissions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as PermissionsAPI from \"./permissions.mjs\";\nimport { PermissionCreateResponsesPage, Permissions, } from \"./permissions.mjs\";\nexport class Checkpoints extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.permissions = new PermissionsAPI.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = Permissions;\nCheckpoints.PermissionCreateResponsesPage = PermissionCreateResponsesPage;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Checkpoints extends APIResource {\n    list(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/checkpoints`, FineTuningJobCheckpointsPage, { query, ...options });\n    }\n}\nexport class FineTuningJobCheckpointsPage extends CursorPage {\n}\nCheckpoints.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, FineTuningJobCheckpointsPage, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.create({\n     *   model: 'gpt-4o-mini',\n     *   training_file: 'file-abc123',\n     * });\n     * ```\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    retrieve(fineTuningJobId, options) {\n        return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.cancel(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    cancel(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n    }\n    listEvents(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listEvents(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * Pause a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.pause(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    pause(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/pause`, options);\n    }\n    /**\n     * Resume a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.resume(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */\n    resume(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/resume`, options);\n    }\n}\nexport class FineTuningJobsPage extends CursorPage {\n}\nexport class FineTuningJobEventsPage extends CursorPage {\n}\nJobs.FineTuningJobsPage = FineTuningJobsPage;\nJobs.FineTuningJobEventsPage = FineTuningJobEventsPage;\nJobs.Checkpoints = Checkpoints;\nJobs.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as MethodsAPI from \"./methods.mjs\";\nimport { Methods, } from \"./methods.mjs\";\nimport * as AlphaAPI from \"./alpha/alpha.mjs\";\nimport { Alpha } from \"./alpha/alpha.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints/checkpoints.mjs\";\nimport { Checkpoints } from \"./checkpoints/checkpoints.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { FineTuningJobEventsPage, FineTuningJobsPage, Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.methods = new MethodsAPI.Methods(this._client);\n        this.jobs = new JobsAPI.Jobs(this._client);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n        this.alpha = new AlphaAPI.Alpha(this._client);\n    }\n}\nFineTuning.Methods = Methods;\nFineTuning.Jobs = Jobs;\nFineTuning.FineTuningJobsPage = FineTuningJobsPage;\nFineTuning.FineTuningJobEventsPage = FineTuningJobEventsPage;\nFineTuning.Checkpoints = Checkpoints;\nFineTuning.Alpha = Alpha;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class GraderModels extends APIResource {\n}\n//# sourceMappingURL=grader-models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as GraderModelsAPI from \"./grader-models.mjs\";\nimport { GraderModels, } from \"./grader-models.mjs\";\nexport class Graders extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.graderModels = new GraderModelsAPI.GraderModels(this._client);\n    }\n}\nGraders.GraderModels = GraderModels;\n//# sourceMappingURL=graders.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.createVariation({\n     *   image: fs.createReadStream('otter.png'),\n     * });\n     * ```\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an edited or extended image given one or more source images and a\n     * prompt. This endpoint only supports `gpt-image-1` and `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.edit({\n     *   image: fs.createReadStream('path/to/file'),\n     *   prompt: 'A cute baby sea otter wearing a beret',\n     * });\n     * ```\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an image given a prompt.\n     * [Learn more](https://platform.openai.com/docs/guides/images).\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.generate({\n     *   prompt: 'A cute baby sea otter',\n     * });\n     * ```\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', ModelsPage, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    del(model, options) {\n        return this._client.delete(`/models/${model}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {\n}\nModels.ModelsPage = ModelsPage;\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","import { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableResponseFormat } from \"../lib/parser.mjs\";\nexport function maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item) => {\n                if (item.type === 'function_call') {\n                    return {\n                        ...item,\n                        parsed_arguments: null,\n                    };\n                }\n                if (item.type === 'message') {\n                    return {\n                        ...item,\n                        content: item.content.map((content) => ({\n                            ...content,\n                            parsed: null,\n                        })),\n                    };\n                }\n                else {\n                    return item;\n                }\n            }),\n        };\n    }\n    return parseResponse(response, params);\n}\nexport function parseResponse(response, params) {\n    const output = response.output.map((item) => {\n        if (item.type === 'function_call') {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item),\n            };\n        }\n        if (item.type === 'message') {\n            const content = item.content.map((content) => {\n                if (content.type === 'output_text') {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text),\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content,\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, { output });\n    if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, 'output_parsed', {\n        enumerable: true,\n        get() {\n            for (const output of parsed.output) {\n                if (output.type !== 'message') {\n                    continue;\n                }\n                for (const content of output.content) {\n                    if (content.type === 'output_text' && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        },\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== 'json_schema') {\n        return null;\n    }\n    if ('$parseRaw' in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nexport function makeParseableResponseTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool) => tool.type === 'function' && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n            : inputTool?.strict ? JSON.parse(toolCall.arguments)\n                : null,\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nexport function addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output) {\n        if (output.type !== 'message') {\n            continue;\n        }\n        for (const content of output.content) {\n            if (content.type === 'output_text') {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join('');\n}\n//# sourceMappingURL=ResponsesParser.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { ResponseItemsPage } from \"./responses.mjs\";\nexport class InputItems extends APIResource {\n    list(responseId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(responseId, {}, query);\n        }\n        return this._client.getAPIList(`/responses/${responseId}/input_items`, ResponseItemsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport { ResponseItemsPage };\n//# sourceMappingURL=input-items.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\nimport { APIUserAbortError, OpenAIError } from \"../../error.mjs\";\nimport { EventStream } from \"../EventStream.mjs\";\nimport { maybeParseResponse } from \"../ResponsesParser.mjs\";\nexport class ResponseStream extends EventStream {\n    constructor(params) {\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        __classPrivateFieldSet(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(() => runner._createOrRetrieveResponse(client, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createOrRetrieveResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        let stream;\n        let starting_after = null;\n        if ('response_id' in params) {\n            stream = await client.responses.retrieve(params.response_id, { stream: true }, { ...options, signal: this.controller.signal, stream: true });\n            starting_after = params.starting_after ?? null;\n        }\n        else {\n            stream = await client.responses.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        }\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event, starting_after);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event, starting_after) {\n        if (this.ended)\n            return;\n        const maybeEmit = (name, event) => {\n            if (starting_after == null || event.sequence_number > starting_after) {\n                this._emit(name, event);\n            }\n        };\n        const response = __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        maybeEmit('event', event);\n        switch (event.type) {\n            case 'response.output_text.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    maybeEmit('response.output_text.delta', {\n                        ...event,\n                        snapshot: content.text,\n                    });\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    maybeEmit('response.function_call_arguments.delta', {\n                        ...event,\n                        snapshot: output.arguments,\n                    });\n                }\n                break;\n            }\n            default:\n                maybeEmit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any events`);\n        }\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, __classPrivateFieldGet(this, _ResponseStream_params, \"f\"));\n        __classPrivateFieldSet(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== 'response.created') {\n                throw new OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch (event.type) {\n            case 'response.output_item.added': {\n                snapshot.output.push(event.item);\n                break;\n            }\n            case 'response.content_part.added': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    output.content.push(event.part);\n                }\n                break;\n            }\n            case 'response.output_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    output.arguments += event.delta;\n                }\n                break;\n            }\n            case 'response.completed': {\n                __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                break;\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n                }\n                const event = pushQueue.shift();\n                return { value: event, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */\n    async finalResponse() {\n        await this.done();\n        const response = __classPrivateFieldGet(this, _ResponseStream_finalResponse, \"f\");\n        if (!response)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return maybeParseResponse(snapshot, params);\n}\n//# sourceMappingURL=ResponseStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { parseResponse, addOutputText, } from \"../../lib/ResponsesParser.mjs\";\nimport { APIResource } from \"../../resource.mjs\";\nimport * as InputItemsAPI from \"./input-items.mjs\";\nimport { InputItems } from \"./input-items.mjs\";\nimport { ResponseStream } from \"../../lib/responses/ResponseStream.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Responses extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.inputItems = new InputItemsAPI.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/responses', { body, ...options, stream: body.stream ?? false })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseId, query = {}, options) {\n        return this._client.get(`/responses/${responseId}`, {\n            query,\n            ...options,\n            stream: query?.stream ?? false,\n        });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     *\n     * @example\n     * ```ts\n     * await client.responses.del(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    del(responseId, options) {\n        return this._client.delete(`/responses/${responseId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    parse(body, options) {\n        return this._client.responses\n            .create(body, options)\n            ._thenUnwrap((response) => parseResponse(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */\n    stream(body, options) {\n        return ResponseStream.createResponse(this._client, body, options);\n    }\n    /**\n     * Cancels a model response with the given ID. Only responses created with the\n     * `background` parameter set to `true` can be cancelled.\n     * [Learn more](https://platform.openai.com/docs/guides/background).\n     *\n     * @example\n     * ```ts\n     * await client.responses.cancel(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */\n    cancel(responseId, options) {\n        return this._client.post(`/responses/${responseId}/cancel`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n}\nexport class ResponseItemsPage extends CursorPage {\n}\nResponses.InputItems = InputItems;\n//# sourceMappingURL=responses.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/parts`, Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadId, options) {\n        return this._client.post(`/uploads/${uploadId}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { sleep, isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage, Page } from \"../../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(vectorStoreId, fileId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */\n    update(vectorStoreId, fileId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(vectorStoreId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(vectorStoreId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files`, VectorStoreFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    del(vectorStoreId, fileId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreId, fileId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const fileResponse = await this.retrieve(vectorStoreId, fileId, {\n                ...options,\n                headers,\n            }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */\n    content(vectorStoreId, fileId, options) {\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files/${fileId}/content`, FileContentResponsesPage, { ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n}\nexport class VectorStoreFilesPage extends CursorPage {\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileContentResponsesPage extends Page {\n}\nFiles.VectorStoreFilesPage = VectorStoreFilesPage;\nFiles.FileContentResponsesPage = FileContentResponsesPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { sleep } from \"../../core.mjs\";\nimport { allSettledWithThrow } from \"../../lib/Util.mjs\";\nimport { VectorStoreFilesPage } from \"./files.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(vectorStoreId, batchId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/file_batches/${batchId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(vectorStoreId, batchId, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    listFiles(vectorStoreId, batchId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listFiles(vectorStoreId, batchId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/files`, VectorStoreFilesPage, { query, ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreId, batchId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: batch, response } = await this.retrieve(vectorStoreId, batchId, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\nexport { VectorStoreFilesPage };\n//# sourceMappingURL=file-batches.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { FileContentResponsesPage, Files, VectorStoreFilesPage, } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../pagination.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/vector_stores', VectorStoresPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    del(vectorStoreId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */\n    search(vectorStoreId, body, options) {\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/search`, VectorStoreSearchResponsesPage, {\n            body,\n            method: 'post',\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class VectorStoresPage extends CursorPage {\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class VectorStoreSearchResponsesPage extends Page {\n}\nVectorStores.VectorStoresPage = VectorStoresPage;\nVectorStores.VectorStoreSearchResponsesPage = VectorStoreSearchResponsesPage;\nVectorStores.Files = Files;\nVectorStores.VectorStoreFilesPage = VectorStoreFilesPage;\nVectorStores.FileContentResponsesPage = FileContentResponsesPage;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as qs from \"./internal/qs/index.mjs\";\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Batches, BatchesPage, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { FileObjectsPage, Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models, ModelsPage } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { ContainerListResponsesPage, Containers, } from \"./resources/containers/containers.mjs\";\nimport { EvalListResponsesPage, Evals, } from \"./resources/evals/evals.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Graders } from \"./resources/graders/graders.mjs\";\nimport { Responses } from \"./resources/responses/responses.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\nimport { VectorStoreSearchResponsesPage, VectorStores, VectorStoresPage, } from \"./resources/vector-stores/vector-stores.mjs\";\nimport { ChatCompletionsPage, } from \"./resources/chat/completions/completions.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, project = Core.readEnv('OPENAI_PROJECT_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.graders = new API.Graders(this);\n        this.vectorStores = new API.VectorStores(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this.responses = new API.Responses(this);\n        this.evals = new API.Evals(this);\n        this.containers = new API.Containers(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            'OpenAI-Project': this.project,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.fileFromPath = Uploads.fileFromPath;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.ChatCompletionsPage = ChatCompletionsPage;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.FileObjectsPage = FileObjectsPage;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.ModelsPage = ModelsPage;\nOpenAI.FineTuning = FineTuning;\nOpenAI.Graders = Graders;\nOpenAI.VectorStores = VectorStores;\nOpenAI.VectorStoresPage = VectorStoresPage;\nOpenAI.VectorStoreSearchResponsesPage = VectorStoreSearchResponsesPage;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.BatchesPage = BatchesPage;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\nOpenAI.Evals = Evals;\nOpenAI.EvalListResponsesPage = EvalListResponsesPage;\nOpenAI.Containers = Containers;\nOpenAI.ContainerListResponsesPage = ContainerListResponsesPage;\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('AZURE_OPENAI_API_KEY'), apiVersion = Core.readEnv('OPENAI_API_VERSION'), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}) {\n        if (!apiVersion) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === 'function') {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n        }\n        // define a sentinel value to avoid any typing issues\n        apiKey ?? (apiKey = API_KEY_SENTINEL);\n        opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n            }\n            if (!endpoint) {\n                throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n            }\n            baseURL = `${endpoint}/openai`;\n        }\n        else {\n            if (endpoint) {\n                throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n            }\n        }\n        super({\n            apiKey,\n            baseURL,\n            ...opts,\n            ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n        });\n        this.apiVersion = '';\n        this._azureADTokenProvider = azureADTokenProvider;\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n            if (!Core.isObj(options.body)) {\n                throw new Error('Expected request body to be an object');\n            }\n            const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n            if (model !== undefined && !this.baseURL.includes('/deployments')) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async _getAzureADToken() {\n        if (typeof this._azureADTokenProvider === 'function') {\n            const token = await this._azureADTokenProvider();\n            if (!token || typeof token !== 'string') {\n                throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n            }\n            return token;\n        }\n        return undefined;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    async prepareOptions(opts) {\n        /**\n         * The user should provide a bearer token provider if they want\n         * to use Azure AD authentication. The user shouldn't set the\n         * Authorization header manually because the header is overwritten\n         * with the Azure AD token if a bearer token provider is provided.\n         */\n        if (opts.headers?.['api-key']) {\n            return super.prepareOptions(opts);\n        }\n        const token = await this._getAzureADToken();\n        opts.headers ?? (opts.headers = {});\n        if (token) {\n            opts.headers['Authorization'] = `Bearer ${token}`;\n        }\n        else if (this.apiKey !== API_KEY_SENTINEL) {\n            opts.headers['api-key'] = this.apiKey;\n        }\n        else {\n            throw new Errors.OpenAIError('Unable to handle auth');\n        }\n        return super.prepareOptions(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    '/completions',\n    '/chat/completions',\n    '/embeddings',\n    '/audio/transcriptions',\n    '/audio/translations',\n    '/audio/speech',\n    '/images/generations',\n    '/images/edits',\n]);\nconst API_KEY_SENTINEL = '<Missing Key>';\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from \"./error.mjs\";\nexport default OpenAI;\n//# sourceMappingURL=index.mjs.map","export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n","import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n","import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n","import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n","export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n","import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n","import { z } from 'zod';\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nlet _defaultBaseGeminiUrl = undefined;\nlet _defaultBaseVertexUrl = undefined;\n/**\n * Overrides the base URLs for the Gemini API and Vertex AI API.\n *\n * @remarks This function should be called before initializing the SDK. If the\n * base URLs are set after initializing the SDK, the base URLs will not be\n * updated. Base URLs provided in the HttpOptions will also take precedence over\n * URLs set here.\n *\n * @example\n * ```ts\n * import {GoogleGenAI, setDefaultBaseUrls} from '@google/genai';\n * // Override the base URL for the Gemini API.\n * setDefaultBaseUrls({geminiUrl:'https://gemini.google.com'});\n *\n * // Override the base URL for the Vertex AI API.\n * setDefaultBaseUrls({vertexUrl: 'https://vertexai.googleapis.com'});\n *\n * const ai = new GoogleGenAI({apiKey: 'GEMINI_API_KEY'});\n * ```\n */\nfunction setDefaultBaseUrls(baseUrlParams) {\n    _defaultBaseGeminiUrl = baseUrlParams.geminiUrl;\n    _defaultBaseVertexUrl = baseUrlParams.vertexUrl;\n}\n/**\n * Returns the default base URLs for the Gemini API and Vertex AI API.\n */\nfunction getDefaultBaseUrls() {\n    return {\n        geminiUrl: _defaultBaseGeminiUrl,\n        vertexUrl: _defaultBaseVertexUrl,\n    };\n}\n/**\n * Returns the default base URL based on the following priority:\n *   1. Base URLs set via HttpOptions.\n *   2. Base URLs set via the latest call to setDefaultBaseUrls.\n *   3. Base URLs set via environment variables.\n */\nfunction getBaseUrl(options, vertexBaseUrlFromEnv, geminiBaseUrlFromEnv) {\n    var _a, _b, _c;\n    if (!((_a = options.httpOptions) === null || _a === void 0 ? void 0 : _a.baseUrl)) {\n        const defaultBaseUrls = getDefaultBaseUrls();\n        if (options.vertexai) {\n            return (_b = defaultBaseUrls.vertexUrl) !== null && _b !== void 0 ? _b : vertexBaseUrlFromEnv;\n        }\n        else {\n            return (_c = defaultBaseUrls.geminiUrl) !== null && _c !== void 0 ? _c : geminiBaseUrlFromEnv;\n        }\n    }\n    return options.httpOptions.baseUrl;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass BaseModule {\n}\nfunction formatMap(templateString, valueMap) {\n    // Use a regular expression to find all placeholders in the template string\n    const regex = /\\{([^}]+)\\}/g;\n    // Replace each placeholder with its corresponding value from the valueMap\n    return templateString.replace(regex, (match, key) => {\n        if (Object.prototype.hasOwnProperty.call(valueMap, key)) {\n            const value = valueMap[key];\n            // Convert the value to a string if it's not a string already\n            return value !== undefined && value !== null ? String(value) : '';\n        }\n        else {\n            // Handle missing keys\n            throw new Error(`Key '${key}' not found in valueMap.`);\n        }\n    });\n}\nfunction setValueByPath(data, keys, value) {\n    for (let i = 0; i < keys.length - 1; i++) {\n        const key = keys[i];\n        if (key.endsWith('[]')) {\n            const keyName = key.slice(0, -2);\n            if (!(keyName in data)) {\n                if (Array.isArray(value)) {\n                    data[keyName] = Array.from({ length: value.length }, () => ({}));\n                }\n                else {\n                    throw new Error(`Value must be a list given an array path ${key}`);\n                }\n            }\n            if (Array.isArray(data[keyName])) {\n                const arrayData = data[keyName];\n                if (Array.isArray(value)) {\n                    for (let j = 0; j < arrayData.length; j++) {\n                        const entry = arrayData[j];\n                        setValueByPath(entry, keys.slice(i + 1), value[j]);\n                    }\n                }\n                else {\n                    for (const d of arrayData) {\n                        setValueByPath(d, keys.slice(i + 1), value);\n                    }\n                }\n            }\n            return;\n        }\n        else if (key.endsWith('[0]')) {\n            const keyName = key.slice(0, -3);\n            if (!(keyName in data)) {\n                data[keyName] = [{}];\n            }\n            const arrayData = data[keyName];\n            setValueByPath(arrayData[0], keys.slice(i + 1), value);\n            return;\n        }\n        if (!data[key] || typeof data[key] !== 'object') {\n            data[key] = {};\n        }\n        data = data[key];\n    }\n    const keyToSet = keys[keys.length - 1];\n    const existingData = data[keyToSet];\n    if (existingData !== undefined) {\n        if (!value ||\n            (typeof value === 'object' && Object.keys(value).length === 0)) {\n            return;\n        }\n        if (value === existingData) {\n            return;\n        }\n        if (typeof existingData === 'object' &&\n            typeof value === 'object' &&\n            existingData !== null &&\n            value !== null) {\n            Object.assign(existingData, value);\n        }\n        else {\n            throw new Error(`Cannot set value for an existing key. Key: ${keyToSet}`);\n        }\n    }\n    else {\n        data[keyToSet] = value;\n    }\n}\nfunction getValueByPath(data, keys) {\n    try {\n        if (keys.length === 1 && keys[0] === '_self') {\n            return data;\n        }\n        for (let i = 0; i < keys.length; i++) {\n            if (typeof data !== 'object' || data === null) {\n                return undefined;\n            }\n            const key = keys[i];\n            if (key.endsWith('[]')) {\n                const keyName = key.slice(0, -2);\n                if (keyName in data) {\n                    const arrayData = data[keyName];\n                    if (!Array.isArray(arrayData)) {\n                        return undefined;\n                    }\n                    return arrayData.map((d) => getValueByPath(d, keys.slice(i + 1)));\n                }\n                else {\n                    return undefined;\n                }\n            }\n            else {\n                data = data[key];\n            }\n        }\n        return data;\n    }\n    catch (error) {\n        if (error instanceof TypeError) {\n            return undefined;\n        }\n        throw error;\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/** Required. Outcome of the code execution. */\nvar Outcome;\n(function (Outcome) {\n    /**\n     * Unspecified status. This value should not be used.\n     */\n    Outcome[\"OUTCOME_UNSPECIFIED\"] = \"OUTCOME_UNSPECIFIED\";\n    /**\n     * Code execution completed successfully.\n     */\n    Outcome[\"OUTCOME_OK\"] = \"OUTCOME_OK\";\n    /**\n     * Code execution finished but with a failure. `stderr` should contain the reason.\n     */\n    Outcome[\"OUTCOME_FAILED\"] = \"OUTCOME_FAILED\";\n    /**\n     * Code execution ran for too long, and was cancelled. There may or may not be a partial output present.\n     */\n    Outcome[\"OUTCOME_DEADLINE_EXCEEDED\"] = \"OUTCOME_DEADLINE_EXCEEDED\";\n})(Outcome || (Outcome = {}));\n/** Required. Programming language of the `code`. */\nvar Language;\n(function (Language) {\n    /**\n     * Unspecified language. This value should not be used.\n     */\n    Language[\"LANGUAGE_UNSPECIFIED\"] = \"LANGUAGE_UNSPECIFIED\";\n    /**\n     * Python >= 3.10, with numpy and simpy available.\n     */\n    Language[\"PYTHON\"] = \"PYTHON\";\n})(Language || (Language = {}));\n/** Optional. The type of the data. */\nvar Type;\n(function (Type) {\n    /**\n     * Not specified, should not be used.\n     */\n    Type[\"TYPE_UNSPECIFIED\"] = \"TYPE_UNSPECIFIED\";\n    /**\n     * OpenAPI string type\n     */\n    Type[\"STRING\"] = \"STRING\";\n    /**\n     * OpenAPI number type\n     */\n    Type[\"NUMBER\"] = \"NUMBER\";\n    /**\n     * OpenAPI integer type\n     */\n    Type[\"INTEGER\"] = \"INTEGER\";\n    /**\n     * OpenAPI boolean type\n     */\n    Type[\"BOOLEAN\"] = \"BOOLEAN\";\n    /**\n     * OpenAPI array type\n     */\n    Type[\"ARRAY\"] = \"ARRAY\";\n    /**\n     * OpenAPI object type\n     */\n    Type[\"OBJECT\"] = \"OBJECT\";\n    /**\n     * Null type\n     */\n    Type[\"NULL\"] = \"NULL\";\n})(Type || (Type = {}));\n/** Required. Harm category. */\nvar HarmCategory;\n(function (HarmCategory) {\n    /**\n     * The harm category is unspecified.\n     */\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    /**\n     * The harm category is hate speech.\n     */\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    /**\n     * The harm category is dangerous content.\n     */\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n    /**\n     * The harm category is harassment.\n     */\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    /**\n     * The harm category is sexually explicit content.\n     */\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    /**\n     * Deprecated: Election filter is not longer supported. The harm category is civic integrity.\n     */\n    HarmCategory[\"HARM_CATEGORY_CIVIC_INTEGRITY\"] = \"HARM_CATEGORY_CIVIC_INTEGRITY\";\n})(HarmCategory || (HarmCategory = {}));\n/** Optional. Specify if the threshold is used for probability or severity score. If not specified, the threshold is used for probability score. */\nvar HarmBlockMethod;\n(function (HarmBlockMethod) {\n    /**\n     * The harm block method is unspecified.\n     */\n    HarmBlockMethod[\"HARM_BLOCK_METHOD_UNSPECIFIED\"] = \"HARM_BLOCK_METHOD_UNSPECIFIED\";\n    /**\n     * The harm block method uses both probability and severity scores.\n     */\n    HarmBlockMethod[\"SEVERITY\"] = \"SEVERITY\";\n    /**\n     * The harm block method uses the probability score.\n     */\n    HarmBlockMethod[\"PROBABILITY\"] = \"PROBABILITY\";\n})(HarmBlockMethod || (HarmBlockMethod = {}));\n/** Required. The harm block threshold. */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    /**\n     * Unspecified harm block threshold.\n     */\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    /**\n     * Block low threshold and above (i.e. block more).\n     */\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    /**\n     * Block medium threshold and above.\n     */\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    /**\n     * Block only high threshold (i.e. block less).\n     */\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    /**\n     * Block none.\n     */\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n    /**\n     * Turn off the safety filter.\n     */\n    HarmBlockThreshold[\"OFF\"] = \"OFF\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/** The mode of the predictor to be used in dynamic retrieval. */\nvar Mode;\n(function (Mode) {\n    /**\n     * Always trigger retrieval.\n     */\n    Mode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    /**\n     * Run retrieval only when system decides it is necessary.\n     */\n    Mode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(Mode || (Mode = {}));\n/** Type of auth scheme. */\nvar AuthType;\n(function (AuthType) {\n    AuthType[\"AUTH_TYPE_UNSPECIFIED\"] = \"AUTH_TYPE_UNSPECIFIED\";\n    /**\n     * No Auth.\n     */\n    AuthType[\"NO_AUTH\"] = \"NO_AUTH\";\n    /**\n     * API Key Auth.\n     */\n    AuthType[\"API_KEY_AUTH\"] = \"API_KEY_AUTH\";\n    /**\n     * HTTP Basic Auth.\n     */\n    AuthType[\"HTTP_BASIC_AUTH\"] = \"HTTP_BASIC_AUTH\";\n    /**\n     * Google Service Account Auth.\n     */\n    AuthType[\"GOOGLE_SERVICE_ACCOUNT_AUTH\"] = \"GOOGLE_SERVICE_ACCOUNT_AUTH\";\n    /**\n     * OAuth auth.\n     */\n    AuthType[\"OAUTH\"] = \"OAUTH\";\n    /**\n     * OpenID Connect (OIDC) Auth.\n     */\n    AuthType[\"OIDC_AUTH\"] = \"OIDC_AUTH\";\n})(AuthType || (AuthType = {}));\n/** Output only. The reason why the model stopped generating tokens.\n\n  If empty, the model has not stopped generating the tokens.\n   */\nvar FinishReason;\n(function (FinishReason) {\n    /**\n     * The finish reason is unspecified.\n     */\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    /**\n     * Token generation reached a natural stopping point or a configured stop sequence.\n     */\n    FinishReason[\"STOP\"] = \"STOP\";\n    /**\n     * Token generation reached the configured maximum output tokens.\n     */\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    /**\n     * Token generation stopped because the content potentially contains safety violations. NOTE: When streaming, [content][] is empty if content filters blocks the output.\n     */\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    /**\n     * The token generation stopped because of potential recitation.\n     */\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    /**\n     * The token generation stopped because of using an unsupported language.\n     */\n    FinishReason[\"LANGUAGE\"] = \"LANGUAGE\";\n    /**\n     * All other reasons that stopped the token generation.\n     */\n    FinishReason[\"OTHER\"] = \"OTHER\";\n    /**\n     * Token generation stopped because the content contains forbidden terms.\n     */\n    FinishReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n    /**\n     * Token generation stopped for potentially containing prohibited content.\n     */\n    FinishReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n    /**\n     * Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII).\n     */\n    FinishReason[\"SPII\"] = \"SPII\";\n    /**\n     * The function call generated by the model is invalid.\n     */\n    FinishReason[\"MALFORMED_FUNCTION_CALL\"] = \"MALFORMED_FUNCTION_CALL\";\n    /**\n     * Token generation stopped because generated images have safety violations.\n     */\n    FinishReason[\"IMAGE_SAFETY\"] = \"IMAGE_SAFETY\";\n    /**\n     * The tool call generated by the model is invalid.\n     */\n    FinishReason[\"UNEXPECTED_TOOL_CALL\"] = \"UNEXPECTED_TOOL_CALL\";\n})(FinishReason || (FinishReason = {}));\n/** Output only. Harm probability levels in the content. */\nvar HarmProbability;\n(function (HarmProbability) {\n    /**\n     * Harm probability unspecified.\n     */\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    /**\n     * Negligible level of harm.\n     */\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    /**\n     * Low level of harm.\n     */\n    HarmProbability[\"LOW\"] = \"LOW\";\n    /**\n     * Medium level of harm.\n     */\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    /**\n     * High level of harm.\n     */\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/** Output only. Harm severity levels in the content. */\nvar HarmSeverity;\n(function (HarmSeverity) {\n    /**\n     * Harm severity unspecified.\n     */\n    HarmSeverity[\"HARM_SEVERITY_UNSPECIFIED\"] = \"HARM_SEVERITY_UNSPECIFIED\";\n    /**\n     * Negligible level of harm severity.\n     */\n    HarmSeverity[\"HARM_SEVERITY_NEGLIGIBLE\"] = \"HARM_SEVERITY_NEGLIGIBLE\";\n    /**\n     * Low level of harm severity.\n     */\n    HarmSeverity[\"HARM_SEVERITY_LOW\"] = \"HARM_SEVERITY_LOW\";\n    /**\n     * Medium level of harm severity.\n     */\n    HarmSeverity[\"HARM_SEVERITY_MEDIUM\"] = \"HARM_SEVERITY_MEDIUM\";\n    /**\n     * High level of harm severity.\n     */\n    HarmSeverity[\"HARM_SEVERITY_HIGH\"] = \"HARM_SEVERITY_HIGH\";\n})(HarmSeverity || (HarmSeverity = {}));\n/** Output only. Blocked reason. */\nvar BlockedReason;\n(function (BlockedReason) {\n    /**\n     * Unspecified blocked reason.\n     */\n    BlockedReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    /**\n     * Candidates blocked due to safety.\n     */\n    BlockedReason[\"SAFETY\"] = \"SAFETY\";\n    /**\n     * Candidates blocked due to other reason.\n     */\n    BlockedReason[\"OTHER\"] = \"OTHER\";\n    /**\n     * Candidates blocked due to the terms which are included from the terminology blocklist.\n     */\n    BlockedReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n    /**\n     * Candidates blocked due to prohibited content.\n     */\n    BlockedReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n})(BlockedReason || (BlockedReason = {}));\n/** Output only. Traffic type. This shows whether a request consumes Pay-As-You-Go or Provisioned Throughput quota. */\nvar TrafficType;\n(function (TrafficType) {\n    /**\n     * Unspecified request traffic type.\n     */\n    TrafficType[\"TRAFFIC_TYPE_UNSPECIFIED\"] = \"TRAFFIC_TYPE_UNSPECIFIED\";\n    /**\n     * Type for Pay-As-You-Go traffic.\n     */\n    TrafficType[\"ON_DEMAND\"] = \"ON_DEMAND\";\n    /**\n     * Type for Provisioned Throughput traffic.\n     */\n    TrafficType[\"PROVISIONED_THROUGHPUT\"] = \"PROVISIONED_THROUGHPUT\";\n})(TrafficType || (TrafficType = {}));\n/** Server content modalities. */\nvar Modality;\n(function (Modality) {\n    /**\n     * The modality is unspecified.\n     */\n    Modality[\"MODALITY_UNSPECIFIED\"] = \"MODALITY_UNSPECIFIED\";\n    /**\n     * Indicates the model should return text\n     */\n    Modality[\"TEXT\"] = \"TEXT\";\n    /**\n     * Indicates the model should return images.\n     */\n    Modality[\"IMAGE\"] = \"IMAGE\";\n    /**\n     * Indicates the model should return audio.\n     */\n    Modality[\"AUDIO\"] = \"AUDIO\";\n})(Modality || (Modality = {}));\n/** The media resolution to use. */\nvar MediaResolution;\n(function (MediaResolution) {\n    /**\n     * Media resolution has not been set\n     */\n    MediaResolution[\"MEDIA_RESOLUTION_UNSPECIFIED\"] = \"MEDIA_RESOLUTION_UNSPECIFIED\";\n    /**\n     * Media resolution set to low (64 tokens).\n     */\n    MediaResolution[\"MEDIA_RESOLUTION_LOW\"] = \"MEDIA_RESOLUTION_LOW\";\n    /**\n     * Media resolution set to medium (256 tokens).\n     */\n    MediaResolution[\"MEDIA_RESOLUTION_MEDIUM\"] = \"MEDIA_RESOLUTION_MEDIUM\";\n    /**\n     * Media resolution set to high (zoomed reframing with 256 tokens).\n     */\n    MediaResolution[\"MEDIA_RESOLUTION_HIGH\"] = \"MEDIA_RESOLUTION_HIGH\";\n})(MediaResolution || (MediaResolution = {}));\n/** Job state. */\nvar JobState;\n(function (JobState) {\n    /**\n     * The job state is unspecified.\n     */\n    JobState[\"JOB_STATE_UNSPECIFIED\"] = \"JOB_STATE_UNSPECIFIED\";\n    /**\n     * The job has been just created or resumed and processing has not yet begun.\n     */\n    JobState[\"JOB_STATE_QUEUED\"] = \"JOB_STATE_QUEUED\";\n    /**\n     * The service is preparing to run the job.\n     */\n    JobState[\"JOB_STATE_PENDING\"] = \"JOB_STATE_PENDING\";\n    /**\n     * The job is in progress.\n     */\n    JobState[\"JOB_STATE_RUNNING\"] = \"JOB_STATE_RUNNING\";\n    /**\n     * The job completed successfully.\n     */\n    JobState[\"JOB_STATE_SUCCEEDED\"] = \"JOB_STATE_SUCCEEDED\";\n    /**\n     * The job failed.\n     */\n    JobState[\"JOB_STATE_FAILED\"] = \"JOB_STATE_FAILED\";\n    /**\n     * The job is being cancelled. From this state the job may only go to either `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.\n     */\n    JobState[\"JOB_STATE_CANCELLING\"] = \"JOB_STATE_CANCELLING\";\n    /**\n     * The job has been cancelled.\n     */\n    JobState[\"JOB_STATE_CANCELLED\"] = \"JOB_STATE_CANCELLED\";\n    /**\n     * The job has been stopped, and can be resumed.\n     */\n    JobState[\"JOB_STATE_PAUSED\"] = \"JOB_STATE_PAUSED\";\n    /**\n     * The job has expired.\n     */\n    JobState[\"JOB_STATE_EXPIRED\"] = \"JOB_STATE_EXPIRED\";\n    /**\n     * The job is being updated. Only jobs in the `JOB_STATE_RUNNING` state can be updated. After updating, the job goes back to the `JOB_STATE_RUNNING` state.\n     */\n    JobState[\"JOB_STATE_UPDATING\"] = \"JOB_STATE_UPDATING\";\n    /**\n     * The job is partially succeeded, some results may be missing due to errors.\n     */\n    JobState[\"JOB_STATE_PARTIALLY_SUCCEEDED\"] = \"JOB_STATE_PARTIALLY_SUCCEEDED\";\n})(JobState || (JobState = {}));\n/** Optional. Adapter size for tuning. */\nvar AdapterSize;\n(function (AdapterSize) {\n    /**\n     * Adapter size is unspecified.\n     */\n    AdapterSize[\"ADAPTER_SIZE_UNSPECIFIED\"] = \"ADAPTER_SIZE_UNSPECIFIED\";\n    /**\n     * Adapter size 1.\n     */\n    AdapterSize[\"ADAPTER_SIZE_ONE\"] = \"ADAPTER_SIZE_ONE\";\n    /**\n     * Adapter size 2.\n     */\n    AdapterSize[\"ADAPTER_SIZE_TWO\"] = \"ADAPTER_SIZE_TWO\";\n    /**\n     * Adapter size 4.\n     */\n    AdapterSize[\"ADAPTER_SIZE_FOUR\"] = \"ADAPTER_SIZE_FOUR\";\n    /**\n     * Adapter size 8.\n     */\n    AdapterSize[\"ADAPTER_SIZE_EIGHT\"] = \"ADAPTER_SIZE_EIGHT\";\n    /**\n     * Adapter size 16.\n     */\n    AdapterSize[\"ADAPTER_SIZE_SIXTEEN\"] = \"ADAPTER_SIZE_SIXTEEN\";\n    /**\n     * Adapter size 32.\n     */\n    AdapterSize[\"ADAPTER_SIZE_THIRTY_TWO\"] = \"ADAPTER_SIZE_THIRTY_TWO\";\n})(AdapterSize || (AdapterSize = {}));\n/** Options for feature selection preference. */\nvar FeatureSelectionPreference;\n(function (FeatureSelectionPreference) {\n    FeatureSelectionPreference[\"FEATURE_SELECTION_PREFERENCE_UNSPECIFIED\"] = \"FEATURE_SELECTION_PREFERENCE_UNSPECIFIED\";\n    FeatureSelectionPreference[\"PRIORITIZE_QUALITY\"] = \"PRIORITIZE_QUALITY\";\n    FeatureSelectionPreference[\"BALANCED\"] = \"BALANCED\";\n    FeatureSelectionPreference[\"PRIORITIZE_COST\"] = \"PRIORITIZE_COST\";\n})(FeatureSelectionPreference || (FeatureSelectionPreference = {}));\n/** Defines the function behavior. Defaults to `BLOCKING`. */\nvar Behavior;\n(function (Behavior) {\n    /**\n     * This value is unused.\n     */\n    Behavior[\"UNSPECIFIED\"] = \"UNSPECIFIED\";\n    /**\n     * If set, the system will wait to receive the function response before continuing the conversation.\n     */\n    Behavior[\"BLOCKING\"] = \"BLOCKING\";\n    /**\n     * If set, the system will not wait to receive the function response. Instead, it will attempt to handle function responses as they become available while maintaining the conversation between the user and the model.\n     */\n    Behavior[\"NON_BLOCKING\"] = \"NON_BLOCKING\";\n})(Behavior || (Behavior = {}));\n/** Config for the dynamic retrieval config mode. */\nvar DynamicRetrievalConfigMode;\n(function (DynamicRetrievalConfigMode) {\n    /**\n     * Always trigger retrieval.\n     */\n    DynamicRetrievalConfigMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    /**\n     * Run retrieval only when system decides it is necessary.\n     */\n    DynamicRetrievalConfigMode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(DynamicRetrievalConfigMode || (DynamicRetrievalConfigMode = {}));\n/** Config for the function calling config mode. */\nvar FunctionCallingConfigMode;\n(function (FunctionCallingConfigMode) {\n    /**\n     * The function calling config mode is unspecified. Should not be used.\n     */\n    FunctionCallingConfigMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    /**\n     * Default model behavior, model decides to predict either function calls or natural language response.\n     */\n    FunctionCallingConfigMode[\"AUTO\"] = \"AUTO\";\n    /**\n     * Model is constrained to always predicting function calls only. If \"allowed_function_names\" are set, the predicted function calls will be limited to any one of \"allowed_function_names\", else the predicted function calls will be any one of the provided \"function_declarations\".\n     */\n    FunctionCallingConfigMode[\"ANY\"] = \"ANY\";\n    /**\n     * Model will not predict any function calls. Model behavior is same as when not passing any function declarations.\n     */\n    FunctionCallingConfigMode[\"NONE\"] = \"NONE\";\n})(FunctionCallingConfigMode || (FunctionCallingConfigMode = {}));\n/** Status of the url retrieval. */\nvar UrlRetrievalStatus;\n(function (UrlRetrievalStatus) {\n    /**\n     * Default value. This value is unused\n     */\n    UrlRetrievalStatus[\"URL_RETRIEVAL_STATUS_UNSPECIFIED\"] = \"URL_RETRIEVAL_STATUS_UNSPECIFIED\";\n    /**\n     * Url retrieval is successful.\n     */\n    UrlRetrievalStatus[\"URL_RETRIEVAL_STATUS_SUCCESS\"] = \"URL_RETRIEVAL_STATUS_SUCCESS\";\n    /**\n     * Url retrieval is failed due to error.\n     */\n    UrlRetrievalStatus[\"URL_RETRIEVAL_STATUS_ERROR\"] = \"URL_RETRIEVAL_STATUS_ERROR\";\n})(UrlRetrievalStatus || (UrlRetrievalStatus = {}));\n/** Enum that controls the safety filter level for objectionable content. */\nvar SafetyFilterLevel;\n(function (SafetyFilterLevel) {\n    SafetyFilterLevel[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    SafetyFilterLevel[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    SafetyFilterLevel[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    SafetyFilterLevel[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(SafetyFilterLevel || (SafetyFilterLevel = {}));\n/** Enum that controls the generation of people. */\nvar PersonGeneration;\n(function (PersonGeneration) {\n    /**\n     * Block generation of images of people.\n     */\n    PersonGeneration[\"DONT_ALLOW\"] = \"DONT_ALLOW\";\n    /**\n     * Generate images of adults, but not children.\n     */\n    PersonGeneration[\"ALLOW_ADULT\"] = \"ALLOW_ADULT\";\n    /**\n     * Generate images that include adults and children.\n     */\n    PersonGeneration[\"ALLOW_ALL\"] = \"ALLOW_ALL\";\n})(PersonGeneration || (PersonGeneration = {}));\n/** Enum that specifies the language of the text in the prompt. */\nvar ImagePromptLanguage;\n(function (ImagePromptLanguage) {\n    ImagePromptLanguage[\"auto\"] = \"auto\";\n    ImagePromptLanguage[\"en\"] = \"en\";\n    ImagePromptLanguage[\"ja\"] = \"ja\";\n    ImagePromptLanguage[\"ko\"] = \"ko\";\n    ImagePromptLanguage[\"hi\"] = \"hi\";\n})(ImagePromptLanguage || (ImagePromptLanguage = {}));\n/** Enum representing the mask mode of a mask reference image. */\nvar MaskReferenceMode;\n(function (MaskReferenceMode) {\n    MaskReferenceMode[\"MASK_MODE_DEFAULT\"] = \"MASK_MODE_DEFAULT\";\n    MaskReferenceMode[\"MASK_MODE_USER_PROVIDED\"] = \"MASK_MODE_USER_PROVIDED\";\n    MaskReferenceMode[\"MASK_MODE_BACKGROUND\"] = \"MASK_MODE_BACKGROUND\";\n    MaskReferenceMode[\"MASK_MODE_FOREGROUND\"] = \"MASK_MODE_FOREGROUND\";\n    MaskReferenceMode[\"MASK_MODE_SEMANTIC\"] = \"MASK_MODE_SEMANTIC\";\n})(MaskReferenceMode || (MaskReferenceMode = {}));\n/** Enum representing the control type of a control reference image. */\nvar ControlReferenceType;\n(function (ControlReferenceType) {\n    ControlReferenceType[\"CONTROL_TYPE_DEFAULT\"] = \"CONTROL_TYPE_DEFAULT\";\n    ControlReferenceType[\"CONTROL_TYPE_CANNY\"] = \"CONTROL_TYPE_CANNY\";\n    ControlReferenceType[\"CONTROL_TYPE_SCRIBBLE\"] = \"CONTROL_TYPE_SCRIBBLE\";\n    ControlReferenceType[\"CONTROL_TYPE_FACE_MESH\"] = \"CONTROL_TYPE_FACE_MESH\";\n})(ControlReferenceType || (ControlReferenceType = {}));\n/** Enum representing the subject type of a subject reference image. */\nvar SubjectReferenceType;\n(function (SubjectReferenceType) {\n    SubjectReferenceType[\"SUBJECT_TYPE_DEFAULT\"] = \"SUBJECT_TYPE_DEFAULT\";\n    SubjectReferenceType[\"SUBJECT_TYPE_PERSON\"] = \"SUBJECT_TYPE_PERSON\";\n    SubjectReferenceType[\"SUBJECT_TYPE_ANIMAL\"] = \"SUBJECT_TYPE_ANIMAL\";\n    SubjectReferenceType[\"SUBJECT_TYPE_PRODUCT\"] = \"SUBJECT_TYPE_PRODUCT\";\n})(SubjectReferenceType || (SubjectReferenceType = {}));\n/** Enum representing the Imagen 3 Edit mode. */\nvar EditMode;\n(function (EditMode) {\n    EditMode[\"EDIT_MODE_DEFAULT\"] = \"EDIT_MODE_DEFAULT\";\n    EditMode[\"EDIT_MODE_INPAINT_REMOVAL\"] = \"EDIT_MODE_INPAINT_REMOVAL\";\n    EditMode[\"EDIT_MODE_INPAINT_INSERTION\"] = \"EDIT_MODE_INPAINT_INSERTION\";\n    EditMode[\"EDIT_MODE_OUTPAINT\"] = \"EDIT_MODE_OUTPAINT\";\n    EditMode[\"EDIT_MODE_CONTROLLED_EDITING\"] = \"EDIT_MODE_CONTROLLED_EDITING\";\n    EditMode[\"EDIT_MODE_STYLE\"] = \"EDIT_MODE_STYLE\";\n    EditMode[\"EDIT_MODE_BGSWAP\"] = \"EDIT_MODE_BGSWAP\";\n    EditMode[\"EDIT_MODE_PRODUCT_IMAGE\"] = \"EDIT_MODE_PRODUCT_IMAGE\";\n})(EditMode || (EditMode = {}));\n/** Enum that controls the compression quality of the generated videos. */\nvar VideoCompressionQuality;\n(function (VideoCompressionQuality) {\n    /**\n     * Optimized video compression quality. This will produce videos\n        with a compressed, smaller file size.\n     */\n    VideoCompressionQuality[\"OPTIMIZED\"] = \"OPTIMIZED\";\n    /**\n     * Lossless video compression quality. This will produce videos\n        with a larger file size.\n     */\n    VideoCompressionQuality[\"LOSSLESS\"] = \"LOSSLESS\";\n})(VideoCompressionQuality || (VideoCompressionQuality = {}));\n/** State for the lifecycle of a File. */\nvar FileState;\n(function (FileState) {\n    FileState[\"STATE_UNSPECIFIED\"] = \"STATE_UNSPECIFIED\";\n    FileState[\"PROCESSING\"] = \"PROCESSING\";\n    FileState[\"ACTIVE\"] = \"ACTIVE\";\n    FileState[\"FAILED\"] = \"FAILED\";\n})(FileState || (FileState = {}));\n/** Source of the File. */\nvar FileSource;\n(function (FileSource) {\n    FileSource[\"SOURCE_UNSPECIFIED\"] = \"SOURCE_UNSPECIFIED\";\n    FileSource[\"UPLOADED\"] = \"UPLOADED\";\n    FileSource[\"GENERATED\"] = \"GENERATED\";\n})(FileSource || (FileSource = {}));\n/** Server content modalities. */\nvar MediaModality;\n(function (MediaModality) {\n    /**\n     * The modality is unspecified.\n     */\n    MediaModality[\"MODALITY_UNSPECIFIED\"] = \"MODALITY_UNSPECIFIED\";\n    /**\n     * Plain text.\n     */\n    MediaModality[\"TEXT\"] = \"TEXT\";\n    /**\n     * Images.\n     */\n    MediaModality[\"IMAGE\"] = \"IMAGE\";\n    /**\n     * Video.\n     */\n    MediaModality[\"VIDEO\"] = \"VIDEO\";\n    /**\n     * Audio.\n     */\n    MediaModality[\"AUDIO\"] = \"AUDIO\";\n    /**\n     * Document, e.g. PDF.\n     */\n    MediaModality[\"DOCUMENT\"] = \"DOCUMENT\";\n})(MediaModality || (MediaModality = {}));\n/** Start of speech sensitivity. */\nvar StartSensitivity;\n(function (StartSensitivity) {\n    /**\n     * The default is START_SENSITIVITY_LOW.\n     */\n    StartSensitivity[\"START_SENSITIVITY_UNSPECIFIED\"] = \"START_SENSITIVITY_UNSPECIFIED\";\n    /**\n     * Automatic detection will detect the start of speech more often.\n     */\n    StartSensitivity[\"START_SENSITIVITY_HIGH\"] = \"START_SENSITIVITY_HIGH\";\n    /**\n     * Automatic detection will detect the start of speech less often.\n     */\n    StartSensitivity[\"START_SENSITIVITY_LOW\"] = \"START_SENSITIVITY_LOW\";\n})(StartSensitivity || (StartSensitivity = {}));\n/** End of speech sensitivity. */\nvar EndSensitivity;\n(function (EndSensitivity) {\n    /**\n     * The default is END_SENSITIVITY_LOW.\n     */\n    EndSensitivity[\"END_SENSITIVITY_UNSPECIFIED\"] = \"END_SENSITIVITY_UNSPECIFIED\";\n    /**\n     * Automatic detection ends speech more often.\n     */\n    EndSensitivity[\"END_SENSITIVITY_HIGH\"] = \"END_SENSITIVITY_HIGH\";\n    /**\n     * Automatic detection ends speech less often.\n     */\n    EndSensitivity[\"END_SENSITIVITY_LOW\"] = \"END_SENSITIVITY_LOW\";\n})(EndSensitivity || (EndSensitivity = {}));\n/** The different ways of handling user activity. */\nvar ActivityHandling;\n(function (ActivityHandling) {\n    /**\n     * If unspecified, the default behavior is `START_OF_ACTIVITY_INTERRUPTS`.\n     */\n    ActivityHandling[\"ACTIVITY_HANDLING_UNSPECIFIED\"] = \"ACTIVITY_HANDLING_UNSPECIFIED\";\n    /**\n     * If true, start of activity will interrupt the model's response (also called \"barge in\"). The model's current response will be cut-off in the moment of the interruption. This is the default behavior.\n     */\n    ActivityHandling[\"START_OF_ACTIVITY_INTERRUPTS\"] = \"START_OF_ACTIVITY_INTERRUPTS\";\n    /**\n     * The model's response will not be interrupted.\n     */\n    ActivityHandling[\"NO_INTERRUPTION\"] = \"NO_INTERRUPTION\";\n})(ActivityHandling || (ActivityHandling = {}));\n/** Options about which input is included in the user's turn. */\nvar TurnCoverage;\n(function (TurnCoverage) {\n    /**\n     * If unspecified, the default behavior is `TURN_INCLUDES_ONLY_ACTIVITY`.\n     */\n    TurnCoverage[\"TURN_COVERAGE_UNSPECIFIED\"] = \"TURN_COVERAGE_UNSPECIFIED\";\n    /**\n     * The users turn only includes activity since the last turn, excluding inactivity (e.g. silence on the audio stream). This is the default behavior.\n     */\n    TurnCoverage[\"TURN_INCLUDES_ONLY_ACTIVITY\"] = \"TURN_INCLUDES_ONLY_ACTIVITY\";\n    /**\n     * The users turn includes all realtime input since the last turn, including inactivity (e.g. silence on the audio stream).\n     */\n    TurnCoverage[\"TURN_INCLUDES_ALL_INPUT\"] = \"TURN_INCLUDES_ALL_INPUT\";\n})(TurnCoverage || (TurnCoverage = {}));\n/** Specifies how the response should be scheduled in the conversation. */\nvar FunctionResponseScheduling;\n(function (FunctionResponseScheduling) {\n    /**\n     * This value is unused.\n     */\n    FunctionResponseScheduling[\"SCHEDULING_UNSPECIFIED\"] = \"SCHEDULING_UNSPECIFIED\";\n    /**\n     * Only add the result to the conversation context, do not interrupt or trigger generation.\n     */\n    FunctionResponseScheduling[\"SILENT\"] = \"SILENT\";\n    /**\n     * Add the result to the conversation context, and prompt to generate output without interrupting ongoing generation.\n     */\n    FunctionResponseScheduling[\"WHEN_IDLE\"] = \"WHEN_IDLE\";\n    /**\n     * Add the result to the conversation context, interrupt ongoing generation and prompt to generate output.\n     */\n    FunctionResponseScheduling[\"INTERRUPT\"] = \"INTERRUPT\";\n})(FunctionResponseScheduling || (FunctionResponseScheduling = {}));\n/** Scale of the generated music. */\nvar Scale;\n(function (Scale) {\n    /**\n     * Default value. This value is unused.\n     */\n    Scale[\"SCALE_UNSPECIFIED\"] = \"SCALE_UNSPECIFIED\";\n    /**\n     * C major or A minor.\n     */\n    Scale[\"C_MAJOR_A_MINOR\"] = \"C_MAJOR_A_MINOR\";\n    /**\n     * Db major or Bb minor.\n     */\n    Scale[\"D_FLAT_MAJOR_B_FLAT_MINOR\"] = \"D_FLAT_MAJOR_B_FLAT_MINOR\";\n    /**\n     * D major or B minor.\n     */\n    Scale[\"D_MAJOR_B_MINOR\"] = \"D_MAJOR_B_MINOR\";\n    /**\n     * Eb major or C minor\n     */\n    Scale[\"E_FLAT_MAJOR_C_MINOR\"] = \"E_FLAT_MAJOR_C_MINOR\";\n    /**\n     * E major or Db minor.\n     */\n    Scale[\"E_MAJOR_D_FLAT_MINOR\"] = \"E_MAJOR_D_FLAT_MINOR\";\n    /**\n     * F major or D minor.\n     */\n    Scale[\"F_MAJOR_D_MINOR\"] = \"F_MAJOR_D_MINOR\";\n    /**\n     * Gb major or Eb minor.\n     */\n    Scale[\"G_FLAT_MAJOR_E_FLAT_MINOR\"] = \"G_FLAT_MAJOR_E_FLAT_MINOR\";\n    /**\n     * G major or E minor.\n     */\n    Scale[\"G_MAJOR_E_MINOR\"] = \"G_MAJOR_E_MINOR\";\n    /**\n     * Ab major or F minor.\n     */\n    Scale[\"A_FLAT_MAJOR_F_MINOR\"] = \"A_FLAT_MAJOR_F_MINOR\";\n    /**\n     * A major or Gb minor.\n     */\n    Scale[\"A_MAJOR_G_FLAT_MINOR\"] = \"A_MAJOR_G_FLAT_MINOR\";\n    /**\n     * Bb major or G minor.\n     */\n    Scale[\"B_FLAT_MAJOR_G_MINOR\"] = \"B_FLAT_MAJOR_G_MINOR\";\n    /**\n     * B major or Ab minor.\n     */\n    Scale[\"B_MAJOR_A_FLAT_MINOR\"] = \"B_MAJOR_A_FLAT_MINOR\";\n})(Scale || (Scale = {}));\n/** The playback control signal to apply to the music generation. */\nvar LiveMusicPlaybackControl;\n(function (LiveMusicPlaybackControl) {\n    /**\n     * This value is unused.\n     */\n    LiveMusicPlaybackControl[\"PLAYBACK_CONTROL_UNSPECIFIED\"] = \"PLAYBACK_CONTROL_UNSPECIFIED\";\n    /**\n     * Start generating the music.\n     */\n    LiveMusicPlaybackControl[\"PLAY\"] = \"PLAY\";\n    /**\n     * Hold the music generation. Use PLAY to resume from the current position.\n     */\n    LiveMusicPlaybackControl[\"PAUSE\"] = \"PAUSE\";\n    /**\n     * Stop the music generation and reset the context (prompts retained).\n        Use PLAY to restart the music generation.\n     */\n    LiveMusicPlaybackControl[\"STOP\"] = \"STOP\";\n    /**\n     * Reset the context of the music generation without stopping it.\n        Retains the current prompts and config.\n     */\n    LiveMusicPlaybackControl[\"RESET_CONTEXT\"] = \"RESET_CONTEXT\";\n})(LiveMusicPlaybackControl || (LiveMusicPlaybackControl = {}));\n/** A function response. */\nclass FunctionResponse {\n}\n/**\n * Creates a `Part` object from a `URI` string.\n */\nfunction createPartFromUri(uri, mimeType) {\n    return {\n        fileData: {\n            fileUri: uri,\n            mimeType: mimeType,\n        },\n    };\n}\n/**\n * Creates a `Part` object from a `text` string.\n */\nfunction createPartFromText(text) {\n    return {\n        text: text,\n    };\n}\n/**\n * Creates a `Part` object from a `FunctionCall` object.\n */\nfunction createPartFromFunctionCall(name, args) {\n    return {\n        functionCall: {\n            name: name,\n            args: args,\n        },\n    };\n}\n/**\n * Creates a `Part` object from a `FunctionResponse` object.\n */\nfunction createPartFromFunctionResponse(id, name, response) {\n    return {\n        functionResponse: {\n            id: id,\n            name: name,\n            response: response,\n        },\n    };\n}\n/**\n * Creates a `Part` object from a `base64` encoded `string`.\n */\nfunction createPartFromBase64(data, mimeType) {\n    return {\n        inlineData: {\n            data: data,\n            mimeType: mimeType,\n        },\n    };\n}\n/**\n * Creates a `Part` object from the `outcome` and `output` of a `CodeExecutionResult` object.\n */\nfunction createPartFromCodeExecutionResult(outcome, output) {\n    return {\n        codeExecutionResult: {\n            outcome: outcome,\n            output: output,\n        },\n    };\n}\n/**\n * Creates a `Part` object from the `code` and `language` of an `ExecutableCode` object.\n */\nfunction createPartFromExecutableCode(code, language) {\n    return {\n        executableCode: {\n            code: code,\n            language: language,\n        },\n    };\n}\nfunction _isPart(obj) {\n    if (typeof obj === 'object' && obj !== null) {\n        return ('fileData' in obj ||\n            'text' in obj ||\n            'functionCall' in obj ||\n            'functionResponse' in obj ||\n            'inlineData' in obj ||\n            'videoMetadata' in obj ||\n            'codeExecutionResult' in obj ||\n            'executableCode' in obj);\n    }\n    return false;\n}\nfunction _toParts(partOrString) {\n    const parts = [];\n    if (typeof partOrString === 'string') {\n        parts.push(createPartFromText(partOrString));\n    }\n    else if (_isPart(partOrString)) {\n        parts.push(partOrString);\n    }\n    else if (Array.isArray(partOrString)) {\n        if (partOrString.length === 0) {\n            throw new Error('partOrString cannot be an empty array');\n        }\n        for (const part of partOrString) {\n            if (typeof part === 'string') {\n                parts.push(createPartFromText(part));\n            }\n            else if (_isPart(part)) {\n                parts.push(part);\n            }\n            else {\n                throw new Error('element in PartUnion must be a Part object or string');\n            }\n        }\n    }\n    else {\n        throw new Error('partOrString must be a Part object, string, or array');\n    }\n    return parts;\n}\n/**\n * Creates a `Content` object with a user role from a `PartListUnion` object or `string`.\n */\nfunction createUserContent(partOrString) {\n    return {\n        role: 'user',\n        parts: _toParts(partOrString),\n    };\n}\n/**\n * Creates a `Content` object with a model role from a `PartListUnion` object or `string`.\n */\nfunction createModelContent(partOrString) {\n    return {\n        role: 'model',\n        parts: _toParts(partOrString),\n    };\n}\n/** A wrapper class for the http response. */\nclass HttpResponse {\n    constructor(response) {\n        // Process the headers.\n        const headers = {};\n        for (const pair of response.headers.entries()) {\n            headers[pair[0]] = pair[1];\n        }\n        this.headers = headers;\n        // Keep the original response.\n        this.responseInternal = response;\n    }\n    json() {\n        return this.responseInternal.json();\n    }\n}\n/** Content filter results for a prompt sent in the request. */\nclass GenerateContentResponsePromptFeedback {\n}\n/** Usage metadata about response(s). */\nclass GenerateContentResponseUsageMetadata {\n}\n/** Response message for PredictionService.GenerateContent. */\nclass GenerateContentResponse {\n    /**\n     * Returns the concatenation of all text parts from the first candidate in the response.\n     *\n     * @remarks\n     * If there are multiple candidates in the response, the text from the first\n     * one will be returned.\n     * If there are non-text parts in the response, the concatenation of all text\n     * parts will be returned, and a warning will be logged.\n     * If there are thought parts in the response, the concatenation of all text\n     * parts excluding the thought parts will be returned.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.generateContent({\n     *   model: 'gemini-2.0-flash',\n     *   contents:\n     *     'Why is the sky blue?',\n     * });\n     *\n     * console.debug(response.text);\n     * ```\n     */\n    get text() {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (((_d = (_c = (_b = (_a = this.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) === 0) {\n            return undefined;\n        }\n        if (this.candidates && this.candidates.length > 1) {\n            console.warn('there are multiple candidates in the response, returning text from the first one.');\n        }\n        let text = '';\n        let anyTextPartText = false;\n        const nonTextParts = [];\n        for (const part of (_h = (_g = (_f = (_e = this.candidates) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.parts) !== null && _h !== void 0 ? _h : []) {\n            for (const [fieldName, fieldValue] of Object.entries(part)) {\n                if (fieldName !== 'text' &&\n                    fieldName !== 'thought' &&\n                    (fieldValue !== null || fieldValue !== undefined)) {\n                    nonTextParts.push(fieldName);\n                }\n            }\n            if (typeof part.text === 'string') {\n                if (typeof part.thought === 'boolean' && part.thought) {\n                    continue;\n                }\n                anyTextPartText = true;\n                text += part.text;\n            }\n        }\n        if (nonTextParts.length > 0) {\n            console.warn(`there are non-text parts ${nonTextParts} in the response, returning concatenation of all text parts. Please refer to the non text parts for a full response from model.`);\n        }\n        // part.text === '' is different from part.text is null\n        return anyTextPartText ? text : undefined;\n    }\n    /**\n     * Returns the concatenation of all inline data parts from the first candidate\n     * in the response.\n     *\n     * @remarks\n     * If there are multiple candidates in the response, the inline data from the\n     * first one will be returned. If there are non-inline data parts in the\n     * response, the concatenation of all inline data parts will be returned, and\n     * a warning will be logged.\n     */\n    get data() {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (((_d = (_c = (_b = (_a = this.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) === 0) {\n            return undefined;\n        }\n        if (this.candidates && this.candidates.length > 1) {\n            console.warn('there are multiple candidates in the response, returning data from the first one.');\n        }\n        let data = '';\n        const nonDataParts = [];\n        for (const part of (_h = (_g = (_f = (_e = this.candidates) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.parts) !== null && _h !== void 0 ? _h : []) {\n            for (const [fieldName, fieldValue] of Object.entries(part)) {\n                if (fieldName !== 'inlineData' &&\n                    (fieldValue !== null || fieldValue !== undefined)) {\n                    nonDataParts.push(fieldName);\n                }\n            }\n            if (part.inlineData && typeof part.inlineData.data === 'string') {\n                data += atob(part.inlineData.data);\n            }\n        }\n        if (nonDataParts.length > 0) {\n            console.warn(`there are non-data parts ${nonDataParts} in the response, returning concatenation of all data parts. Please refer to the non data parts for a full response from model.`);\n        }\n        return data.length > 0 ? btoa(data) : undefined;\n    }\n    /**\n     * Returns the function calls from the first candidate in the response.\n     *\n     * @remarks\n     * If there are multiple candidates in the response, the function calls from\n     * the first one will be returned.\n     * If there are no function calls in the response, undefined will be returned.\n     *\n     * @example\n     * ```ts\n     * const controlLightFunctionDeclaration: FunctionDeclaration = {\n     *   name: 'controlLight',\n     *   parameters: {\n     *   type: Type.OBJECT,\n     *   description: 'Set the brightness and color temperature of a room light.',\n     *   properties: {\n     *     brightness: {\n     *       type: Type.NUMBER,\n     *       description:\n     *         'Light level from 0 to 100. Zero is off and 100 is full brightness.',\n     *     },\n     *     colorTemperature: {\n     *       type: Type.STRING,\n     *       description:\n     *         'Color temperature of the light fixture which can be `daylight`, `cool` or `warm`.',\n     *     },\n     *   },\n     *   required: ['brightness', 'colorTemperature'],\n     *  };\n     *  const response = await ai.models.generateContent({\n     *     model: 'gemini-2.0-flash',\n     *     contents: 'Dim the lights so the room feels cozy and warm.',\n     *     config: {\n     *       tools: [{functionDeclarations: [controlLightFunctionDeclaration]}],\n     *       toolConfig: {\n     *         functionCallingConfig: {\n     *           mode: FunctionCallingConfigMode.ANY,\n     *           allowedFunctionNames: ['controlLight'],\n     *         },\n     *       },\n     *     },\n     *   });\n     *  console.debug(JSON.stringify(response.functionCalls));\n     * ```\n     */\n    get functionCalls() {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (((_d = (_c = (_b = (_a = this.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) === 0) {\n            return undefined;\n        }\n        if (this.candidates && this.candidates.length > 1) {\n            console.warn('there are multiple candidates in the response, returning function calls from the first one.');\n        }\n        const functionCalls = (_h = (_g = (_f = (_e = this.candidates) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.parts) === null || _h === void 0 ? void 0 : _h.filter((part) => part.functionCall).map((part) => part.functionCall).filter((functionCall) => functionCall !== undefined);\n        if ((functionCalls === null || functionCalls === void 0 ? void 0 : functionCalls.length) === 0) {\n            return undefined;\n        }\n        return functionCalls;\n    }\n    /**\n     * Returns the first executable code from the first candidate in the response.\n     *\n     * @remarks\n     * If there are multiple candidates in the response, the executable code from\n     * the first one will be returned.\n     * If there are no executable code in the response, undefined will be\n     * returned.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.generateContent({\n     *   model: 'gemini-2.0-flash',\n     *   contents:\n     *     'What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.'\n     *   config: {\n     *     tools: [{codeExecution: {}}],\n     *   },\n     * });\n     *\n     * console.debug(response.executableCode);\n     * ```\n     */\n    get executableCode() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        if (((_d = (_c = (_b = (_a = this.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) === 0) {\n            return undefined;\n        }\n        if (this.candidates && this.candidates.length > 1) {\n            console.warn('there are multiple candidates in the response, returning executable code from the first one.');\n        }\n        const executableCode = (_h = (_g = (_f = (_e = this.candidates) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.parts) === null || _h === void 0 ? void 0 : _h.filter((part) => part.executableCode).map((part) => part.executableCode).filter((executableCode) => executableCode !== undefined);\n        if ((executableCode === null || executableCode === void 0 ? void 0 : executableCode.length) === 0) {\n            return undefined;\n        }\n        return (_j = executableCode === null || executableCode === void 0 ? void 0 : executableCode[0]) === null || _j === void 0 ? void 0 : _j.code;\n    }\n    /**\n     * Returns the first code execution result from the first candidate in the response.\n     *\n     * @remarks\n     * If there are multiple candidates in the response, the code execution result from\n     * the first one will be returned.\n     * If there are no code execution result in the response, undefined will be returned.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.generateContent({\n     *   model: 'gemini-2.0-flash',\n     *   contents:\n     *     'What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.'\n     *   config: {\n     *     tools: [{codeExecution: {}}],\n     *   },\n     * });\n     *\n     * console.debug(response.codeExecutionResult);\n     * ```\n     */\n    get codeExecutionResult() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        if (((_d = (_c = (_b = (_a = this.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) === 0) {\n            return undefined;\n        }\n        if (this.candidates && this.candidates.length > 1) {\n            console.warn('there are multiple candidates in the response, returning code execution result from the first one.');\n        }\n        const codeExecutionResult = (_h = (_g = (_f = (_e = this.candidates) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.content) === null || _g === void 0 ? void 0 : _g.parts) === null || _h === void 0 ? void 0 : _h.filter((part) => part.codeExecutionResult).map((part) => part.codeExecutionResult).filter((codeExecutionResult) => codeExecutionResult !== undefined);\n        if ((codeExecutionResult === null || codeExecutionResult === void 0 ? void 0 : codeExecutionResult.length) === 0) {\n            return undefined;\n        }\n        return (_j = codeExecutionResult === null || codeExecutionResult === void 0 ? void 0 : codeExecutionResult[0]) === null || _j === void 0 ? void 0 : _j.output;\n    }\n}\n/** Response for the embed_content method. */\nclass EmbedContentResponse {\n}\n/** The output images response. */\nclass GenerateImagesResponse {\n}\n/** Response for the request to edit an image. */\nclass EditImageResponse {\n}\nclass UpscaleImageResponse {\n}\nclass ListModelsResponse {\n}\nclass DeleteModelResponse {\n}\n/** Response for counting tokens. */\nclass CountTokensResponse {\n}\n/** Response for computing tokens. */\nclass ComputeTokensResponse {\n}\n/** Response with generated videos. */\nclass GenerateVideosResponse {\n}\n/** Response for the list tuning jobs method. */\nclass ListTuningJobsResponse {\n}\n/** Empty response for caches.delete method. */\nclass DeleteCachedContentResponse {\n}\nclass ListCachedContentsResponse {\n}\n/** Response for the list files method. */\nclass ListFilesResponse {\n}\n/** Response for the create file method. */\nclass CreateFileResponse {\n}\n/** Response for the delete file method. */\nclass DeleteFileResponse {\n}\n/** Config for `inlined_responses` parameter. */\nclass InlinedResponse {\n}\n/** Config for batches.list return value. */\nclass ListBatchJobsResponse {\n}\n/** Represents a single response in a replay. */\nclass ReplayResponse {\n}\n/** A raw reference image.\n\n  A raw reference image represents the base image to edit, provided by the user.\n  It can optionally be provided in addition to a mask reference image or\n  a style reference image.\n   */\nclass RawReferenceImage {\n    /** Internal method to convert to ReferenceImageAPIInternal. */\n    toReferenceImageAPI() {\n        const referenceImageAPI = {\n            referenceType: 'REFERENCE_TYPE_RAW',\n            referenceImage: this.referenceImage,\n            referenceId: this.referenceId,\n        };\n        return referenceImageAPI;\n    }\n}\n/** A mask reference image.\n\n  This encapsulates either a mask image provided by the user and configs for\n  the user provided mask, or only config parameters for the model to generate\n  a mask.\n\n  A mask image is an image whose non-zero values indicate where to edit the base\n  image. If the user provides a mask image, the mask must be in the same\n  dimensions as the raw image.\n   */\nclass MaskReferenceImage {\n    /** Internal method to convert to ReferenceImageAPIInternal. */\n    toReferenceImageAPI() {\n        const referenceImageAPI = {\n            referenceType: 'REFERENCE_TYPE_MASK',\n            referenceImage: this.referenceImage,\n            referenceId: this.referenceId,\n            maskImageConfig: this.config,\n        };\n        return referenceImageAPI;\n    }\n}\n/** A control reference image.\n\n  The image of the control reference image is either a control image provided\n  by the user, or a regular image which the backend will use to generate a\n  control image of. In the case of the latter, the\n  enable_control_image_computation field in the config should be set to True.\n\n  A control image is an image that represents a sketch image of areas for the\n  model to fill in based on the prompt.\n   */\nclass ControlReferenceImage {\n    /** Internal method to convert to ReferenceImageAPIInternal. */\n    toReferenceImageAPI() {\n        const referenceImageAPI = {\n            referenceType: 'REFERENCE_TYPE_CONTROL',\n            referenceImage: this.referenceImage,\n            referenceId: this.referenceId,\n            controlImageConfig: this.config,\n        };\n        return referenceImageAPI;\n    }\n}\n/** A style reference image.\n\n  This encapsulates a style reference image provided by the user, and\n  additionally optional config parameters for the style reference image.\n\n  A raw reference image can also be provided as a destination for the style to\n  be applied to.\n   */\nclass StyleReferenceImage {\n    /** Internal method to convert to ReferenceImageAPIInternal. */\n    toReferenceImageAPI() {\n        const referenceImageAPI = {\n            referenceType: 'REFERENCE_TYPE_STYLE',\n            referenceImage: this.referenceImage,\n            referenceId: this.referenceId,\n            styleImageConfig: this.config,\n        };\n        return referenceImageAPI;\n    }\n}\n/** A subject reference image.\n\n  This encapsulates a subject reference image provided by the user, and\n  additionally optional config parameters for the subject reference image.\n\n  A raw reference image can also be provided as a destination for the subject to\n  be applied to.\n   */\nclass SubjectReferenceImage {\n    /* Internal method to convert to ReferenceImageAPIInternal. */\n    toReferenceImageAPI() {\n        const referenceImageAPI = {\n            referenceType: 'REFERENCE_TYPE_SUBJECT',\n            referenceImage: this.referenceImage,\n            referenceId: this.referenceId,\n            subjectImageConfig: this.config,\n        };\n        return referenceImageAPI;\n    }\n}\n/** Response message for API call. */\nclass LiveServerMessage {\n    /**\n     * Returns the concatenation of all text parts from the server content if present.\n     *\n     * @remarks\n     * If there are non-text parts in the response, the concatenation of all text\n     * parts will be returned, and a warning will be logged.\n     */\n    get text() {\n        var _a, _b, _c;\n        let text = '';\n        let anyTextPartFound = false;\n        const nonTextParts = [];\n        for (const part of (_c = (_b = (_a = this.serverContent) === null || _a === void 0 ? void 0 : _a.modelTurn) === null || _b === void 0 ? void 0 : _b.parts) !== null && _c !== void 0 ? _c : []) {\n            for (const [fieldName, fieldValue] of Object.entries(part)) {\n                if (fieldName !== 'text' &&\n                    fieldName !== 'thought' &&\n                    fieldValue !== null) {\n                    nonTextParts.push(fieldName);\n                }\n            }\n            if (typeof part.text === 'string') {\n                if (typeof part.thought === 'boolean' && part.thought) {\n                    continue;\n                }\n                anyTextPartFound = true;\n                text += part.text;\n            }\n        }\n        if (nonTextParts.length > 0) {\n            console.warn(`there are non-text parts ${nonTextParts} in the response, returning concatenation of all text parts. Please refer to the non text parts for a full response from model.`);\n        }\n        // part.text === '' is different from part.text is null\n        return anyTextPartFound ? text : undefined;\n    }\n    /**\n     * Returns the concatenation of all inline data parts from the server content if present.\n     *\n     * @remarks\n     * If there are non-inline data parts in the\n     * response, the concatenation of all inline data parts will be returned, and\n     * a warning will be logged.\n     */\n    get data() {\n        var _a, _b, _c;\n        let data = '';\n        const nonDataParts = [];\n        for (const part of (_c = (_b = (_a = this.serverContent) === null || _a === void 0 ? void 0 : _a.modelTurn) === null || _b === void 0 ? void 0 : _b.parts) !== null && _c !== void 0 ? _c : []) {\n            for (const [fieldName, fieldValue] of Object.entries(part)) {\n                if (fieldName !== 'inlineData' && fieldValue !== null) {\n                    nonDataParts.push(fieldName);\n                }\n            }\n            if (part.inlineData && typeof part.inlineData.data === 'string') {\n                data += atob(part.inlineData.data);\n            }\n        }\n        if (nonDataParts.length > 0) {\n            console.warn(`there are non-data parts ${nonDataParts} in the response, returning concatenation of all data parts. Please refer to the non data parts for a full response from model.`);\n        }\n        return data.length > 0 ? btoa(data) : undefined;\n    }\n}\n/** Client generated response to a `ToolCall` received from the server.\n\n  Individual `FunctionResponse` objects are matched to the respective\n  `FunctionCall` objects by the `id` field.\n\n  Note that in the unary and server-streaming GenerateContent APIs function\n  calling happens by exchanging the `Content` parts, while in the bidi\n  GenerateContent APIs function calling happens over this dedicated set of\n  messages.\n   */\nclass LiveClientToolResponse {\n}\n/** Parameters for sending tool responses to the live API. */\nclass LiveSendToolResponseParameters {\n    constructor() {\n        /** Tool responses to send to the session. */\n        this.functionResponses = [];\n    }\n}\n/** Response message for the LiveMusicClientMessage call. */\nclass LiveMusicServerMessage {\n    /**\n     * Returns the first audio chunk from the server content, if present.\n     *\n     * @remarks\n     * If there are no audio chunks in the response, undefined will be returned.\n     */\n    get audioChunk() {\n        if (this.serverContent &&\n            this.serverContent.audioChunks &&\n            this.serverContent.audioChunks.length > 0) {\n            return this.serverContent.audioChunks[0];\n        }\n        return undefined;\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction tModel(apiClient, model) {\n    if (!model || typeof model !== 'string') {\n        throw new Error('model is required and must be a string');\n    }\n    if (apiClient.isVertexAI()) {\n        if (model.startsWith('publishers/') ||\n            model.startsWith('projects/') ||\n            model.startsWith('models/')) {\n            return model;\n        }\n        else if (model.indexOf('/') >= 0) {\n            const parts = model.split('/', 2);\n            return `publishers/${parts[0]}/models/${parts[1]}`;\n        }\n        else {\n            return `publishers/google/models/${model}`;\n        }\n    }\n    else {\n        if (model.startsWith('models/') || model.startsWith('tunedModels/')) {\n            return model;\n        }\n        else {\n            return `models/${model}`;\n        }\n    }\n}\nfunction tCachesModel(apiClient, model) {\n    const transformedModel = tModel(apiClient, model);\n    if (!transformedModel) {\n        return '';\n    }\n    if (transformedModel.startsWith('publishers/') && apiClient.isVertexAI()) {\n        // vertex caches only support model name start with projects.\n        return `projects/${apiClient.getProject()}/locations/${apiClient.getLocation()}/${transformedModel}`;\n    }\n    else if (transformedModel.startsWith('models/') && apiClient.isVertexAI()) {\n        return `projects/${apiClient.getProject()}/locations/${apiClient.getLocation()}/publishers/google/${transformedModel}`;\n    }\n    else {\n        return transformedModel;\n    }\n}\nfunction tBlobs(blobs) {\n    if (Array.isArray(blobs)) {\n        return blobs.map((blob) => tBlob(blob));\n    }\n    else {\n        return [tBlob(blobs)];\n    }\n}\nfunction tBlob(blob) {\n    if (typeof blob === 'object' && blob !== null) {\n        return blob;\n    }\n    throw new Error(`Could not parse input as Blob. Unsupported blob type: ${typeof blob}`);\n}\nfunction tImageBlob(blob) {\n    const transformedBlob = tBlob(blob);\n    if (transformedBlob.mimeType &&\n        transformedBlob.mimeType.startsWith('image/')) {\n        return transformedBlob;\n    }\n    throw new Error(`Unsupported mime type: ${transformedBlob.mimeType}`);\n}\nfunction tAudioBlob(blob) {\n    const transformedBlob = tBlob(blob);\n    if (transformedBlob.mimeType &&\n        transformedBlob.mimeType.startsWith('audio/')) {\n        return transformedBlob;\n    }\n    throw new Error(`Unsupported mime type: ${transformedBlob.mimeType}`);\n}\nfunction tPart(origin) {\n    if (origin === null || origin === undefined) {\n        throw new Error('PartUnion is required');\n    }\n    if (typeof origin === 'object') {\n        return origin;\n    }\n    if (typeof origin === 'string') {\n        return { text: origin };\n    }\n    throw new Error(`Unsupported part type: ${typeof origin}`);\n}\nfunction tParts(origin) {\n    if (origin === null ||\n        origin === undefined ||\n        (Array.isArray(origin) && origin.length === 0)) {\n        throw new Error('PartListUnion is required');\n    }\n    if (Array.isArray(origin)) {\n        return origin.map((item) => tPart(item));\n    }\n    return [tPart(origin)];\n}\nfunction _isContent(origin) {\n    return (origin !== null &&\n        origin !== undefined &&\n        typeof origin === 'object' &&\n        'parts' in origin &&\n        Array.isArray(origin.parts));\n}\nfunction _isFunctionCallPart(origin) {\n    return (origin !== null &&\n        origin !== undefined &&\n        typeof origin === 'object' &&\n        'functionCall' in origin);\n}\nfunction _isFunctionResponsePart(origin) {\n    return (origin !== null &&\n        origin !== undefined &&\n        typeof origin === 'object' &&\n        'functionResponse' in origin);\n}\nfunction tContent(origin) {\n    if (origin === null || origin === undefined) {\n        throw new Error('ContentUnion is required');\n    }\n    if (_isContent(origin)) {\n        // _isContent is a utility function that checks if the\n        // origin is a Content.\n        return origin;\n    }\n    return {\n        role: 'user',\n        parts: tParts(origin),\n    };\n}\nfunction tContentsForEmbed(apiClient, origin) {\n    if (!origin) {\n        return [];\n    }\n    if (apiClient.isVertexAI() && Array.isArray(origin)) {\n        return origin.flatMap((item) => {\n            const content = tContent(item);\n            if (content.parts &&\n                content.parts.length > 0 &&\n                content.parts[0].text !== undefined) {\n                return [content.parts[0].text];\n            }\n            return [];\n        });\n    }\n    else if (apiClient.isVertexAI()) {\n        const content = tContent(origin);\n        if (content.parts &&\n            content.parts.length > 0 &&\n            content.parts[0].text !== undefined) {\n            return [content.parts[0].text];\n        }\n        return [];\n    }\n    if (Array.isArray(origin)) {\n        return origin.map((item) => tContent(item));\n    }\n    return [tContent(origin)];\n}\nfunction tContents(origin) {\n    if (origin === null ||\n        origin === undefined ||\n        (Array.isArray(origin) && origin.length === 0)) {\n        throw new Error('contents are required');\n    }\n    if (!Array.isArray(origin)) {\n        // If it's not an array, it's a single content or a single PartUnion.\n        if (_isFunctionCallPart(origin) || _isFunctionResponsePart(origin)) {\n            throw new Error('To specify functionCall or functionResponse parts, please wrap them in a Content object, specifying the role for them');\n        }\n        return [tContent(origin)];\n    }\n    const result = [];\n    const accumulatedParts = [];\n    const isContentArray = _isContent(origin[0]);\n    for (const item of origin) {\n        const isContent = _isContent(item);\n        if (isContent != isContentArray) {\n            throw new Error('Mixing Content and Parts is not supported, please group the parts into a the appropriate Content objects and specify the roles for them');\n        }\n        if (isContent) {\n            // `isContent` contains the result of _isContent, which is a utility\n            // function that checks if the item is a Content.\n            result.push(item);\n        }\n        else if (_isFunctionCallPart(item) || _isFunctionResponsePart(item)) {\n            throw new Error('To specify functionCall or functionResponse parts, please wrap them, and any other parts, in Content objects as appropriate, specifying the role for them');\n        }\n        else {\n            accumulatedParts.push(item);\n        }\n    }\n    if (!isContentArray) {\n        result.push({ role: 'user', parts: tParts(accumulatedParts) });\n    }\n    return result;\n}\n// The fields that are supported by JSONSchema. Must be kept in sync with the\n// JSONSchema interface above.\nconst supportedJsonSchemaFields = new Set([\n    'type',\n    'format',\n    'title',\n    'description',\n    'default',\n    'items',\n    'minItems',\n    'maxItems',\n    'enum',\n    'properties',\n    'required',\n    'minProperties',\n    'maxProperties',\n    'minimum',\n    'maximum',\n    'minLength',\n    'maxLength',\n    'pattern',\n    'anyOf',\n    'propertyOrdering',\n]);\nconst jsonSchemaTypeValidator = z.enum([\n    'string',\n    'number',\n    'integer',\n    'object',\n    'array',\n    'boolean',\n    'null',\n]);\n// Handles all types and arrays of all types.\nconst schemaTypeUnion = z.union([\n    jsonSchemaTypeValidator,\n    z.array(jsonSchemaTypeValidator),\n]);\n/**\n * Creates a zod validator for JSONSchema.\n *\n * @param strictMode Whether to enable strict mode, default to true. When\n * strict mode is enabled, the zod validator will throw error if there\n * are unrecognized fields in the input data. If strict mode is\n * disabled, the zod validator will ignore the unrecognized fields, only\n * populate the fields that are listed in the JSONSchema. Regardless of\n * the mode the type mismatch will always result in an error, for example\n * items field should be a single JSONSchema, but for tuple type it would\n * be an array of JSONSchema, this will always result in an error.\n * @return The zod validator for JSONSchema.\n */\nfunction createJsonSchemaValidator(strictMode = true) {\n    const jsonSchemaValidator = z.lazy(() => {\n        // Define the base object shape *inside* the z.lazy callback\n        const baseShape = z.object({\n            // --- Type ---\n            type: schemaTypeUnion.optional(),\n            // --- Annotations ---\n            format: z.string().optional(),\n            title: z.string().optional(),\n            description: z.string().optional(),\n            default: z.unknown().optional(),\n            // --- Array Validations ---\n            items: jsonSchemaValidator.optional(),\n            minItems: z.coerce.string().optional(),\n            maxItems: z.coerce.string().optional(),\n            // --- Generic Validations ---\n            enum: z.array(z.unknown()).optional(),\n            // --- Object Validations ---\n            properties: z.record(z.string(), jsonSchemaValidator).optional(),\n            required: z.array(z.string()).optional(),\n            minProperties: z.coerce.string().optional(),\n            maxProperties: z.coerce.string().optional(),\n            propertyOrdering: z.array(z.string()).optional(),\n            // --- Numeric Validations ---\n            minimum: z.number().optional(),\n            maximum: z.number().optional(),\n            // --- String Validations ---\n            minLength: z.coerce.string().optional(),\n            maxLength: z.coerce.string().optional(),\n            pattern: z.string().optional(),\n            // --- Schema Composition ---\n            anyOf: z.array(jsonSchemaValidator).optional(),\n            // --- Additional Properties --- This field is not included in the\n            // JSONSchema, will not be communicated to the model, it is here purely\n            // for enabling the zod validation strict mode.\n            additionalProperties: z.boolean().optional(),\n        });\n        // Conditionally apply .strict() based on the flag\n        return strictMode ? baseShape.strict() : baseShape;\n    });\n    return jsonSchemaValidator;\n}\n/*\nHandle type field:\nThe resulted type field in JSONSchema form zod_to_json_schema can be either\nan array consist of primitive types or a single primitive type.\nThis is due to the optimization of zod_to_json_schema, when the types in the\nunion are primitive types without any additional specifications,\nzod_to_json_schema will squash the types into an array instead of put them\nin anyOf fields. Otherwise, it will put the types in anyOf fields.\nSee the following link for more details:\nhttps://github.com/zodjs/zod-to-json-schema/blob/main/src/index.ts#L101\nThe logic here is trying to undo that optimization, flattening the array of\ntypes to anyOf fields.\n                                 type field\n                                      |\n                            ___________________________\n                           /                           \\\n                          /                              \\\n                         /                                \\\n                       Array                              Type.*\n                /                  \\                       |\n      Include null.              Not included null     type = Type.*.\n      [null, Type.*, Type.*]     multiple types.\n      [null, Type.*]             [Type.*, Type.*]\n            /                                \\\n      remove null                             \\\n      add nullable = true                      \\\n       /                    \\                   \\\n    [Type.*]           [Type.*, Type.*]          \\\n only one type left     multiple types left       \\\n add type = Type.*.           \\                  /\n                               \\                /\n                         not populate the type field in final result\n                           and make the types into anyOf fields\n                          anyOf:[{type: 'Type.*'}, {type: 'Type.*'}];\n*/\nfunction flattenTypeArrayToAnyOf(typeList, resultingSchema) {\n    if (typeList.includes('null')) {\n        resultingSchema['nullable'] = true;\n    }\n    const listWithoutNull = typeList.filter((type) => type !== 'null');\n    if (listWithoutNull.length === 1) {\n        resultingSchema['type'] = Object.values(Type).includes(listWithoutNull[0].toUpperCase())\n            ? listWithoutNull[0].toUpperCase()\n            : Type.TYPE_UNSPECIFIED;\n    }\n    else {\n        resultingSchema['anyOf'] = [];\n        for (const i of listWithoutNull) {\n            resultingSchema['anyOf'].push({\n                'type': Object.values(Type).includes(i.toUpperCase())\n                    ? i.toUpperCase()\n                    : Type.TYPE_UNSPECIFIED,\n            });\n        }\n    }\n}\nfunction processJsonSchema(_jsonSchema) {\n    const genAISchema = {};\n    const schemaFieldNames = ['items'];\n    const listSchemaFieldNames = ['anyOf'];\n    const dictSchemaFieldNames = ['properties'];\n    if (_jsonSchema['type'] && _jsonSchema['anyOf']) {\n        throw new Error('type and anyOf cannot be both populated.');\n    }\n    /*\n    This is to handle the nullable array or object. The _jsonSchema will\n    be in the format of {anyOf: [{type: 'null'}, {type: 'object'}]}. The\n    logic is to check if anyOf has 2 elements and one of the element is null,\n    if so, the anyOf field is unnecessary, so we need to get rid of the anyOf\n    field and make the schema nullable. Then use the other element as the new\n    _jsonSchema for processing. This is because the backend doesn't have a null\n    type.\n    This has to be checked before we process any other fields.\n    For example:\n      const objectNullable = z.object({\n        nullableArray: z.array(z.string()).nullable(),\n      });\n    Will have the raw _jsonSchema as:\n    {\n      type: 'OBJECT',\n      properties: {\n          nullableArray: {\n             anyOf: [\n                {type: 'null'},\n                {\n                  type: 'array',\n                  items: {type: 'string'},\n                },\n              ],\n          }\n      },\n      required: [ 'nullableArray' ],\n    }\n    Will result in following schema compatible with Gemini API:\n      {\n        type: 'OBJECT',\n        properties: {\n           nullableArray: {\n              nullable: true,\n              type: 'ARRAY',\n              items: {type: 'string'},\n           }\n        },\n        required: [ 'nullableArray' ],\n      }\n    */\n    const incomingAnyOf = _jsonSchema['anyOf'];\n    if (incomingAnyOf != null && incomingAnyOf.length == 2) {\n        if (incomingAnyOf[0]['type'] === 'null') {\n            genAISchema['nullable'] = true;\n            _jsonSchema = incomingAnyOf[1];\n        }\n        else if (incomingAnyOf[1]['type'] === 'null') {\n            genAISchema['nullable'] = true;\n            _jsonSchema = incomingAnyOf[0];\n        }\n    }\n    if (_jsonSchema['type'] instanceof Array) {\n        flattenTypeArrayToAnyOf(_jsonSchema['type'], genAISchema);\n    }\n    for (const [fieldName, fieldValue] of Object.entries(_jsonSchema)) {\n        // Skip if the fieldvalue is undefined or null.\n        if (fieldValue == null) {\n            continue;\n        }\n        if (fieldName == 'type') {\n            if (fieldValue === 'null') {\n                throw new Error('type: null can not be the only possible type for the field.');\n            }\n            if (fieldValue instanceof Array) {\n                // we have already handled the type field with array of types in the\n                // beginning of this function.\n                continue;\n            }\n            genAISchema['type'] = Object.values(Type).includes(fieldValue.toUpperCase())\n                ? fieldValue.toUpperCase()\n                : Type.TYPE_UNSPECIFIED;\n        }\n        else if (schemaFieldNames.includes(fieldName)) {\n            genAISchema[fieldName] =\n                processJsonSchema(fieldValue);\n        }\n        else if (listSchemaFieldNames.includes(fieldName)) {\n            const listSchemaFieldValue = [];\n            for (const item of fieldValue) {\n                if (item['type'] == 'null') {\n                    genAISchema['nullable'] = true;\n                    continue;\n                }\n                listSchemaFieldValue.push(processJsonSchema(item));\n            }\n            genAISchema[fieldName] =\n                listSchemaFieldValue;\n        }\n        else if (dictSchemaFieldNames.includes(fieldName)) {\n            const dictSchemaFieldValue = {};\n            for (const [key, value] of Object.entries(fieldValue)) {\n                dictSchemaFieldValue[key] = processJsonSchema(value);\n            }\n            genAISchema[fieldName] =\n                dictSchemaFieldValue;\n        }\n        else {\n            // additionalProperties is not included in JSONSchema, skipping it.\n            if (fieldName === 'additionalProperties') {\n                continue;\n            }\n            genAISchema[fieldName] = fieldValue;\n        }\n    }\n    return genAISchema;\n}\n// we take the unknown in the schema field because we want enable user to pass\n// the output of major schema declaration tools without casting. Tools such as\n// zodToJsonSchema, typebox, zodToJsonSchema function can return JsonSchema7Type\n// or object, see details in\n// https://github.com/StefanTerdell/zod-to-json-schema/blob/70525efe555cd226691e093d171370a3b10921d1/src/zodToJsonSchema.ts#L7\n// typebox can return unknown, see details in\n// https://github.com/sinclairzx81/typebox/blob/5a5431439f7d5ca6b494d0d18fbfd7b1a356d67c/src/type/create/type.ts#L35\nfunction tSchema(schema) {\n    if (Object.keys(schema).includes('$schema')) {\n        delete schema['$schema'];\n        const validatedJsonSchema = createJsonSchemaValidator().parse(schema);\n        return processJsonSchema(validatedJsonSchema);\n    }\n    else {\n        return processJsonSchema(schema);\n    }\n}\nfunction tSpeechConfig(speechConfig) {\n    if (typeof speechConfig === 'object') {\n        return speechConfig;\n    }\n    else if (typeof speechConfig === 'string') {\n        return {\n            voiceConfig: {\n                prebuiltVoiceConfig: {\n                    voiceName: speechConfig,\n                },\n            },\n        };\n    }\n    else {\n        throw new Error(`Unsupported speechConfig type: ${typeof speechConfig}`);\n    }\n}\nfunction tLiveSpeechConfig(speechConfig) {\n    if ('multiSpeakerVoiceConfig' in speechConfig) {\n        throw new Error('multiSpeakerVoiceConfig is not supported in the live API.');\n    }\n    return speechConfig;\n}\nfunction tTool(tool) {\n    if (tool.functionDeclarations) {\n        for (const functionDeclaration of tool.functionDeclarations) {\n            if (functionDeclaration.parameters) {\n                functionDeclaration.parameters = tSchema(functionDeclaration.parameters);\n            }\n            if (functionDeclaration.response) {\n                functionDeclaration.response = tSchema(functionDeclaration.response);\n            }\n        }\n    }\n    return tool;\n}\nfunction tTools(tools) {\n    // Check if the incoming type is defined.\n    if (tools === undefined || tools === null) {\n        throw new Error('tools is required');\n    }\n    if (!Array.isArray(tools)) {\n        throw new Error('tools is required and must be an array of Tools');\n    }\n    const result = [];\n    for (const tool of tools) {\n        result.push(tool);\n    }\n    return result;\n}\n/**\n * Prepends resource name with project, location, resource_prefix if needed.\n *\n * @param client The API client.\n * @param resourceName The resource name.\n * @param resourcePrefix The resource prefix.\n * @param splitsAfterPrefix The number of splits after the prefix.\n * @returns The completed resource name.\n *\n * Examples:\n *\n * ```\n * resource_name = '123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = True\n * client.project = 'bar'\n * client.location = 'us-west1'\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns: 'projects/bar/locations/us-west1/cachedContents/123'\n * ```\n *\n * ```\n * resource_name = 'projects/foo/locations/us-central1/cachedContents/123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = True\n * client.project = 'bar'\n * client.location = 'us-west1'\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns: 'projects/foo/locations/us-central1/cachedContents/123'\n * ```\n *\n * ```\n * resource_name = '123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = False\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * returns 'cachedContents/123'\n * ```\n *\n * ```\n * resource_name = 'some/wrong/cachedContents/resource/name/123'\n * resource_prefix = 'cachedContents'\n * splits_after_prefix = 1\n * client.vertexai = False\n * # client.vertexai = True\n * _resource_name(client, resource_name, resource_prefix, splits_after_prefix)\n * -> 'some/wrong/resource/name/123'\n * ```\n */\nfunction resourceName(client, resourceName, resourcePrefix, splitsAfterPrefix = 1) {\n    const shouldAppendPrefix = !resourceName.startsWith(`${resourcePrefix}/`) &&\n        resourceName.split('/').length === splitsAfterPrefix;\n    if (client.isVertexAI()) {\n        if (resourceName.startsWith('projects/')) {\n            return resourceName;\n        }\n        else if (resourceName.startsWith('locations/')) {\n            return `projects/${client.getProject()}/${resourceName}`;\n        }\n        else if (resourceName.startsWith(`${resourcePrefix}/`)) {\n            return `projects/${client.getProject()}/locations/${client.getLocation()}/${resourceName}`;\n        }\n        else if (shouldAppendPrefix) {\n            return `projects/${client.getProject()}/locations/${client.getLocation()}/${resourcePrefix}/${resourceName}`;\n        }\n        else {\n            return resourceName;\n        }\n    }\n    if (shouldAppendPrefix) {\n        return `${resourcePrefix}/${resourceName}`;\n    }\n    return resourceName;\n}\nfunction tCachedContentName(apiClient, name) {\n    if (typeof name !== 'string') {\n        throw new Error('name must be a string');\n    }\n    return resourceName(apiClient, name, 'cachedContents');\n}\nfunction tTuningJobStatus(status) {\n    switch (status) {\n        case 'STATE_UNSPECIFIED':\n            return 'JOB_STATE_UNSPECIFIED';\n        case 'CREATING':\n            return 'JOB_STATE_RUNNING';\n        case 'ACTIVE':\n            return 'JOB_STATE_SUCCEEDED';\n        case 'FAILED':\n            return 'JOB_STATE_FAILED';\n        default:\n            return status;\n    }\n}\nfunction tBytes(fromImageBytes) {\n    if (typeof fromImageBytes !== 'string') {\n        throw new Error('fromImageBytes must be a string');\n    }\n    // TODO(b/389133914): Remove dummy bytes converter.\n    return fromImageBytes;\n}\nfunction _isFile(origin) {\n    return (origin !== null &&\n        origin !== undefined &&\n        typeof origin === 'object' &&\n        'name' in origin);\n}\nfunction isGeneratedVideo(origin) {\n    return (origin !== null &&\n        origin !== undefined &&\n        typeof origin === 'object' &&\n        'video' in origin);\n}\nfunction isVideo(origin) {\n    return (origin !== null &&\n        origin !== undefined &&\n        typeof origin === 'object' &&\n        'uri' in origin);\n}\nfunction tFileName(fromName) {\n    var _a;\n    let name;\n    if (_isFile(fromName)) {\n        name = fromName.name;\n    }\n    if (isVideo(fromName)) {\n        name = fromName.uri;\n        if (name === undefined) {\n            return undefined;\n        }\n    }\n    if (isGeneratedVideo(fromName)) {\n        name = (_a = fromName.video) === null || _a === void 0 ? void 0 : _a.uri;\n        if (name === undefined) {\n            return undefined;\n        }\n    }\n    if (typeof fromName === 'string') {\n        name = fromName;\n    }\n    if (name === undefined) {\n        throw new Error('Could not extract file name from the provided input.');\n    }\n    if (name.startsWith('https://')) {\n        const suffix = name.split('files/')[1];\n        const match = suffix.match(/[a-z0-9]+/);\n        if (match === null) {\n            throw new Error(`Could not extract file name from URI ${name}`);\n        }\n        name = match[0];\n    }\n    else if (name.startsWith('files/')) {\n        name = name.split('files/')[1];\n    }\n    return name;\n}\nfunction tModelsUrl(apiClient, baseModels) {\n    let res;\n    if (apiClient.isVertexAI()) {\n        res = baseModels ? 'publishers/google/models' : 'models';\n    }\n    else {\n        res = baseModels ? 'models' : 'tunedModels';\n    }\n    return res;\n}\nfunction tExtractModels(response) {\n    for (const key of ['models', 'tunedModels', 'publisherModels']) {\n        if (hasField(response, key)) {\n            return response[key];\n        }\n    }\n    return [];\n}\nfunction hasField(data, fieldName) {\n    return data !== null && typeof data === 'object' && fieldName in data;\n}\nfunction mcpToGeminiTool(mcpTool, config = {}) {\n    const mcpToolSchema = mcpTool;\n    const functionDeclaration = {\n        name: mcpToolSchema['name'],\n        description: mcpToolSchema['description'],\n        parameters: processJsonSchema(filterToJsonSchema(mcpToolSchema['inputSchema'])),\n    };\n    if (config.behavior) {\n        functionDeclaration['behavior'] = config.behavior;\n    }\n    const geminiTool = {\n        functionDeclarations: [\n            functionDeclaration,\n        ],\n    };\n    return geminiTool;\n}\n/**\n * Converts a list of MCP tools to a single Gemini tool with a list of function\n * declarations.\n */\nfunction mcpToolsToGeminiTool(mcpTools, config = {}) {\n    const functionDeclarations = [];\n    const toolNames = new Set();\n    for (const mcpTool of mcpTools) {\n        const mcpToolName = mcpTool.name;\n        if (toolNames.has(mcpToolName)) {\n            throw new Error(`Duplicate function name ${mcpToolName} found in MCP tools. Please ensure function names are unique.`);\n        }\n        toolNames.add(mcpToolName);\n        const geminiTool = mcpToGeminiTool(mcpTool, config);\n        if (geminiTool.functionDeclarations) {\n            functionDeclarations.push(...geminiTool.functionDeclarations);\n        }\n    }\n    return { functionDeclarations: functionDeclarations };\n}\n// Filters the list schema field to only include fields that are supported by\n// JSONSchema.\nfunction filterListSchemaField(fieldValue) {\n    const listSchemaFieldValue = [];\n    for (const listFieldValue of fieldValue) {\n        listSchemaFieldValue.push(filterToJsonSchema(listFieldValue));\n    }\n    return listSchemaFieldValue;\n}\n// Filters the dict schema field to only include fields that are supported by\n// JSONSchema.\nfunction filterDictSchemaField(fieldValue) {\n    const dictSchemaFieldValue = {};\n    for (const [key, value] of Object.entries(fieldValue)) {\n        const valueRecord = value;\n        dictSchemaFieldValue[key] = filterToJsonSchema(valueRecord);\n    }\n    return dictSchemaFieldValue;\n}\n// Filters the schema to only include fields that are supported by JSONSchema.\nfunction filterToJsonSchema(schema) {\n    const schemaFieldNames = new Set(['items']); // 'additional_properties' to come\n    const listSchemaFieldNames = new Set(['anyOf']); // 'one_of', 'all_of', 'not' to come\n    const dictSchemaFieldNames = new Set(['properties']); // 'defs' to come\n    const filteredSchema = {};\n    for (const [fieldName, fieldValue] of Object.entries(schema)) {\n        if (schemaFieldNames.has(fieldName)) {\n            filteredSchema[fieldName] = filterToJsonSchema(fieldValue);\n        }\n        else if (listSchemaFieldNames.has(fieldName)) {\n            filteredSchema[fieldName] = filterListSchemaField(fieldValue);\n        }\n        else if (dictSchemaFieldNames.has(fieldName)) {\n            filteredSchema[fieldName] = filterDictSchemaField(fieldValue);\n        }\n        else if (fieldName === 'type') {\n            const typeValue = fieldValue.toUpperCase();\n            filteredSchema[fieldName] = Object.values(Type).includes(typeValue)\n                ? typeValue\n                : Type.TYPE_UNSPECIFIED;\n        }\n        else if (supportedJsonSchemaFields.has(fieldName)) {\n            filteredSchema[fieldName] = fieldValue;\n        }\n    }\n    return filteredSchema;\n}\n// Transforms a source input into a BatchJobSource object with validation.\nfunction tBatchJobSource(apiClient, src) {\n    if (typeof src !== 'string' && !Array.isArray(src)) {\n        if (apiClient && apiClient.isVertexAI()) {\n            if (src.gcsUri && src.bigqueryUri) {\n                throw new Error('Only one of `gcsUri` or `bigqueryUri` can be set.');\n            }\n            else if (!src.gcsUri && !src.bigqueryUri) {\n                throw new Error('One of `gcsUri` or `bigqueryUri` must be set.');\n            }\n        }\n        else {\n            // Logic for non-Vertex AI client (inlined_requests, file_name)\n            if (src.inlinedRequests && src.fileName) {\n                throw new Error('Only one of `inlinedRequests` or `fileName` can be set.');\n            }\n            else if (!src.inlinedRequests && !src.fileName) {\n                throw new Error('One of `inlinedRequests` or `fileName` must be set.');\n            }\n        }\n        return src;\n    }\n    // If src is an array (list in Python)\n    else if (Array.isArray(src)) {\n        return { inlinedRequests: src };\n    }\n    else if (typeof src === 'string') {\n        if (src.startsWith('gs://')) {\n            return {\n                format: 'jsonl',\n                gcsUri: [src], // GCS URI is expected as an array\n            };\n        }\n        else if (src.startsWith('bq://')) {\n            return {\n                format: 'bigquery',\n                bigqueryUri: src,\n            };\n        }\n        else if (src.startsWith('files/')) {\n            return {\n                fileName: src,\n            };\n        }\n    }\n    throw new Error(`Unsupported source: ${src}`);\n}\nfunction tBatchJobDestination(dest) {\n    const destString = dest;\n    if (destString.startsWith('gs://')) {\n        return {\n            format: 'jsonl',\n            gcsUri: destString,\n        };\n    }\n    else if (destString.startsWith('bq://')) {\n        return {\n            format: 'bigquery',\n            bigqueryUri: destString,\n        };\n    }\n    else {\n        throw new Error(`Unsupported destination: ${destString}`);\n    }\n}\nfunction tBatchJobName(apiClient, name) {\n    const nameString = name;\n    if (!apiClient.isVertexAI()) {\n        const mldevPattern = /batches\\/[^/]+$/;\n        if (mldevPattern.test(nameString)) {\n            return nameString.split('/').pop();\n        }\n        else {\n            throw new Error(`Invalid batch job name: ${nameString}.`);\n        }\n    }\n    const vertexPattern = /^projects\\/[^/]+\\/locations\\/[^/]+\\/batchPredictionJobs\\/[^/]+$/;\n    if (vertexPattern.test(nameString)) {\n        return nameString.split('/').pop();\n    }\n    else if (/^\\d+$/.test(nameString)) {\n        return nameString;\n    }\n    else {\n        throw new Error(`Invalid batch job name: ${nameString}.`);\n    }\n}\nfunction tJobState(state) {\n    const stateString = state;\n    if (stateString === 'BATCH_STATE_UNSPECIFIED') {\n        return 'JOB_STATE_UNSPECIFIED';\n    }\n    else if (stateString === 'BATCH_STATE_PENDING') {\n        return 'JOB_STATE_PENDING';\n    }\n    else if (stateString === 'BATCH_STATE_SUCCEEDED') {\n        return 'JOB_STATE_SUCCEEDED';\n    }\n    else if (stateString === 'BATCH_STATE_FAILED') {\n        return 'JOB_STATE_FAILED';\n    }\n    else if (stateString === 'BATCH_STATE_CANCELLED') {\n        return 'JOB_STATE_CANCELLED';\n    }\n    else {\n        return stateString;\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction videoMetadataToMldev$4(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobToMldev$4(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataToMldev$4(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partToMldev$4(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataToMldev$4(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobToMldev$4(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataToMldev$4(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToMldev$4(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partToMldev$4(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction schemaToMldev$1(fromObject) {\n    const toObject = {};\n    const fromAnyOf = getValueByPath(fromObject, ['anyOf']);\n    if (fromAnyOf != null) {\n        setValueByPath(toObject, ['anyOf'], fromAnyOf);\n    }\n    const fromDefault = getValueByPath(fromObject, ['default']);\n    if (fromDefault != null) {\n        setValueByPath(toObject, ['default'], fromDefault);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromEnum = getValueByPath(fromObject, ['enum']);\n    if (fromEnum != null) {\n        setValueByPath(toObject, ['enum'], fromEnum);\n    }\n    const fromExample = getValueByPath(fromObject, ['example']);\n    if (fromExample != null) {\n        setValueByPath(toObject, ['example'], fromExample);\n    }\n    const fromFormat = getValueByPath(fromObject, ['format']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['format'], fromFormat);\n    }\n    const fromItems = getValueByPath(fromObject, ['items']);\n    if (fromItems != null) {\n        setValueByPath(toObject, ['items'], fromItems);\n    }\n    const fromMaxItems = getValueByPath(fromObject, ['maxItems']);\n    if (fromMaxItems != null) {\n        setValueByPath(toObject, ['maxItems'], fromMaxItems);\n    }\n    const fromMaxLength = getValueByPath(fromObject, ['maxLength']);\n    if (fromMaxLength != null) {\n        setValueByPath(toObject, ['maxLength'], fromMaxLength);\n    }\n    const fromMaxProperties = getValueByPath(fromObject, [\n        'maxProperties',\n    ]);\n    if (fromMaxProperties != null) {\n        setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n    }\n    const fromMaximum = getValueByPath(fromObject, ['maximum']);\n    if (fromMaximum != null) {\n        setValueByPath(toObject, ['maximum'], fromMaximum);\n    }\n    const fromMinItems = getValueByPath(fromObject, ['minItems']);\n    if (fromMinItems != null) {\n        setValueByPath(toObject, ['minItems'], fromMinItems);\n    }\n    const fromMinLength = getValueByPath(fromObject, ['minLength']);\n    if (fromMinLength != null) {\n        setValueByPath(toObject, ['minLength'], fromMinLength);\n    }\n    const fromMinProperties = getValueByPath(fromObject, [\n        'minProperties',\n    ]);\n    if (fromMinProperties != null) {\n        setValueByPath(toObject, ['minProperties'], fromMinProperties);\n    }\n    const fromMinimum = getValueByPath(fromObject, ['minimum']);\n    if (fromMinimum != null) {\n        setValueByPath(toObject, ['minimum'], fromMinimum);\n    }\n    const fromNullable = getValueByPath(fromObject, ['nullable']);\n    if (fromNullable != null) {\n        setValueByPath(toObject, ['nullable'], fromNullable);\n    }\n    const fromPattern = getValueByPath(fromObject, ['pattern']);\n    if (fromPattern != null) {\n        setValueByPath(toObject, ['pattern'], fromPattern);\n    }\n    const fromProperties = getValueByPath(fromObject, ['properties']);\n    if (fromProperties != null) {\n        setValueByPath(toObject, ['properties'], fromProperties);\n    }\n    const fromPropertyOrdering = getValueByPath(fromObject, [\n        'propertyOrdering',\n    ]);\n    if (fromPropertyOrdering != null) {\n        setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n    }\n    const fromRequired = getValueByPath(fromObject, ['required']);\n    if (fromRequired != null) {\n        setValueByPath(toObject, ['required'], fromRequired);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (fromTitle != null) {\n        setValueByPath(toObject, ['title'], fromTitle);\n    }\n    const fromType = getValueByPath(fromObject, ['type']);\n    if (fromType != null) {\n        setValueByPath(toObject, ['type'], fromType);\n    }\n    return toObject;\n}\nfunction safetySettingToMldev$1(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['method']) !== undefined) {\n        throw new Error('method parameter is not supported in Gemini API.');\n    }\n    const fromCategory = getValueByPath(fromObject, ['category']);\n    if (fromCategory != null) {\n        setValueByPath(toObject, ['category'], fromCategory);\n    }\n    const fromThreshold = getValueByPath(fromObject, ['threshold']);\n    if (fromThreshold != null) {\n        setValueByPath(toObject, ['threshold'], fromThreshold);\n    }\n    return toObject;\n}\nfunction functionDeclarationToMldev$4(fromObject) {\n    const toObject = {};\n    const fromBehavior = getValueByPath(fromObject, ['behavior']);\n    if (fromBehavior != null) {\n        setValueByPath(toObject, ['behavior'], fromBehavior);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    const fromParametersJsonSchema = getValueByPath(fromObject, [\n        'parametersJsonSchema',\n    ]);\n    if (fromParametersJsonSchema != null) {\n        setValueByPath(toObject, ['parametersJsonSchema'], fromParametersJsonSchema);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], fromResponse);\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    return toObject;\n}\nfunction intervalToMldev$4(fromObject) {\n    const toObject = {};\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    return toObject;\n}\nfunction googleSearchToMldev$4(fromObject) {\n    const toObject = {};\n    const fromTimeRangeFilter = getValueByPath(fromObject, [\n        'timeRangeFilter',\n    ]);\n    if (fromTimeRangeFilter != null) {\n        setValueByPath(toObject, ['timeRangeFilter'], intervalToMldev$4(fromTimeRangeFilter));\n    }\n    return toObject;\n}\nfunction dynamicRetrievalConfigToMldev$4(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToMldev$4(fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToMldev$4(fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction urlContextToMldev$4() {\n    const toObject = {};\n    return toObject;\n}\nfunction toolToMldev$4(fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        let transformedList = fromFunctionDeclarations;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionDeclarationToMldev$4(item);\n            });\n        }\n        setValueByPath(toObject, ['functionDeclarations'], transformedList);\n    }\n    if (getValueByPath(fromObject, ['retrieval']) !== undefined) {\n        throw new Error('retrieval parameter is not supported in Gemini API.');\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToMldev$4(fromGoogleSearch));\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToMldev$4(fromGoogleSearchRetrieval));\n    }\n    if (getValueByPath(fromObject, ['enterpriseWebSearch']) !== undefined) {\n        throw new Error('enterpriseWebSearch parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['googleMaps']) !== undefined) {\n        throw new Error('googleMaps parameter is not supported in Gemini API.');\n    }\n    const fromUrlContext = getValueByPath(fromObject, ['urlContext']);\n    if (fromUrlContext != null) {\n        setValueByPath(toObject, ['urlContext'], urlContextToMldev$4());\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction functionCallingConfigToMldev$2(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromAllowedFunctionNames = getValueByPath(fromObject, [\n        'allowedFunctionNames',\n    ]);\n    if (fromAllowedFunctionNames != null) {\n        setValueByPath(toObject, ['allowedFunctionNames'], fromAllowedFunctionNames);\n    }\n    return toObject;\n}\nfunction latLngToMldev$2(fromObject) {\n    const toObject = {};\n    const fromLatitude = getValueByPath(fromObject, ['latitude']);\n    if (fromLatitude != null) {\n        setValueByPath(toObject, ['latitude'], fromLatitude);\n    }\n    const fromLongitude = getValueByPath(fromObject, ['longitude']);\n    if (fromLongitude != null) {\n        setValueByPath(toObject, ['longitude'], fromLongitude);\n    }\n    return toObject;\n}\nfunction retrievalConfigToMldev$2(fromObject) {\n    const toObject = {};\n    const fromLatLng = getValueByPath(fromObject, ['latLng']);\n    if (fromLatLng != null) {\n        setValueByPath(toObject, ['latLng'], latLngToMldev$2(fromLatLng));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction toolConfigToMldev$2(fromObject) {\n    const toObject = {};\n    const fromFunctionCallingConfig = getValueByPath(fromObject, [\n        'functionCallingConfig',\n    ]);\n    if (fromFunctionCallingConfig != null) {\n        setValueByPath(toObject, ['functionCallingConfig'], functionCallingConfigToMldev$2(fromFunctionCallingConfig));\n    }\n    const fromRetrievalConfig = getValueByPath(fromObject, [\n        'retrievalConfig',\n    ]);\n    if (fromRetrievalConfig != null) {\n        setValueByPath(toObject, ['retrievalConfig'], retrievalConfigToMldev$2(fromRetrievalConfig));\n    }\n    return toObject;\n}\nfunction prebuiltVoiceConfigToMldev$3(fromObject) {\n    const toObject = {};\n    const fromVoiceName = getValueByPath(fromObject, ['voiceName']);\n    if (fromVoiceName != null) {\n        setValueByPath(toObject, ['voiceName'], fromVoiceName);\n    }\n    return toObject;\n}\nfunction voiceConfigToMldev$3(fromObject) {\n    const toObject = {};\n    const fromPrebuiltVoiceConfig = getValueByPath(fromObject, [\n        'prebuiltVoiceConfig',\n    ]);\n    if (fromPrebuiltVoiceConfig != null) {\n        setValueByPath(toObject, ['prebuiltVoiceConfig'], prebuiltVoiceConfigToMldev$3(fromPrebuiltVoiceConfig));\n    }\n    return toObject;\n}\nfunction speakerVoiceConfigToMldev$3(fromObject) {\n    const toObject = {};\n    const fromSpeaker = getValueByPath(fromObject, ['speaker']);\n    if (fromSpeaker != null) {\n        setValueByPath(toObject, ['speaker'], fromSpeaker);\n    }\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToMldev$3(fromVoiceConfig));\n    }\n    return toObject;\n}\nfunction multiSpeakerVoiceConfigToMldev$3(fromObject) {\n    const toObject = {};\n    const fromSpeakerVoiceConfigs = getValueByPath(fromObject, [\n        'speakerVoiceConfigs',\n    ]);\n    if (fromSpeakerVoiceConfigs != null) {\n        let transformedList = fromSpeakerVoiceConfigs;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return speakerVoiceConfigToMldev$3(item);\n            });\n        }\n        setValueByPath(toObject, ['speakerVoiceConfigs'], transformedList);\n    }\n    return toObject;\n}\nfunction speechConfigToMldev$3(fromObject) {\n    const toObject = {};\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToMldev$3(fromVoiceConfig));\n    }\n    const fromMultiSpeakerVoiceConfig = getValueByPath(fromObject, [\n        'multiSpeakerVoiceConfig',\n    ]);\n    if (fromMultiSpeakerVoiceConfig != null) {\n        setValueByPath(toObject, ['multiSpeakerVoiceConfig'], multiSpeakerVoiceConfigToMldev$3(fromMultiSpeakerVoiceConfig));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction thinkingConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromIncludeThoughts = getValueByPath(fromObject, [\n        'includeThoughts',\n    ]);\n    if (fromIncludeThoughts != null) {\n        setValueByPath(toObject, ['includeThoughts'], fromIncludeThoughts);\n    }\n    const fromThinkingBudget = getValueByPath(fromObject, [\n        'thinkingBudget',\n    ]);\n    if (fromThinkingBudget != null) {\n        setValueByPath(toObject, ['thinkingBudget'], fromThinkingBudget);\n    }\n    return toObject;\n}\nfunction generateContentConfigToMldev$1(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToMldev$4(tContent(fromSystemInstruction)));\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (fromTemperature != null) {\n        setValueByPath(toObject, ['temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (fromTopP != null) {\n        setValueByPath(toObject, ['topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (fromTopK != null) {\n        setValueByPath(toObject, ['topK'], fromTopK);\n    }\n    const fromCandidateCount = getValueByPath(fromObject, [\n        'candidateCount',\n    ]);\n    if (fromCandidateCount != null) {\n        setValueByPath(toObject, ['candidateCount'], fromCandidateCount);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (fromMaxOutputTokens != null) {\n        setValueByPath(toObject, ['maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromStopSequences = getValueByPath(fromObject, [\n        'stopSequences',\n    ]);\n    if (fromStopSequences != null) {\n        setValueByPath(toObject, ['stopSequences'], fromStopSequences);\n    }\n    const fromResponseLogprobs = getValueByPath(fromObject, [\n        'responseLogprobs',\n    ]);\n    if (fromResponseLogprobs != null) {\n        setValueByPath(toObject, ['responseLogprobs'], fromResponseLogprobs);\n    }\n    const fromLogprobs = getValueByPath(fromObject, ['logprobs']);\n    if (fromLogprobs != null) {\n        setValueByPath(toObject, ['logprobs'], fromLogprobs);\n    }\n    const fromPresencePenalty = getValueByPath(fromObject, [\n        'presencePenalty',\n    ]);\n    if (fromPresencePenalty != null) {\n        setValueByPath(toObject, ['presencePenalty'], fromPresencePenalty);\n    }\n    const fromFrequencyPenalty = getValueByPath(fromObject, [\n        'frequencyPenalty',\n    ]);\n    if (fromFrequencyPenalty != null) {\n        setValueByPath(toObject, ['frequencyPenalty'], fromFrequencyPenalty);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (fromSeed != null) {\n        setValueByPath(toObject, ['seed'], fromSeed);\n    }\n    const fromResponseMimeType = getValueByPath(fromObject, [\n        'responseMimeType',\n    ]);\n    if (fromResponseMimeType != null) {\n        setValueByPath(toObject, ['responseMimeType'], fromResponseMimeType);\n    }\n    const fromResponseSchema = getValueByPath(fromObject, [\n        'responseSchema',\n    ]);\n    if (fromResponseSchema != null) {\n        setValueByPath(toObject, ['responseSchema'], schemaToMldev$1(tSchema(fromResponseSchema)));\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    if (getValueByPath(fromObject, ['routingConfig']) !== undefined) {\n        throw new Error('routingConfig parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['modelSelectionConfig']) !== undefined) {\n        throw new Error('modelSelectionConfig parameter is not supported in Gemini API.');\n    }\n    const fromSafetySettings = getValueByPath(fromObject, [\n        'safetySettings',\n    ]);\n    if (parentObject !== undefined && fromSafetySettings != null) {\n        let transformedList = fromSafetySettings;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return safetySettingToMldev$1(item);\n            });\n        }\n        setValueByPath(parentObject, ['safetySettings'], transformedList);\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        let transformedList = tTools(fromTools);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return toolToMldev$4(tTool(item));\n            });\n        }\n        setValueByPath(parentObject, ['tools'], transformedList);\n    }\n    const fromToolConfig = getValueByPath(fromObject, ['toolConfig']);\n    if (parentObject !== undefined && fromToolConfig != null) {\n        setValueByPath(parentObject, ['toolConfig'], toolConfigToMldev$2(fromToolConfig));\n    }\n    if (getValueByPath(fromObject, ['labels']) !== undefined) {\n        throw new Error('labels parameter is not supported in Gemini API.');\n    }\n    const fromCachedContent = getValueByPath(fromObject, [\n        'cachedContent',\n    ]);\n    if (parentObject !== undefined && fromCachedContent != null) {\n        setValueByPath(parentObject, ['cachedContent'], tCachedContentName(apiClient, fromCachedContent));\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (fromResponseModalities != null) {\n        setValueByPath(toObject, ['responseModalities'], fromResponseModalities);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (fromMediaResolution != null) {\n        setValueByPath(toObject, ['mediaResolution'], fromMediaResolution);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (fromSpeechConfig != null) {\n        setValueByPath(toObject, ['speechConfig'], speechConfigToMldev$3(tSpeechConfig(fromSpeechConfig)));\n    }\n    if (getValueByPath(fromObject, ['audioTimestamp']) !== undefined) {\n        throw new Error('audioTimestamp parameter is not supported in Gemini API.');\n    }\n    const fromThinkingConfig = getValueByPath(fromObject, [\n        'thinkingConfig',\n    ]);\n    if (fromThinkingConfig != null) {\n        setValueByPath(toObject, ['thinkingConfig'], thinkingConfigToMldev$1(fromThinkingConfig));\n    }\n    return toObject;\n}\nfunction inlinedRequestToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['request', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        let transformedList = tContents(fromContents);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentToMldev$4(item);\n            });\n        }\n        setValueByPath(toObject, ['request', 'contents'], transformedList);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['request', 'generationConfig'], generateContentConfigToMldev$1(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction batchJobSourceToMldev(apiClient, fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['format']) !== undefined) {\n        throw new Error('format parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['gcsUri']) !== undefined) {\n        throw new Error('gcsUri parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['bigqueryUri']) !== undefined) {\n        throw new Error('bigqueryUri parameter is not supported in Gemini API.');\n    }\n    const fromFileName = getValueByPath(fromObject, ['fileName']);\n    if (fromFileName != null) {\n        setValueByPath(toObject, ['fileName'], fromFileName);\n    }\n    const fromInlinedRequests = getValueByPath(fromObject, [\n        'inlinedRequests',\n    ]);\n    if (fromInlinedRequests != null) {\n        let transformedList = fromInlinedRequests;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return inlinedRequestToMldev(apiClient, item);\n            });\n        }\n        setValueByPath(toObject, ['requests', 'requests'], transformedList);\n    }\n    return toObject;\n}\nfunction createBatchJobConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (parentObject !== undefined && fromDisplayName != null) {\n        setValueByPath(parentObject, ['batch', 'displayName'], fromDisplayName);\n    }\n    if (getValueByPath(fromObject, ['dest']) !== undefined) {\n        throw new Error('dest parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction createBatchJobParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromSrc = getValueByPath(fromObject, ['src']);\n    if (fromSrc != null) {\n        setValueByPath(toObject, ['batch', 'inputConfig'], batchJobSourceToMldev(apiClient, tBatchJobSource(apiClient, fromSrc)));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], createBatchJobConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getBatchJobParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tBatchJobName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction cancelBatchJobParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tBatchJobName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction listBatchJobsConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    if (getValueByPath(fromObject, ['filter']) !== undefined) {\n        throw new Error('filter parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction listBatchJobsParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listBatchJobsConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction batchJobSourceToVertex(fromObject) {\n    const toObject = {};\n    const fromFormat = getValueByPath(fromObject, ['format']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['instancesFormat'], fromFormat);\n    }\n    const fromGcsUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromGcsUri != null) {\n        setValueByPath(toObject, ['gcsSource', 'uris'], fromGcsUri);\n    }\n    const fromBigqueryUri = getValueByPath(fromObject, ['bigqueryUri']);\n    if (fromBigqueryUri != null) {\n        setValueByPath(toObject, ['bigquerySource', 'inputUri'], fromBigqueryUri);\n    }\n    if (getValueByPath(fromObject, ['fileName']) !== undefined) {\n        throw new Error('fileName parameter is not supported in Vertex AI.');\n    }\n    if (getValueByPath(fromObject, ['inlinedRequests']) !== undefined) {\n        throw new Error('inlinedRequests parameter is not supported in Vertex AI.');\n    }\n    return toObject;\n}\nfunction batchJobDestinationToVertex(fromObject) {\n    const toObject = {};\n    const fromFormat = getValueByPath(fromObject, ['format']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['predictionsFormat'], fromFormat);\n    }\n    const fromGcsUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromGcsUri != null) {\n        setValueByPath(toObject, ['gcsDestination', 'outputUriPrefix'], fromGcsUri);\n    }\n    const fromBigqueryUri = getValueByPath(fromObject, ['bigqueryUri']);\n    if (fromBigqueryUri != null) {\n        setValueByPath(toObject, ['bigqueryDestination', 'outputUri'], fromBigqueryUri);\n    }\n    if (getValueByPath(fromObject, ['fileName']) !== undefined) {\n        throw new Error('fileName parameter is not supported in Vertex AI.');\n    }\n    if (getValueByPath(fromObject, ['inlinedResponses']) !== undefined) {\n        throw new Error('inlinedResponses parameter is not supported in Vertex AI.');\n    }\n    return toObject;\n}\nfunction createBatchJobConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (parentObject !== undefined && fromDisplayName != null) {\n        setValueByPath(parentObject, ['displayName'], fromDisplayName);\n    }\n    const fromDest = getValueByPath(fromObject, ['dest']);\n    if (parentObject !== undefined && fromDest != null) {\n        setValueByPath(parentObject, ['outputConfig'], batchJobDestinationToVertex(tBatchJobDestination(fromDest)));\n    }\n    return toObject;\n}\nfunction createBatchJobParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], tModel(apiClient, fromModel));\n    }\n    const fromSrc = getValueByPath(fromObject, ['src']);\n    if (fromSrc != null) {\n        setValueByPath(toObject, ['inputConfig'], batchJobSourceToVertex(tBatchJobSource(apiClient, fromSrc)));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], createBatchJobConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getBatchJobParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tBatchJobName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction cancelBatchJobParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tBatchJobName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction listBatchJobsConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    const fromFilter = getValueByPath(fromObject, ['filter']);\n    if (parentObject !== undefined && fromFilter != null) {\n        setValueByPath(parentObject, ['_query', 'filter'], fromFilter);\n    }\n    return toObject;\n}\nfunction listBatchJobsParametersToVertex(fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listBatchJobsConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction jobErrorFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction videoMetadataFromMldev$2(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobFromMldev$2(fromObject) {\n    const toObject = {};\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataFromMldev$2(fromObject) {\n    const toObject = {};\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partFromMldev$2(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataFromMldev$2(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobFromMldev$2(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataFromMldev$2(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentFromMldev$2(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partFromMldev$2(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction citationMetadataFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromCitations = getValueByPath(fromObject, ['citationSources']);\n    if (fromCitations != null) {\n        setValueByPath(toObject, ['citations'], fromCitations);\n    }\n    return toObject;\n}\nfunction urlMetadataFromMldev$2(fromObject) {\n    const toObject = {};\n    const fromRetrievedUrl = getValueByPath(fromObject, ['retrievedUrl']);\n    if (fromRetrievedUrl != null) {\n        setValueByPath(toObject, ['retrievedUrl'], fromRetrievedUrl);\n    }\n    const fromUrlRetrievalStatus = getValueByPath(fromObject, [\n        'urlRetrievalStatus',\n    ]);\n    if (fromUrlRetrievalStatus != null) {\n        setValueByPath(toObject, ['urlRetrievalStatus'], fromUrlRetrievalStatus);\n    }\n    return toObject;\n}\nfunction urlContextMetadataFromMldev$2(fromObject) {\n    const toObject = {};\n    const fromUrlMetadata = getValueByPath(fromObject, ['urlMetadata']);\n    if (fromUrlMetadata != null) {\n        let transformedList = fromUrlMetadata;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return urlMetadataFromMldev$2(item);\n            });\n        }\n        setValueByPath(toObject, ['urlMetadata'], transformedList);\n    }\n    return toObject;\n}\nfunction candidateFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromContent = getValueByPath(fromObject, ['content']);\n    if (fromContent != null) {\n        setValueByPath(toObject, ['content'], contentFromMldev$2(fromContent));\n    }\n    const fromCitationMetadata = getValueByPath(fromObject, [\n        'citationMetadata',\n    ]);\n    if (fromCitationMetadata != null) {\n        setValueByPath(toObject, ['citationMetadata'], citationMetadataFromMldev$1(fromCitationMetadata));\n    }\n    const fromTokenCount = getValueByPath(fromObject, ['tokenCount']);\n    if (fromTokenCount != null) {\n        setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n    }\n    const fromFinishReason = getValueByPath(fromObject, ['finishReason']);\n    if (fromFinishReason != null) {\n        setValueByPath(toObject, ['finishReason'], fromFinishReason);\n    }\n    const fromUrlContextMetadata = getValueByPath(fromObject, [\n        'urlContextMetadata',\n    ]);\n    if (fromUrlContextMetadata != null) {\n        setValueByPath(toObject, ['urlContextMetadata'], urlContextMetadataFromMldev$2(fromUrlContextMetadata));\n    }\n    const fromAvgLogprobs = getValueByPath(fromObject, ['avgLogprobs']);\n    if (fromAvgLogprobs != null) {\n        setValueByPath(toObject, ['avgLogprobs'], fromAvgLogprobs);\n    }\n    const fromGroundingMetadata = getValueByPath(fromObject, [\n        'groundingMetadata',\n    ]);\n    if (fromGroundingMetadata != null) {\n        setValueByPath(toObject, ['groundingMetadata'], fromGroundingMetadata);\n    }\n    const fromIndex = getValueByPath(fromObject, ['index']);\n    if (fromIndex != null) {\n        setValueByPath(toObject, ['index'], fromIndex);\n    }\n    const fromLogprobsResult = getValueByPath(fromObject, [\n        'logprobsResult',\n    ]);\n    if (fromLogprobsResult != null) {\n        setValueByPath(toObject, ['logprobsResult'], fromLogprobsResult);\n    }\n    const fromSafetyRatings = getValueByPath(fromObject, [\n        'safetyRatings',\n    ]);\n    if (fromSafetyRatings != null) {\n        setValueByPath(toObject, ['safetyRatings'], fromSafetyRatings);\n    }\n    return toObject;\n}\nfunction generateContentResponseFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromCandidates = getValueByPath(fromObject, ['candidates']);\n    if (fromCandidates != null) {\n        let transformedList = fromCandidates;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return candidateFromMldev$1(item);\n            });\n        }\n        setValueByPath(toObject, ['candidates'], transformedList);\n    }\n    const fromModelVersion = getValueByPath(fromObject, ['modelVersion']);\n    if (fromModelVersion != null) {\n        setValueByPath(toObject, ['modelVersion'], fromModelVersion);\n    }\n    const fromPromptFeedback = getValueByPath(fromObject, [\n        'promptFeedback',\n    ]);\n    if (fromPromptFeedback != null) {\n        setValueByPath(toObject, ['promptFeedback'], fromPromptFeedback);\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n    }\n    return toObject;\n}\nfunction inlinedResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], generateContentResponseFromMldev$1(fromResponse));\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], jobErrorFromMldev());\n    }\n    return toObject;\n}\nfunction batchJobDestinationFromMldev(fromObject) {\n    const toObject = {};\n    const fromFileName = getValueByPath(fromObject, ['responsesFile']);\n    if (fromFileName != null) {\n        setValueByPath(toObject, ['fileName'], fromFileName);\n    }\n    const fromInlinedResponses = getValueByPath(fromObject, [\n        'inlinedResponses',\n        'inlinedResponses',\n    ]);\n    if (fromInlinedResponses != null) {\n        let transformedList = fromInlinedResponses;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return inlinedResponseFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['inlinedResponses'], transformedList);\n    }\n    return toObject;\n}\nfunction batchJobFromMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, [\n        'metadata',\n        'displayName',\n    ]);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromState = getValueByPath(fromObject, ['metadata', 'state']);\n    if (fromState != null) {\n        setValueByPath(toObject, ['state'], tJobState(fromState));\n    }\n    const fromCreateTime = getValueByPath(fromObject, [\n        'metadata',\n        'createTime',\n    ]);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, [\n        'metadata',\n        'endTime',\n    ]);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, [\n        'metadata',\n        'updateTime',\n    ]);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromModel = getValueByPath(fromObject, ['metadata', 'model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], fromModel);\n    }\n    const fromDest = getValueByPath(fromObject, ['metadata', 'output']);\n    if (fromDest != null) {\n        setValueByPath(toObject, ['dest'], batchJobDestinationFromMldev(fromDest));\n    }\n    return toObject;\n}\nfunction listBatchJobsResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromBatchJobs = getValueByPath(fromObject, ['operations']);\n    if (fromBatchJobs != null) {\n        let transformedList = fromBatchJobs;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return batchJobFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['batchJobs'], transformedList);\n    }\n    return toObject;\n}\nfunction jobErrorFromVertex(fromObject) {\n    const toObject = {};\n    const fromDetails = getValueByPath(fromObject, ['details']);\n    if (fromDetails != null) {\n        setValueByPath(toObject, ['details'], fromDetails);\n    }\n    const fromCode = getValueByPath(fromObject, ['code']);\n    if (fromCode != null) {\n        setValueByPath(toObject, ['code'], fromCode);\n    }\n    const fromMessage = getValueByPath(fromObject, ['message']);\n    if (fromMessage != null) {\n        setValueByPath(toObject, ['message'], fromMessage);\n    }\n    return toObject;\n}\nfunction batchJobSourceFromVertex(fromObject) {\n    const toObject = {};\n    const fromFormat = getValueByPath(fromObject, ['instancesFormat']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['format'], fromFormat);\n    }\n    const fromGcsUri = getValueByPath(fromObject, ['gcsSource', 'uris']);\n    if (fromGcsUri != null) {\n        setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n    }\n    const fromBigqueryUri = getValueByPath(fromObject, [\n        'bigquerySource',\n        'inputUri',\n    ]);\n    if (fromBigqueryUri != null) {\n        setValueByPath(toObject, ['bigqueryUri'], fromBigqueryUri);\n    }\n    return toObject;\n}\nfunction batchJobDestinationFromVertex(fromObject) {\n    const toObject = {};\n    const fromFormat = getValueByPath(fromObject, ['predictionsFormat']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['format'], fromFormat);\n    }\n    const fromGcsUri = getValueByPath(fromObject, [\n        'gcsDestination',\n        'outputUriPrefix',\n    ]);\n    if (fromGcsUri != null) {\n        setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n    }\n    const fromBigqueryUri = getValueByPath(fromObject, [\n        'bigqueryDestination',\n        'outputUri',\n    ]);\n    if (fromBigqueryUri != null) {\n        setValueByPath(toObject, ['bigqueryUri'], fromBigqueryUri);\n    }\n    return toObject;\n}\nfunction batchJobFromVertex(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromState = getValueByPath(fromObject, ['state']);\n    if (fromState != null) {\n        setValueByPath(toObject, ['state'], tJobState(fromState));\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], jobErrorFromVertex(fromError));\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], fromModel);\n    }\n    const fromSrc = getValueByPath(fromObject, ['inputConfig']);\n    if (fromSrc != null) {\n        setValueByPath(toObject, ['src'], batchJobSourceFromVertex(fromSrc));\n    }\n    const fromDest = getValueByPath(fromObject, ['outputConfig']);\n    if (fromDest != null) {\n        setValueByPath(toObject, ['dest'], batchJobDestinationFromVertex(fromDest));\n    }\n    return toObject;\n}\nfunction listBatchJobsResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromBatchJobs = getValueByPath(fromObject, [\n        'batchPredictionJobs',\n    ]);\n    if (fromBatchJobs != null) {\n        let transformedList = fromBatchJobs;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return batchJobFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['batchJobs'], transformedList);\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Pagers for the GenAI List APIs.\n */\nvar PagedItem;\n(function (PagedItem) {\n    PagedItem[\"PAGED_ITEM_BATCH_JOBS\"] = \"batchJobs\";\n    PagedItem[\"PAGED_ITEM_MODELS\"] = \"models\";\n    PagedItem[\"PAGED_ITEM_TUNING_JOBS\"] = \"tuningJobs\";\n    PagedItem[\"PAGED_ITEM_FILES\"] = \"files\";\n    PagedItem[\"PAGED_ITEM_CACHED_CONTENTS\"] = \"cachedContents\";\n})(PagedItem || (PagedItem = {}));\n/**\n * Pager class for iterating through paginated results.\n */\nclass Pager {\n    constructor(name, request, response, params) {\n        this.pageInternal = [];\n        this.paramsInternal = {};\n        this.requestInternal = request;\n        this.init(name, response, params);\n    }\n    init(name, response, params) {\n        var _a, _b;\n        this.nameInternal = name;\n        this.pageInternal = response[this.nameInternal] || [];\n        this.idxInternal = 0;\n        let requestParams = { config: {} };\n        if (!params) {\n            requestParams = { config: {} };\n        }\n        else if (typeof params === 'object') {\n            requestParams = Object.assign({}, params);\n        }\n        else {\n            requestParams = params;\n        }\n        if (requestParams['config']) {\n            requestParams['config']['pageToken'] = response['nextPageToken'];\n        }\n        this.paramsInternal = requestParams;\n        this.pageInternalSize =\n            (_b = (_a = requestParams['config']) === null || _a === void 0 ? void 0 : _a['pageSize']) !== null && _b !== void 0 ? _b : this.pageInternal.length;\n    }\n    initNextPage(response) {\n        this.init(this.nameInternal, response, this.paramsInternal);\n    }\n    /**\n     * Returns the current page, which is a list of items.\n     *\n     * @remarks\n     * The first page is retrieved when the pager is created. The returned list of\n     * items could be a subset of the entire list.\n     */\n    get page() {\n        return this.pageInternal;\n    }\n    /**\n     * Returns the type of paged item (for example, ``batch_jobs``).\n     */\n    get name() {\n        return this.nameInternal;\n    }\n    /**\n     * Returns the length of the page fetched each time by this pager.\n     *\n     * @remarks\n     * The number of items in the page is less than or equal to the page length.\n     */\n    get pageSize() {\n        return this.pageInternalSize;\n    }\n    /**\n     * Returns the parameters when making the API request for the next page.\n     *\n     * @remarks\n     * Parameters contain a set of optional configs that can be\n     * used to customize the API request. For example, the `pageToken` parameter\n     * contains the token to request the next page.\n     */\n    get params() {\n        return this.paramsInternal;\n    }\n    /**\n     * Returns the total number of items in the current page.\n     */\n    get pageLength() {\n        return this.pageInternal.length;\n    }\n    /**\n     * Returns the item at the given index.\n     */\n    getItem(index) {\n        return this.pageInternal[index];\n    }\n    /**\n     * Returns an async iterator that support iterating through all items\n     * retrieved from the API.\n     *\n     * @remarks\n     * The iterator will automatically fetch the next page if there are more items\n     * to fetch from the API.\n     *\n     * @example\n     *\n     * ```ts\n     * const pager = await ai.files.list({config: {pageSize: 10}});\n     * for await (const file of pager) {\n     *   console.log(file.name);\n     * }\n     * ```\n     */\n    [Symbol.asyncIterator]() {\n        return {\n            next: async () => {\n                if (this.idxInternal >= this.pageLength) {\n                    if (this.hasNextPage()) {\n                        await this.nextPage();\n                    }\n                    else {\n                        return { value: undefined, done: true };\n                    }\n                }\n                const item = this.getItem(this.idxInternal);\n                this.idxInternal += 1;\n                return { value: item, done: false };\n            },\n            return: async () => {\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * Fetches the next page of items. This makes a new API request.\n     *\n     * @throws {Error} If there are no more pages to fetch.\n     *\n     * @example\n     *\n     * ```ts\n     * const pager = await ai.files.list({config: {pageSize: 10}});\n     * let page = pager.page;\n     * while (true) {\n     *   for (const file of page) {\n     *     console.log(file.name);\n     *   }\n     *   if (!pager.hasNextPage()) {\n     *     break;\n     *   }\n     *   page = await pager.nextPage();\n     * }\n     * ```\n     */\n    async nextPage() {\n        if (!this.hasNextPage()) {\n            throw new Error('No more pages to fetch.');\n        }\n        const response = await this.requestInternal(this.params);\n        this.initNextPage(response);\n        return this.page;\n    }\n    /**\n     * Returns true if there are more pages to fetch from the API.\n     */\n    hasNextPage() {\n        var _a;\n        if (((_a = this.params['config']) === null || _a === void 0 ? void 0 : _a['pageToken']) !== undefined) {\n            return true;\n        }\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Batches extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n        /**\n         * Create batch job.\n         *\n         * @param params - The parameters for create batch job request.\n         * @return The created batch job.\n         *\n         * @example\n         * ```ts\n         * const response = await ai.batches.create({\n         *   model: 'gemini-2.0-flash',\n         *   src: {gcsUri: 'gs://bucket/path/to/file.jsonl', format: 'jsonl'},\n         *   config: {\n         *     dest: {gcsUri: 'gs://bucket/path/output/directory', format: 'jsonl'},\n         *   }\n         * });\n         * console.log(response);\n         * ```\n         */\n        this.create = async (params) => {\n            if (this.apiClient.isVertexAI()) {\n                if (Array.isArray(params.src)) {\n                    throw new Error('InlinedRequest[] is not supported in Vertex AI. Please use ' +\n                        'Google Cloud Storage URI or BigQuery URI instead.');\n                }\n                params.config = params.config || {};\n                if (params.config.displayName === undefined) {\n                    params.config.displayName = 'genaiBatchJob_';\n                }\n                if (params.config.dest === undefined && typeof params.src === 'string') {\n                    if (params.src.startsWith('gs://') && params.src.endsWith('.jsonl')) {\n                        params.config.dest = `${params.src.slice(0, -6)}/dest`;\n                    }\n                    else if (params.src.startsWith('bq://')) {\n                        params.config.dest = `${params.src}_dest_`;\n                    }\n                    else {\n                        throw new Error('Unsupported source:' + params.src);\n                    }\n                }\n            }\n            return await this.createInternal(params);\n        };\n        /**\n         * Lists batch job configurations.\n         *\n         * @param params - The parameters for the list request.\n         * @return The paginated results of the list of batch jobs.\n         *\n         * @example\n         * ```ts\n         * const batchJobs = await ai.batches.list({config: {'pageSize': 2}});\n         * for await (const batchJob of batchJobs) {\n         *   console.log(batchJob);\n         * }\n         * ```\n         */\n        this.list = async (params = {}) => {\n            return new Pager(PagedItem.PAGED_ITEM_BATCH_JOBS, (x) => this.listInternal(x), await this.listInternal(params), params);\n        };\n    }\n    /**\n     * Internal method to create batch job.\n     *\n     * @param params - The parameters for create batch job request.\n     * @return The created batch job.\n     *\n     */\n    async createInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = createBatchJobParametersToVertex(this.apiClient, params);\n            path = formatMap('batchPredictionJobs', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = batchJobFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = createBatchJobParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:batchGenerateContent', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = batchJobFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Gets batch job configurations.\n     *\n     * @param params - The parameters for the get request.\n     * @return The batch job.\n     *\n     * @example\n     * ```ts\n     * await ai.batches.get({name: '...'}); // The server-generated resource name.\n     * ```\n     */\n    async get(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = getBatchJobParametersToVertex(this.apiClient, params);\n            path = formatMap('batchPredictionJobs/{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = batchJobFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = getBatchJobParametersToMldev(this.apiClient, params);\n            path = formatMap('batches/{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = batchJobFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Cancels a batch job.\n     *\n     * @param params - The parameters for the cancel request.\n     * @return The empty response returned by the API.\n     *\n     * @example\n     * ```ts\n     * await ai.batches.cancel({name: '...'}); // The server-generated resource name.\n     * ```\n     */\n    async cancel(params) {\n        var _a, _b, _c, _d;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = cancelBatchJobParametersToVertex(this.apiClient, params);\n            path = formatMap('batchPredictionJobs/{name}:cancel', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            await this.apiClient.request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            });\n        }\n        else {\n            const body = cancelBatchJobParametersToMldev(this.apiClient, params);\n            path = formatMap('batches/{name}:cancel', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            await this.apiClient.request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            });\n        }\n    }\n    async listInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = listBatchJobsParametersToVertex(params);\n            path = formatMap('batchPredictionJobs', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listBatchJobsResponseFromVertex(apiResponse);\n                const typedResp = new ListBatchJobsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = listBatchJobsParametersToMldev(params);\n            path = formatMap('batches', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listBatchJobsResponseFromMldev(apiResponse);\n                const typedResp = new ListBatchJobsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction videoMetadataToMldev$3(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobToMldev$3(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataToMldev$3(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partToMldev$3(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataToMldev$3(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobToMldev$3(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataToMldev$3(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToMldev$3(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partToMldev$3(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction functionDeclarationToMldev$3(fromObject) {\n    const toObject = {};\n    const fromBehavior = getValueByPath(fromObject, ['behavior']);\n    if (fromBehavior != null) {\n        setValueByPath(toObject, ['behavior'], fromBehavior);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    const fromParametersJsonSchema = getValueByPath(fromObject, [\n        'parametersJsonSchema',\n    ]);\n    if (fromParametersJsonSchema != null) {\n        setValueByPath(toObject, ['parametersJsonSchema'], fromParametersJsonSchema);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], fromResponse);\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    return toObject;\n}\nfunction intervalToMldev$3(fromObject) {\n    const toObject = {};\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    return toObject;\n}\nfunction googleSearchToMldev$3(fromObject) {\n    const toObject = {};\n    const fromTimeRangeFilter = getValueByPath(fromObject, [\n        'timeRangeFilter',\n    ]);\n    if (fromTimeRangeFilter != null) {\n        setValueByPath(toObject, ['timeRangeFilter'], intervalToMldev$3(fromTimeRangeFilter));\n    }\n    return toObject;\n}\nfunction dynamicRetrievalConfigToMldev$3(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToMldev$3(fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToMldev$3(fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction urlContextToMldev$3() {\n    const toObject = {};\n    return toObject;\n}\nfunction toolToMldev$3(fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        let transformedList = fromFunctionDeclarations;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionDeclarationToMldev$3(item);\n            });\n        }\n        setValueByPath(toObject, ['functionDeclarations'], transformedList);\n    }\n    if (getValueByPath(fromObject, ['retrieval']) !== undefined) {\n        throw new Error('retrieval parameter is not supported in Gemini API.');\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToMldev$3(fromGoogleSearch));\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToMldev$3(fromGoogleSearchRetrieval));\n    }\n    if (getValueByPath(fromObject, ['enterpriseWebSearch']) !== undefined) {\n        throw new Error('enterpriseWebSearch parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['googleMaps']) !== undefined) {\n        throw new Error('googleMaps parameter is not supported in Gemini API.');\n    }\n    const fromUrlContext = getValueByPath(fromObject, ['urlContext']);\n    if (fromUrlContext != null) {\n        setValueByPath(toObject, ['urlContext'], urlContextToMldev$3());\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction functionCallingConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromAllowedFunctionNames = getValueByPath(fromObject, [\n        'allowedFunctionNames',\n    ]);\n    if (fromAllowedFunctionNames != null) {\n        setValueByPath(toObject, ['allowedFunctionNames'], fromAllowedFunctionNames);\n    }\n    return toObject;\n}\nfunction latLngToMldev$1(fromObject) {\n    const toObject = {};\n    const fromLatitude = getValueByPath(fromObject, ['latitude']);\n    if (fromLatitude != null) {\n        setValueByPath(toObject, ['latitude'], fromLatitude);\n    }\n    const fromLongitude = getValueByPath(fromObject, ['longitude']);\n    if (fromLongitude != null) {\n        setValueByPath(toObject, ['longitude'], fromLongitude);\n    }\n    return toObject;\n}\nfunction retrievalConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromLatLng = getValueByPath(fromObject, ['latLng']);\n    if (fromLatLng != null) {\n        setValueByPath(toObject, ['latLng'], latLngToMldev$1(fromLatLng));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction toolConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromFunctionCallingConfig = getValueByPath(fromObject, [\n        'functionCallingConfig',\n    ]);\n    if (fromFunctionCallingConfig != null) {\n        setValueByPath(toObject, ['functionCallingConfig'], functionCallingConfigToMldev$1(fromFunctionCallingConfig));\n    }\n    const fromRetrievalConfig = getValueByPath(fromObject, [\n        'retrievalConfig',\n    ]);\n    if (fromRetrievalConfig != null) {\n        setValueByPath(toObject, ['retrievalConfig'], retrievalConfigToMldev$1(fromRetrievalConfig));\n    }\n    return toObject;\n}\nfunction createCachedContentConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromTtl = getValueByPath(fromObject, ['ttl']);\n    if (parentObject !== undefined && fromTtl != null) {\n        setValueByPath(parentObject, ['ttl'], fromTtl);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (parentObject !== undefined && fromExpireTime != null) {\n        setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (parentObject !== undefined && fromDisplayName != null) {\n        setValueByPath(parentObject, ['displayName'], fromDisplayName);\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (parentObject !== undefined && fromContents != null) {\n        let transformedList = tContents(fromContents);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentToMldev$3(item);\n            });\n        }\n        setValueByPath(parentObject, ['contents'], transformedList);\n    }\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToMldev$3(tContent(fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        let transformedList = fromTools;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return toolToMldev$3(item);\n            });\n        }\n        setValueByPath(parentObject, ['tools'], transformedList);\n    }\n    const fromToolConfig = getValueByPath(fromObject, ['toolConfig']);\n    if (parentObject !== undefined && fromToolConfig != null) {\n        setValueByPath(parentObject, ['toolConfig'], toolConfigToMldev$1(fromToolConfig));\n    }\n    if (getValueByPath(fromObject, ['kmsKeyName']) !== undefined) {\n        throw new Error('kmsKeyName parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction createCachedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], tCachesModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], createCachedContentConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getCachedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction deleteCachedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction updateCachedContentConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromTtl = getValueByPath(fromObject, ['ttl']);\n    if (parentObject !== undefined && fromTtl != null) {\n        setValueByPath(parentObject, ['ttl'], fromTtl);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (parentObject !== undefined && fromExpireTime != null) {\n        setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n    }\n    return toObject;\n}\nfunction updateCachedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], updateCachedContentConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction listCachedContentsConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    return toObject;\n}\nfunction listCachedContentsParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listCachedContentsConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction videoMetadataToVertex$2(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobToVertex$2(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataToVertex$2(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partToVertex$2(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataToVertex$2(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobToVertex$2(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataToVertex$2(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToVertex$2(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partToVertex$2(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction functionDeclarationToVertex$2(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['behavior']) !== undefined) {\n        throw new Error('behavior parameter is not supported in Vertex AI.');\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    const fromParametersJsonSchema = getValueByPath(fromObject, [\n        'parametersJsonSchema',\n    ]);\n    if (fromParametersJsonSchema != null) {\n        setValueByPath(toObject, ['parametersJsonSchema'], fromParametersJsonSchema);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], fromResponse);\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    return toObject;\n}\nfunction intervalToVertex$2(fromObject) {\n    const toObject = {};\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    return toObject;\n}\nfunction googleSearchToVertex$2(fromObject) {\n    const toObject = {};\n    const fromTimeRangeFilter = getValueByPath(fromObject, [\n        'timeRangeFilter',\n    ]);\n    if (fromTimeRangeFilter != null) {\n        setValueByPath(toObject, ['timeRangeFilter'], intervalToVertex$2(fromTimeRangeFilter));\n    }\n    return toObject;\n}\nfunction dynamicRetrievalConfigToVertex$2(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToVertex$2(fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToVertex$2(fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction enterpriseWebSearchToVertex$2() {\n    const toObject = {};\n    return toObject;\n}\nfunction apiKeyConfigToVertex$2(fromObject) {\n    const toObject = {};\n    const fromApiKeyString = getValueByPath(fromObject, ['apiKeyString']);\n    if (fromApiKeyString != null) {\n        setValueByPath(toObject, ['apiKeyString'], fromApiKeyString);\n    }\n    return toObject;\n}\nfunction authConfigToVertex$2(fromObject) {\n    const toObject = {};\n    const fromApiKeyConfig = getValueByPath(fromObject, ['apiKeyConfig']);\n    if (fromApiKeyConfig != null) {\n        setValueByPath(toObject, ['apiKeyConfig'], apiKeyConfigToVertex$2(fromApiKeyConfig));\n    }\n    const fromAuthType = getValueByPath(fromObject, ['authType']);\n    if (fromAuthType != null) {\n        setValueByPath(toObject, ['authType'], fromAuthType);\n    }\n    const fromGoogleServiceAccountConfig = getValueByPath(fromObject, [\n        'googleServiceAccountConfig',\n    ]);\n    if (fromGoogleServiceAccountConfig != null) {\n        setValueByPath(toObject, ['googleServiceAccountConfig'], fromGoogleServiceAccountConfig);\n    }\n    const fromHttpBasicAuthConfig = getValueByPath(fromObject, [\n        'httpBasicAuthConfig',\n    ]);\n    if (fromHttpBasicAuthConfig != null) {\n        setValueByPath(toObject, ['httpBasicAuthConfig'], fromHttpBasicAuthConfig);\n    }\n    const fromOauthConfig = getValueByPath(fromObject, ['oauthConfig']);\n    if (fromOauthConfig != null) {\n        setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n    }\n    const fromOidcConfig = getValueByPath(fromObject, ['oidcConfig']);\n    if (fromOidcConfig != null) {\n        setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n    }\n    return toObject;\n}\nfunction googleMapsToVertex$2(fromObject) {\n    const toObject = {};\n    const fromAuthConfig = getValueByPath(fromObject, ['authConfig']);\n    if (fromAuthConfig != null) {\n        setValueByPath(toObject, ['authConfig'], authConfigToVertex$2(fromAuthConfig));\n    }\n    return toObject;\n}\nfunction urlContextToVertex$2() {\n    const toObject = {};\n    return toObject;\n}\nfunction toolToVertex$2(fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        let transformedList = fromFunctionDeclarations;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionDeclarationToVertex$2(item);\n            });\n        }\n        setValueByPath(toObject, ['functionDeclarations'], transformedList);\n    }\n    const fromRetrieval = getValueByPath(fromObject, ['retrieval']);\n    if (fromRetrieval != null) {\n        setValueByPath(toObject, ['retrieval'], fromRetrieval);\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToVertex$2(fromGoogleSearch));\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToVertex$2(fromGoogleSearchRetrieval));\n    }\n    const fromEnterpriseWebSearch = getValueByPath(fromObject, [\n        'enterpriseWebSearch',\n    ]);\n    if (fromEnterpriseWebSearch != null) {\n        setValueByPath(toObject, ['enterpriseWebSearch'], enterpriseWebSearchToVertex$2());\n    }\n    const fromGoogleMaps = getValueByPath(fromObject, ['googleMaps']);\n    if (fromGoogleMaps != null) {\n        setValueByPath(toObject, ['googleMaps'], googleMapsToVertex$2(fromGoogleMaps));\n    }\n    const fromUrlContext = getValueByPath(fromObject, ['urlContext']);\n    if (fromUrlContext != null) {\n        setValueByPath(toObject, ['urlContext'], urlContextToVertex$2());\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction functionCallingConfigToVertex$1(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromAllowedFunctionNames = getValueByPath(fromObject, [\n        'allowedFunctionNames',\n    ]);\n    if (fromAllowedFunctionNames != null) {\n        setValueByPath(toObject, ['allowedFunctionNames'], fromAllowedFunctionNames);\n    }\n    return toObject;\n}\nfunction latLngToVertex$1(fromObject) {\n    const toObject = {};\n    const fromLatitude = getValueByPath(fromObject, ['latitude']);\n    if (fromLatitude != null) {\n        setValueByPath(toObject, ['latitude'], fromLatitude);\n    }\n    const fromLongitude = getValueByPath(fromObject, ['longitude']);\n    if (fromLongitude != null) {\n        setValueByPath(toObject, ['longitude'], fromLongitude);\n    }\n    return toObject;\n}\nfunction retrievalConfigToVertex$1(fromObject) {\n    const toObject = {};\n    const fromLatLng = getValueByPath(fromObject, ['latLng']);\n    if (fromLatLng != null) {\n        setValueByPath(toObject, ['latLng'], latLngToVertex$1(fromLatLng));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction toolConfigToVertex$1(fromObject) {\n    const toObject = {};\n    const fromFunctionCallingConfig = getValueByPath(fromObject, [\n        'functionCallingConfig',\n    ]);\n    if (fromFunctionCallingConfig != null) {\n        setValueByPath(toObject, ['functionCallingConfig'], functionCallingConfigToVertex$1(fromFunctionCallingConfig));\n    }\n    const fromRetrievalConfig = getValueByPath(fromObject, [\n        'retrievalConfig',\n    ]);\n    if (fromRetrievalConfig != null) {\n        setValueByPath(toObject, ['retrievalConfig'], retrievalConfigToVertex$1(fromRetrievalConfig));\n    }\n    return toObject;\n}\nfunction createCachedContentConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromTtl = getValueByPath(fromObject, ['ttl']);\n    if (parentObject !== undefined && fromTtl != null) {\n        setValueByPath(parentObject, ['ttl'], fromTtl);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (parentObject !== undefined && fromExpireTime != null) {\n        setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (parentObject !== undefined && fromDisplayName != null) {\n        setValueByPath(parentObject, ['displayName'], fromDisplayName);\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (parentObject !== undefined && fromContents != null) {\n        let transformedList = tContents(fromContents);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentToVertex$2(item);\n            });\n        }\n        setValueByPath(parentObject, ['contents'], transformedList);\n    }\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToVertex$2(tContent(fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        let transformedList = fromTools;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return toolToVertex$2(item);\n            });\n        }\n        setValueByPath(parentObject, ['tools'], transformedList);\n    }\n    const fromToolConfig = getValueByPath(fromObject, ['toolConfig']);\n    if (parentObject !== undefined && fromToolConfig != null) {\n        setValueByPath(parentObject, ['toolConfig'], toolConfigToVertex$1(fromToolConfig));\n    }\n    const fromKmsKeyName = getValueByPath(fromObject, ['kmsKeyName']);\n    if (parentObject !== undefined && fromKmsKeyName != null) {\n        setValueByPath(parentObject, ['encryption_spec', 'kmsKeyName'], fromKmsKeyName);\n    }\n    return toObject;\n}\nfunction createCachedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], tCachesModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], createCachedContentConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getCachedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction deleteCachedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction updateCachedContentConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromTtl = getValueByPath(fromObject, ['ttl']);\n    if (parentObject !== undefined && fromTtl != null) {\n        setValueByPath(parentObject, ['ttl'], fromTtl);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (parentObject !== undefined && fromExpireTime != null) {\n        setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n    }\n    return toObject;\n}\nfunction updateCachedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], tCachedContentName(apiClient, fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], updateCachedContentConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction listCachedContentsConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    return toObject;\n}\nfunction listCachedContentsParametersToVertex(fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listCachedContentsConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction cachedContentFromMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], fromModel);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (fromExpireTime != null) {\n        setValueByPath(toObject, ['expireTime'], fromExpireTime);\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n    }\n    return toObject;\n}\nfunction deleteCachedContentResponseFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction listCachedContentsResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromCachedContents = getValueByPath(fromObject, [\n        'cachedContents',\n    ]);\n    if (fromCachedContents != null) {\n        let transformedList = fromCachedContents;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return cachedContentFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['cachedContents'], transformedList);\n    }\n    return toObject;\n}\nfunction cachedContentFromVertex(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], fromModel);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (fromExpireTime != null) {\n        setValueByPath(toObject, ['expireTime'], fromExpireTime);\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n    }\n    return toObject;\n}\nfunction deleteCachedContentResponseFromVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction listCachedContentsResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromCachedContents = getValueByPath(fromObject, [\n        'cachedContents',\n    ]);\n    if (fromCachedContents != null) {\n        let transformedList = fromCachedContents;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return cachedContentFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['cachedContents'], transformedList);\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Caches extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n        /**\n         * Lists cached content configurations.\n         *\n         * @param params - The parameters for the list request.\n         * @return The paginated results of the list of cached contents.\n         *\n         * @example\n         * ```ts\n         * const cachedContents = await ai.caches.list({config: {'pageSize': 2}});\n         * for await (const cachedContent of cachedContents) {\n         *   console.log(cachedContent);\n         * }\n         * ```\n         */\n        this.list = async (params = {}) => {\n            return new Pager(PagedItem.PAGED_ITEM_CACHED_CONTENTS, (x) => this.listInternal(x), await this.listInternal(params), params);\n        };\n    }\n    /**\n     * Creates a cached contents resource.\n     *\n     * @remarks\n     * Context caching is only supported for specific models. See [Gemini\n     * Developer API reference](https://ai.google.dev/gemini-api/docs/caching?lang=node/context-cac)\n     * and [Vertex AI reference](https://cloud.google.com/vertex-ai/generative-ai/docs/context-cache/context-cache-overview#supported_models)\n     * for more information.\n     *\n     * @param params - The parameters for the create request.\n     * @return The created cached content.\n     *\n     * @example\n     * ```ts\n     * const contents = ...; // Initialize the content to cache.\n     * const response = await ai.caches.create({\n     *   model: 'gemini-2.0-flash-001',\n     *   config: {\n     *    'contents': contents,\n     *    'displayName': 'test cache',\n     *    'systemInstruction': 'What is the sum of the two pdfs?',\n     *    'ttl': '86400s',\n     *  }\n     * });\n     * ```\n     */\n    async create(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = createCachedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('cachedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = createCachedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('cachedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Gets cached content configurations.\n     *\n     * @param params - The parameters for the get request.\n     * @return The cached content.\n     *\n     * @example\n     * ```ts\n     * await ai.caches.get({name: '...'}); // The server-generated resource name.\n     * ```\n     */\n    async get(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = getCachedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = getCachedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Deletes cached content.\n     *\n     * @param params - The parameters for the delete request.\n     * @return The empty response returned by the API.\n     *\n     * @example\n     * ```ts\n     * await ai.caches.delete({name: '...'}); // The server-generated resource name.\n     * ```\n     */\n    async delete(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = deleteCachedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'DELETE',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = deleteCachedContentResponseFromVertex();\n                const typedResp = new DeleteCachedContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = deleteCachedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'DELETE',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = deleteCachedContentResponseFromMldev();\n                const typedResp = new DeleteCachedContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Updates cached content configurations.\n     *\n     * @param params - The parameters for the update request.\n     * @return The updated cached content.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.caches.update({\n     *   name: '...',  // The server-generated resource name.\n     *   config: {'ttl': '7600s'}\n     * });\n     * ```\n     */\n    async update(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = updateCachedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'PATCH',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = updateCachedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'PATCH',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = cachedContentFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    async listInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = listCachedContentsParametersToVertex(params);\n            path = formatMap('cachedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listCachedContentsResponseFromVertex(apiResponse);\n                const typedResp = new ListCachedContentsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = listCachedContentsParametersToMldev(params);\n            path = formatMap('cachedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listCachedContentsResponseFromMldev(apiResponse);\n                const typedResp = new ListCachedContentsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Returns true if the response is valid, false otherwise.\n */\nfunction isValidResponse(response) {\n    var _a;\n    if (response.candidates == undefined || response.candidates.length === 0) {\n        return false;\n    }\n    const content = (_a = response.candidates[0]) === null || _a === void 0 ? void 0 : _a.content;\n    if (content === undefined) {\n        return false;\n    }\n    return isValidContent(content);\n}\nfunction isValidContent(content) {\n    if (content.parts === undefined || content.parts.length === 0) {\n        return false;\n    }\n    for (const part of content.parts) {\n        if (part === undefined || Object.keys(part).length === 0) {\n            return false;\n        }\n        if (!part.thought && part.text !== undefined && part.text === '') {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Validates the history contains the correct roles.\n *\n * @throws Error if the history does not start with a user turn.\n * @throws Error if the history contains an invalid role.\n */\nfunction validateHistory(history) {\n    // Empty history is valid.\n    if (history.length === 0) {\n        return;\n    }\n    for (const content of history) {\n        if (content.role !== 'user' && content.role !== 'model') {\n            throw new Error(`Role must be user or model, but got ${content.role}.`);\n        }\n    }\n}\n/**\n * Extracts the curated (valid) history from a comprehensive history.\n *\n * @remarks\n * The model may sometimes generate invalid or empty contents(e.g., due to safty\n * filters or recitation). Extracting valid turns from the history\n * ensures that subsequent requests could be accpeted by the model.\n */\nfunction extractCuratedHistory(comprehensiveHistory) {\n    if (comprehensiveHistory === undefined || comprehensiveHistory.length === 0) {\n        return [];\n    }\n    const curatedHistory = [];\n    const length = comprehensiveHistory.length;\n    let i = 0;\n    while (i < length) {\n        if (comprehensiveHistory[i].role === 'user') {\n            curatedHistory.push(comprehensiveHistory[i]);\n            i++;\n        }\n        else {\n            const modelOutput = [];\n            let isValid = true;\n            while (i < length && comprehensiveHistory[i].role === 'model') {\n                modelOutput.push(comprehensiveHistory[i]);\n                if (isValid && !isValidContent(comprehensiveHistory[i])) {\n                    isValid = false;\n                }\n                i++;\n            }\n            if (isValid) {\n                curatedHistory.push(...modelOutput);\n            }\n            else {\n                // Remove the last user input when model content is invalid.\n                curatedHistory.pop();\n            }\n        }\n    }\n    return curatedHistory;\n}\n/**\n * A utility class to create a chat session.\n */\nclass Chats {\n    constructor(modelsModule, apiClient) {\n        this.modelsModule = modelsModule;\n        this.apiClient = apiClient;\n    }\n    /**\n     * Creates a new chat session.\n     *\n     * @remarks\n     * The config in the params will be used for all requests within the chat\n     * session unless overridden by a per-request `config` in\n     * @see {@link types.SendMessageParameters#config}.\n     *\n     * @param params - Parameters for creating a chat session.\n     * @returns A new chat session.\n     *\n     * @example\n     * ```ts\n     * const chat = ai.chats.create({\n     *   model: 'gemini-2.0-flash'\n     *   config: {\n     *     temperature: 0.5,\n     *     maxOutputTokens: 1024,\n     *   }\n     * });\n     * ```\n     */\n    create(params) {\n        return new Chat(this.apiClient, this.modelsModule, params.model, params.config, \n        // Deep copy the history to avoid mutating the history outside of the\n        // chat session.\n        structuredClone(params.history));\n    }\n}\n/**\n * Chat session that enables sending messages to the model with previous\n * conversation context.\n *\n * @remarks\n * The session maintains all the turns between user and model.\n */\nclass Chat {\n    constructor(apiClient, modelsModule, model, config = {}, history = []) {\n        this.apiClient = apiClient;\n        this.modelsModule = modelsModule;\n        this.model = model;\n        this.config = config;\n        this.history = history;\n        // A promise to represent the current state of the message being sent to the\n        // model.\n        this.sendPromise = Promise.resolve();\n        validateHistory(history);\n    }\n    /**\n     * Sends a message to the model and returns the response.\n     *\n     * @remarks\n     * This method will wait for the previous message to be processed before\n     * sending the next message.\n     *\n     * @see {@link Chat#sendMessageStream} for streaming method.\n     * @param params - parameters for sending messages within a chat session.\n     * @returns The model's response.\n     *\n     * @example\n     * ```ts\n     * const chat = ai.chats.create({model: 'gemini-2.0-flash'});\n     * const response = await chat.sendMessage({\n     *   message: 'Why is the sky blue?'\n     * });\n     * console.log(response.text);\n     * ```\n     */\n    async sendMessage(params) {\n        var _a;\n        await this.sendPromise;\n        const inputContent = tContent(params.message);\n        const responsePromise = this.modelsModule.generateContent({\n            model: this.model,\n            contents: this.getHistory(true).concat(inputContent),\n            config: (_a = params.config) !== null && _a !== void 0 ? _a : this.config,\n        });\n        this.sendPromise = (async () => {\n            var _a, _b, _c;\n            const response = await responsePromise;\n            const outputContent = (_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content;\n            // Because the AFC input contains the entire curated chat history in\n            // addition to the new user input, we need to truncate the AFC history\n            // to deduplicate the existing chat history.\n            const fullAutomaticFunctionCallingHistory = response.automaticFunctionCallingHistory;\n            const index = this.getHistory(true).length;\n            let automaticFunctionCallingHistory = [];\n            if (fullAutomaticFunctionCallingHistory != null) {\n                automaticFunctionCallingHistory =\n                    (_c = fullAutomaticFunctionCallingHistory.slice(index)) !== null && _c !== void 0 ? _c : [];\n            }\n            const modelOutput = outputContent ? [outputContent] : [];\n            this.recordHistory(inputContent, modelOutput, automaticFunctionCallingHistory);\n            return;\n        })();\n        await this.sendPromise.catch(() => {\n            // Resets sendPromise to avoid subsequent calls failing\n            this.sendPromise = Promise.resolve();\n        });\n        return responsePromise;\n    }\n    /**\n     * Sends a message to the model and returns the response in chunks.\n     *\n     * @remarks\n     * This method will wait for the previous message to be processed before\n     * sending the next message.\n     *\n     * @see {@link Chat#sendMessage} for non-streaming method.\n     * @param params - parameters for sending the message.\n     * @return The model's response.\n     *\n     * @example\n     * ```ts\n     * const chat = ai.chats.create({model: 'gemini-2.0-flash'});\n     * const response = await chat.sendMessageStream({\n     *   message: 'Why is the sky blue?'\n     * });\n     * for await (const chunk of response) {\n     *   console.log(chunk.text);\n     * }\n     * ```\n     */\n    async sendMessageStream(params) {\n        var _a;\n        await this.sendPromise;\n        const inputContent = tContent(params.message);\n        const streamResponse = this.modelsModule.generateContentStream({\n            model: this.model,\n            contents: this.getHistory(true).concat(inputContent),\n            config: (_a = params.config) !== null && _a !== void 0 ? _a : this.config,\n        });\n        // Resolve the internal tracking of send completion promise - `sendPromise`\n        // for both success and failure response. The actual failure is still\n        // propagated by the `await streamResponse`.\n        this.sendPromise = streamResponse\n            .then(() => undefined)\n            .catch(() => undefined);\n        const response = await streamResponse;\n        const result = this.processStreamResponse(response, inputContent);\n        return result;\n    }\n    /**\n     * Returns the chat history.\n     *\n     * @remarks\n     * The history is a list of contents alternating between user and model.\n     *\n     * There are two types of history:\n     * - The `curated history` contains only the valid turns between user and\n     * model, which will be included in the subsequent requests sent to the model.\n     * - The `comprehensive history` contains all turns, including invalid or\n     *   empty model outputs, providing a complete record of the history.\n     *\n     * The history is updated after receiving the response from the model,\n     * for streaming response, it means receiving the last chunk of the response.\n     *\n     * The `comprehensive history` is returned by default. To get the `curated\n     * history`, set the `curated` parameter to `true`.\n     *\n     * @param curated - whether to return the curated history or the comprehensive\n     *     history.\n     * @return History contents alternating between user and model for the entire\n     *     chat session.\n     */\n    getHistory(curated = false) {\n        const history = curated\n            ? extractCuratedHistory(this.history)\n            : this.history;\n        // Deep copy the history to avoid mutating the history outside of the\n        // chat session.\n        return structuredClone(history);\n    }\n    processStreamResponse(streamResponse, inputContent) {\n        var _a, _b;\n        return __asyncGenerator(this, arguments, function* processStreamResponse_1() {\n            var _c, e_1, _d, _e;\n            const outputContent = [];\n            try {\n                for (var _f = true, streamResponse_1 = __asyncValues(streamResponse), streamResponse_1_1; streamResponse_1_1 = yield __await(streamResponse_1.next()), _c = streamResponse_1_1.done, !_c; _f = true) {\n                    _e = streamResponse_1_1.value;\n                    _f = false;\n                    const chunk = _e;\n                    if (isValidResponse(chunk)) {\n                        const content = (_b = (_a = chunk.candidates) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.content;\n                        if (content !== undefined) {\n                            outputContent.push(content);\n                        }\n                    }\n                    yield yield __await(chunk);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_f && !_c && (_d = streamResponse_1.return)) yield __await(_d.call(streamResponse_1));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.recordHistory(inputContent, outputContent);\n        });\n    }\n    recordHistory(userInput, modelOutput, automaticFunctionCallingHistory) {\n        let outputContents = [];\n        if (modelOutput.length > 0 &&\n            modelOutput.every((content) => content.role !== undefined)) {\n            outputContents = modelOutput;\n        }\n        else {\n            // Appends an empty content when model returns empty response, so that the\n            // history is always alternating between user and model.\n            outputContents.push({\n                role: 'model',\n                parts: [],\n            });\n        }\n        if (automaticFunctionCallingHistory &&\n            automaticFunctionCallingHistory.length > 0) {\n            this.history.push(...extractCuratedHistory(automaticFunctionCallingHistory));\n        }\n        else {\n            this.history.push(userInput);\n        }\n        this.history.push(...outputContents);\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * API errors raised by the GenAI API.\n */\nclass ApiError extends Error {\n    constructor(options) {\n        super(options.message);\n        this.name = 'ApiError';\n        this.status = options.status;\n        Object.setPrototypeOf(this, ApiError.prototype);\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\nfunction listFilesConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    return toObject;\n}\nfunction listFilesParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listFilesConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction fileStatusToMldev(fromObject) {\n    const toObject = {};\n    const fromDetails = getValueByPath(fromObject, ['details']);\n    if (fromDetails != null) {\n        setValueByPath(toObject, ['details'], fromDetails);\n    }\n    const fromMessage = getValueByPath(fromObject, ['message']);\n    if (fromMessage != null) {\n        setValueByPath(toObject, ['message'], fromMessage);\n    }\n    const fromCode = getValueByPath(fromObject, ['code']);\n    if (fromCode != null) {\n        setValueByPath(toObject, ['code'], fromCode);\n    }\n    return toObject;\n}\nfunction fileToMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    const fromSizeBytes = getValueByPath(fromObject, ['sizeBytes']);\n    if (fromSizeBytes != null) {\n        setValueByPath(toObject, ['sizeBytes'], fromSizeBytes);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromExpirationTime = getValueByPath(fromObject, [\n        'expirationTime',\n    ]);\n    if (fromExpirationTime != null) {\n        setValueByPath(toObject, ['expirationTime'], fromExpirationTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromSha256Hash = getValueByPath(fromObject, ['sha256Hash']);\n    if (fromSha256Hash != null) {\n        setValueByPath(toObject, ['sha256Hash'], fromSha256Hash);\n    }\n    const fromUri = getValueByPath(fromObject, ['uri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromDownloadUri = getValueByPath(fromObject, ['downloadUri']);\n    if (fromDownloadUri != null) {\n        setValueByPath(toObject, ['downloadUri'], fromDownloadUri);\n    }\n    const fromState = getValueByPath(fromObject, ['state']);\n    if (fromState != null) {\n        setValueByPath(toObject, ['state'], fromState);\n    }\n    const fromSource = getValueByPath(fromObject, ['source']);\n    if (fromSource != null) {\n        setValueByPath(toObject, ['source'], fromSource);\n    }\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fileStatusToMldev(fromError));\n    }\n    return toObject;\n}\nfunction createFileParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromFile = getValueByPath(fromObject, ['file']);\n    if (fromFile != null) {\n        setValueByPath(toObject, ['file'], fileToMldev(fromFile));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction getFileParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'file'], tFileName(fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction deleteFileParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'file'], tFileName(fromName));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction fileStatusFromMldev(fromObject) {\n    const toObject = {};\n    const fromDetails = getValueByPath(fromObject, ['details']);\n    if (fromDetails != null) {\n        setValueByPath(toObject, ['details'], fromDetails);\n    }\n    const fromMessage = getValueByPath(fromObject, ['message']);\n    if (fromMessage != null) {\n        setValueByPath(toObject, ['message'], fromMessage);\n    }\n    const fromCode = getValueByPath(fromObject, ['code']);\n    if (fromCode != null) {\n        setValueByPath(toObject, ['code'], fromCode);\n    }\n    return toObject;\n}\nfunction fileFromMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    const fromSizeBytes = getValueByPath(fromObject, ['sizeBytes']);\n    if (fromSizeBytes != null) {\n        setValueByPath(toObject, ['sizeBytes'], fromSizeBytes);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromExpirationTime = getValueByPath(fromObject, [\n        'expirationTime',\n    ]);\n    if (fromExpirationTime != null) {\n        setValueByPath(toObject, ['expirationTime'], fromExpirationTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromSha256Hash = getValueByPath(fromObject, ['sha256Hash']);\n    if (fromSha256Hash != null) {\n        setValueByPath(toObject, ['sha256Hash'], fromSha256Hash);\n    }\n    const fromUri = getValueByPath(fromObject, ['uri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromDownloadUri = getValueByPath(fromObject, ['downloadUri']);\n    if (fromDownloadUri != null) {\n        setValueByPath(toObject, ['downloadUri'], fromDownloadUri);\n    }\n    const fromState = getValueByPath(fromObject, ['state']);\n    if (fromState != null) {\n        setValueByPath(toObject, ['state'], fromState);\n    }\n    const fromSource = getValueByPath(fromObject, ['source']);\n    if (fromSource != null) {\n        setValueByPath(toObject, ['source'], fromSource);\n    }\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], fromVideoMetadata);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fileStatusFromMldev(fromError));\n    }\n    return toObject;\n}\nfunction listFilesResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromFiles = getValueByPath(fromObject, ['files']);\n    if (fromFiles != null) {\n        let transformedList = fromFiles;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return fileFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['files'], transformedList);\n    }\n    return toObject;\n}\nfunction createFileResponseFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction deleteFileResponseFromMldev() {\n    const toObject = {};\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Files extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n        /**\n         * Lists all current project files from the service.\n         *\n         * @param params - The parameters for the list request\n         * @return The paginated results of the list of files\n         *\n         * @example\n         * The following code prints the names of all files from the service, the\n         * size of each page is 10.\n         *\n         * ```ts\n         * const listResponse = await ai.files.list({config: {'pageSize': 10}});\n         * for await (const file of listResponse) {\n         *   console.log(file.name);\n         * }\n         * ```\n         */\n        this.list = async (params = {}) => {\n            return new Pager(PagedItem.PAGED_ITEM_FILES, (x) => this.listInternal(x), await this.listInternal(params), params);\n        };\n    }\n    /**\n     * Uploads a file asynchronously to the Gemini API.\n     * This method is not available in Vertex AI.\n     * Supported upload sources:\n     * - Node.js: File path (string) or Blob object.\n     * - Browser: Blob object (e.g., File).\n     *\n     * @remarks\n     * The `mimeType` can be specified in the `config` parameter. If omitted:\n     *  - For file path (string) inputs, the `mimeType` will be inferred from the\n     *     file extension.\n     *  - For Blob object inputs, the `mimeType` will be set to the Blob's `type`\n     *     property.\n     * Somex eamples for file extension to mimeType mapping:\n     * .txt -> text/plain\n     * .json -> application/json\n     * .jpg  -> image/jpeg\n     * .png -> image/png\n     * .mp3 -> audio/mpeg\n     * .mp4 -> video/mp4\n     *\n     * This section can contain multiple paragraphs and code examples.\n     *\n     * @param params - Optional parameters specified in the\n     *        `types.UploadFileParameters` interface.\n     *         @see {@link types.UploadFileParameters#config} for the optional\n     *         config in the parameters.\n     * @return A promise that resolves to a `types.File` object.\n     * @throws An error if called on a Vertex AI client.\n     * @throws An error if the `mimeType` is not provided and can not be inferred,\n     * the `mimeType` can be provided in the `params.config` parameter.\n     * @throws An error occurs if a suitable upload location cannot be established.\n     *\n     * @example\n     * The following code uploads a file to Gemini API.\n     *\n     * ```ts\n     * const file = await ai.files.upload({file: 'file.txt', config: {\n     *   mimeType: 'text/plain',\n     * }});\n     * console.log(file.name);\n     * ```\n     */\n    async upload(params) {\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('Vertex AI does not support uploading files. You can share files through a GCS bucket.');\n        }\n        return this.apiClient\n            .uploadFile(params.file, params.config)\n            .then((response) => {\n            const file = fileFromMldev(response);\n            return file;\n        });\n    }\n    /**\n     * Downloads a remotely stored file asynchronously to a location specified in\n     * the `params` object. This method only works on Node environment, to\n     * download files in the browser, use a browser compliant method like an <a>\n     * tag.\n     *\n     * @param params - The parameters for the download request.\n     *\n     * @example\n     * The following code downloads an example file named \"files/mehozpxf877d\" as\n     * \"file.txt\".\n     *\n     * ```ts\n     * await ai.files.download({file: file.name, downloadPath: 'file.txt'});\n     * ```\n     */\n    async download(params) {\n        await this.apiClient.downloadFile(params);\n    }\n    async listInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('This method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = listFilesParametersToMldev(params);\n            path = formatMap('files', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listFilesResponseFromMldev(apiResponse);\n                const typedResp = new ListFilesResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    async createInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('This method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = createFileParametersToMldev(params);\n            path = formatMap('upload/v1beta/files', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = createFileResponseFromMldev();\n                const typedResp = new CreateFileResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Retrieves the file information from the service.\n     *\n     * @param params - The parameters for the get request\n     * @return The Promise that resolves to the types.File object requested.\n     *\n     * @example\n     * ```ts\n     * const config: GetFileParameters = {\n     *   name: fileName,\n     * };\n     * file = await ai.files.get(config);\n     * console.log(file.name);\n     * ```\n     */\n    async get(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('This method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = getFileParametersToMldev(params);\n            path = formatMap('files/{file}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = fileFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Deletes a remotely stored file.\n     *\n     * @param params - The parameters for the delete request.\n     * @return The DeleteFileResponse, the response for the delete method.\n     *\n     * @example\n     * The following code deletes an example file named \"files/mehozpxf877d\".\n     *\n     * ```ts\n     * await ai.files.delete({name: file.name});\n     * ```\n     */\n    async delete(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('This method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = deleteFileParametersToMldev(params);\n            path = formatMap('files/{file}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'DELETE',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = deleteFileResponseFromMldev();\n                const typedResp = new DeleteFileResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction prebuiltVoiceConfigToMldev$2(fromObject) {\n    const toObject = {};\n    const fromVoiceName = getValueByPath(fromObject, ['voiceName']);\n    if (fromVoiceName != null) {\n        setValueByPath(toObject, ['voiceName'], fromVoiceName);\n    }\n    return toObject;\n}\nfunction prebuiltVoiceConfigToVertex$1(fromObject) {\n    const toObject = {};\n    const fromVoiceName = getValueByPath(fromObject, ['voiceName']);\n    if (fromVoiceName != null) {\n        setValueByPath(toObject, ['voiceName'], fromVoiceName);\n    }\n    return toObject;\n}\nfunction voiceConfigToMldev$2(fromObject) {\n    const toObject = {};\n    const fromPrebuiltVoiceConfig = getValueByPath(fromObject, [\n        'prebuiltVoiceConfig',\n    ]);\n    if (fromPrebuiltVoiceConfig != null) {\n        setValueByPath(toObject, ['prebuiltVoiceConfig'], prebuiltVoiceConfigToMldev$2(fromPrebuiltVoiceConfig));\n    }\n    return toObject;\n}\nfunction voiceConfigToVertex$1(fromObject) {\n    const toObject = {};\n    const fromPrebuiltVoiceConfig = getValueByPath(fromObject, [\n        'prebuiltVoiceConfig',\n    ]);\n    if (fromPrebuiltVoiceConfig != null) {\n        setValueByPath(toObject, ['prebuiltVoiceConfig'], prebuiltVoiceConfigToVertex$1(fromPrebuiltVoiceConfig));\n    }\n    return toObject;\n}\nfunction speakerVoiceConfigToMldev$2(fromObject) {\n    const toObject = {};\n    const fromSpeaker = getValueByPath(fromObject, ['speaker']);\n    if (fromSpeaker != null) {\n        setValueByPath(toObject, ['speaker'], fromSpeaker);\n    }\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToMldev$2(fromVoiceConfig));\n    }\n    return toObject;\n}\nfunction multiSpeakerVoiceConfigToMldev$2(fromObject) {\n    const toObject = {};\n    const fromSpeakerVoiceConfigs = getValueByPath(fromObject, [\n        'speakerVoiceConfigs',\n    ]);\n    if (fromSpeakerVoiceConfigs != null) {\n        let transformedList = fromSpeakerVoiceConfigs;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return speakerVoiceConfigToMldev$2(item);\n            });\n        }\n        setValueByPath(toObject, ['speakerVoiceConfigs'], transformedList);\n    }\n    return toObject;\n}\nfunction speechConfigToMldev$2(fromObject) {\n    const toObject = {};\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToMldev$2(fromVoiceConfig));\n    }\n    const fromMultiSpeakerVoiceConfig = getValueByPath(fromObject, [\n        'multiSpeakerVoiceConfig',\n    ]);\n    if (fromMultiSpeakerVoiceConfig != null) {\n        setValueByPath(toObject, ['multiSpeakerVoiceConfig'], multiSpeakerVoiceConfigToMldev$2(fromMultiSpeakerVoiceConfig));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction speechConfigToVertex$1(fromObject) {\n    const toObject = {};\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToVertex$1(fromVoiceConfig));\n    }\n    if (getValueByPath(fromObject, ['multiSpeakerVoiceConfig']) !== undefined) {\n        throw new Error('multiSpeakerVoiceConfig parameter is not supported in Vertex AI.');\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction videoMetadataToMldev$2(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction videoMetadataToVertex$1(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobToMldev$2(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction blobToVertex$1(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataToMldev$2(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataToVertex$1(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partToMldev$2(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataToMldev$2(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobToMldev$2(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataToMldev$2(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction partToVertex$1(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataToVertex$1(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobToVertex$1(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataToVertex$1(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToMldev$2(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partToMldev$2(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction contentToVertex$1(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partToVertex$1(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction functionDeclarationToMldev$2(fromObject) {\n    const toObject = {};\n    const fromBehavior = getValueByPath(fromObject, ['behavior']);\n    if (fromBehavior != null) {\n        setValueByPath(toObject, ['behavior'], fromBehavior);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    const fromParametersJsonSchema = getValueByPath(fromObject, [\n        'parametersJsonSchema',\n    ]);\n    if (fromParametersJsonSchema != null) {\n        setValueByPath(toObject, ['parametersJsonSchema'], fromParametersJsonSchema);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], fromResponse);\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    return toObject;\n}\nfunction functionDeclarationToVertex$1(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['behavior']) !== undefined) {\n        throw new Error('behavior parameter is not supported in Vertex AI.');\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    const fromParametersJsonSchema = getValueByPath(fromObject, [\n        'parametersJsonSchema',\n    ]);\n    if (fromParametersJsonSchema != null) {\n        setValueByPath(toObject, ['parametersJsonSchema'], fromParametersJsonSchema);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], fromResponse);\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    return toObject;\n}\nfunction intervalToMldev$2(fromObject) {\n    const toObject = {};\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    return toObject;\n}\nfunction intervalToVertex$1(fromObject) {\n    const toObject = {};\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    return toObject;\n}\nfunction googleSearchToMldev$2(fromObject) {\n    const toObject = {};\n    const fromTimeRangeFilter = getValueByPath(fromObject, [\n        'timeRangeFilter',\n    ]);\n    if (fromTimeRangeFilter != null) {\n        setValueByPath(toObject, ['timeRangeFilter'], intervalToMldev$2(fromTimeRangeFilter));\n    }\n    return toObject;\n}\nfunction googleSearchToVertex$1(fromObject) {\n    const toObject = {};\n    const fromTimeRangeFilter = getValueByPath(fromObject, [\n        'timeRangeFilter',\n    ]);\n    if (fromTimeRangeFilter != null) {\n        setValueByPath(toObject, ['timeRangeFilter'], intervalToVertex$1(fromTimeRangeFilter));\n    }\n    return toObject;\n}\nfunction dynamicRetrievalConfigToMldev$2(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction dynamicRetrievalConfigToVertex$1(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToMldev$2(fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToMldev$2(fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToVertex$1(fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToVertex$1(fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction enterpriseWebSearchToVertex$1() {\n    const toObject = {};\n    return toObject;\n}\nfunction apiKeyConfigToVertex$1(fromObject) {\n    const toObject = {};\n    const fromApiKeyString = getValueByPath(fromObject, ['apiKeyString']);\n    if (fromApiKeyString != null) {\n        setValueByPath(toObject, ['apiKeyString'], fromApiKeyString);\n    }\n    return toObject;\n}\nfunction authConfigToVertex$1(fromObject) {\n    const toObject = {};\n    const fromApiKeyConfig = getValueByPath(fromObject, ['apiKeyConfig']);\n    if (fromApiKeyConfig != null) {\n        setValueByPath(toObject, ['apiKeyConfig'], apiKeyConfigToVertex$1(fromApiKeyConfig));\n    }\n    const fromAuthType = getValueByPath(fromObject, ['authType']);\n    if (fromAuthType != null) {\n        setValueByPath(toObject, ['authType'], fromAuthType);\n    }\n    const fromGoogleServiceAccountConfig = getValueByPath(fromObject, [\n        'googleServiceAccountConfig',\n    ]);\n    if (fromGoogleServiceAccountConfig != null) {\n        setValueByPath(toObject, ['googleServiceAccountConfig'], fromGoogleServiceAccountConfig);\n    }\n    const fromHttpBasicAuthConfig = getValueByPath(fromObject, [\n        'httpBasicAuthConfig',\n    ]);\n    if (fromHttpBasicAuthConfig != null) {\n        setValueByPath(toObject, ['httpBasicAuthConfig'], fromHttpBasicAuthConfig);\n    }\n    const fromOauthConfig = getValueByPath(fromObject, ['oauthConfig']);\n    if (fromOauthConfig != null) {\n        setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n    }\n    const fromOidcConfig = getValueByPath(fromObject, ['oidcConfig']);\n    if (fromOidcConfig != null) {\n        setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n    }\n    return toObject;\n}\nfunction googleMapsToVertex$1(fromObject) {\n    const toObject = {};\n    const fromAuthConfig = getValueByPath(fromObject, ['authConfig']);\n    if (fromAuthConfig != null) {\n        setValueByPath(toObject, ['authConfig'], authConfigToVertex$1(fromAuthConfig));\n    }\n    return toObject;\n}\nfunction urlContextToMldev$2() {\n    const toObject = {};\n    return toObject;\n}\nfunction urlContextToVertex$1() {\n    const toObject = {};\n    return toObject;\n}\nfunction toolToMldev$2(fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        let transformedList = fromFunctionDeclarations;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionDeclarationToMldev$2(item);\n            });\n        }\n        setValueByPath(toObject, ['functionDeclarations'], transformedList);\n    }\n    if (getValueByPath(fromObject, ['retrieval']) !== undefined) {\n        throw new Error('retrieval parameter is not supported in Gemini API.');\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToMldev$2(fromGoogleSearch));\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToMldev$2(fromGoogleSearchRetrieval));\n    }\n    if (getValueByPath(fromObject, ['enterpriseWebSearch']) !== undefined) {\n        throw new Error('enterpriseWebSearch parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['googleMaps']) !== undefined) {\n        throw new Error('googleMaps parameter is not supported in Gemini API.');\n    }\n    const fromUrlContext = getValueByPath(fromObject, ['urlContext']);\n    if (fromUrlContext != null) {\n        setValueByPath(toObject, ['urlContext'], urlContextToMldev$2());\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction toolToVertex$1(fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        let transformedList = fromFunctionDeclarations;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionDeclarationToVertex$1(item);\n            });\n        }\n        setValueByPath(toObject, ['functionDeclarations'], transformedList);\n    }\n    const fromRetrieval = getValueByPath(fromObject, ['retrieval']);\n    if (fromRetrieval != null) {\n        setValueByPath(toObject, ['retrieval'], fromRetrieval);\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToVertex$1(fromGoogleSearch));\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToVertex$1(fromGoogleSearchRetrieval));\n    }\n    const fromEnterpriseWebSearch = getValueByPath(fromObject, [\n        'enterpriseWebSearch',\n    ]);\n    if (fromEnterpriseWebSearch != null) {\n        setValueByPath(toObject, ['enterpriseWebSearch'], enterpriseWebSearchToVertex$1());\n    }\n    const fromGoogleMaps = getValueByPath(fromObject, ['googleMaps']);\n    if (fromGoogleMaps != null) {\n        setValueByPath(toObject, ['googleMaps'], googleMapsToVertex$1(fromGoogleMaps));\n    }\n    const fromUrlContext = getValueByPath(fromObject, ['urlContext']);\n    if (fromUrlContext != null) {\n        setValueByPath(toObject, ['urlContext'], urlContextToVertex$1());\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction sessionResumptionConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromHandle = getValueByPath(fromObject, ['handle']);\n    if (fromHandle != null) {\n        setValueByPath(toObject, ['handle'], fromHandle);\n    }\n    if (getValueByPath(fromObject, ['transparent']) !== undefined) {\n        throw new Error('transparent parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction sessionResumptionConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromHandle = getValueByPath(fromObject, ['handle']);\n    if (fromHandle != null) {\n        setValueByPath(toObject, ['handle'], fromHandle);\n    }\n    const fromTransparent = getValueByPath(fromObject, ['transparent']);\n    if (fromTransparent != null) {\n        setValueByPath(toObject, ['transparent'], fromTransparent);\n    }\n    return toObject;\n}\nfunction audioTranscriptionConfigToMldev$1() {\n    const toObject = {};\n    return toObject;\n}\nfunction audioTranscriptionConfigToVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction automaticActivityDetectionToMldev$1(fromObject) {\n    const toObject = {};\n    const fromDisabled = getValueByPath(fromObject, ['disabled']);\n    if (fromDisabled != null) {\n        setValueByPath(toObject, ['disabled'], fromDisabled);\n    }\n    const fromStartOfSpeechSensitivity = getValueByPath(fromObject, [\n        'startOfSpeechSensitivity',\n    ]);\n    if (fromStartOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['startOfSpeechSensitivity'], fromStartOfSpeechSensitivity);\n    }\n    const fromEndOfSpeechSensitivity = getValueByPath(fromObject, [\n        'endOfSpeechSensitivity',\n    ]);\n    if (fromEndOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['endOfSpeechSensitivity'], fromEndOfSpeechSensitivity);\n    }\n    const fromPrefixPaddingMs = getValueByPath(fromObject, [\n        'prefixPaddingMs',\n    ]);\n    if (fromPrefixPaddingMs != null) {\n        setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n    }\n    const fromSilenceDurationMs = getValueByPath(fromObject, [\n        'silenceDurationMs',\n    ]);\n    if (fromSilenceDurationMs != null) {\n        setValueByPath(toObject, ['silenceDurationMs'], fromSilenceDurationMs);\n    }\n    return toObject;\n}\nfunction automaticActivityDetectionToVertex(fromObject) {\n    const toObject = {};\n    const fromDisabled = getValueByPath(fromObject, ['disabled']);\n    if (fromDisabled != null) {\n        setValueByPath(toObject, ['disabled'], fromDisabled);\n    }\n    const fromStartOfSpeechSensitivity = getValueByPath(fromObject, [\n        'startOfSpeechSensitivity',\n    ]);\n    if (fromStartOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['startOfSpeechSensitivity'], fromStartOfSpeechSensitivity);\n    }\n    const fromEndOfSpeechSensitivity = getValueByPath(fromObject, [\n        'endOfSpeechSensitivity',\n    ]);\n    if (fromEndOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['endOfSpeechSensitivity'], fromEndOfSpeechSensitivity);\n    }\n    const fromPrefixPaddingMs = getValueByPath(fromObject, [\n        'prefixPaddingMs',\n    ]);\n    if (fromPrefixPaddingMs != null) {\n        setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n    }\n    const fromSilenceDurationMs = getValueByPath(fromObject, [\n        'silenceDurationMs',\n    ]);\n    if (fromSilenceDurationMs != null) {\n        setValueByPath(toObject, ['silenceDurationMs'], fromSilenceDurationMs);\n    }\n    return toObject;\n}\nfunction realtimeInputConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromAutomaticActivityDetection = getValueByPath(fromObject, [\n        'automaticActivityDetection',\n    ]);\n    if (fromAutomaticActivityDetection != null) {\n        setValueByPath(toObject, ['automaticActivityDetection'], automaticActivityDetectionToMldev$1(fromAutomaticActivityDetection));\n    }\n    const fromActivityHandling = getValueByPath(fromObject, [\n        'activityHandling',\n    ]);\n    if (fromActivityHandling != null) {\n        setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n    }\n    const fromTurnCoverage = getValueByPath(fromObject, ['turnCoverage']);\n    if (fromTurnCoverage != null) {\n        setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n    }\n    return toObject;\n}\nfunction realtimeInputConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromAutomaticActivityDetection = getValueByPath(fromObject, [\n        'automaticActivityDetection',\n    ]);\n    if (fromAutomaticActivityDetection != null) {\n        setValueByPath(toObject, ['automaticActivityDetection'], automaticActivityDetectionToVertex(fromAutomaticActivityDetection));\n    }\n    const fromActivityHandling = getValueByPath(fromObject, [\n        'activityHandling',\n    ]);\n    if (fromActivityHandling != null) {\n        setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n    }\n    const fromTurnCoverage = getValueByPath(fromObject, ['turnCoverage']);\n    if (fromTurnCoverage != null) {\n        setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n    }\n    return toObject;\n}\nfunction slidingWindowToMldev$1(fromObject) {\n    const toObject = {};\n    const fromTargetTokens = getValueByPath(fromObject, ['targetTokens']);\n    if (fromTargetTokens != null) {\n        setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n    }\n    return toObject;\n}\nfunction slidingWindowToVertex(fromObject) {\n    const toObject = {};\n    const fromTargetTokens = getValueByPath(fromObject, ['targetTokens']);\n    if (fromTargetTokens != null) {\n        setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n    }\n    return toObject;\n}\nfunction contextWindowCompressionConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromTriggerTokens = getValueByPath(fromObject, [\n        'triggerTokens',\n    ]);\n    if (fromTriggerTokens != null) {\n        setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n    }\n    const fromSlidingWindow = getValueByPath(fromObject, [\n        'slidingWindow',\n    ]);\n    if (fromSlidingWindow != null) {\n        setValueByPath(toObject, ['slidingWindow'], slidingWindowToMldev$1(fromSlidingWindow));\n    }\n    return toObject;\n}\nfunction contextWindowCompressionConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromTriggerTokens = getValueByPath(fromObject, [\n        'triggerTokens',\n    ]);\n    if (fromTriggerTokens != null) {\n        setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n    }\n    const fromSlidingWindow = getValueByPath(fromObject, [\n        'slidingWindow',\n    ]);\n    if (fromSlidingWindow != null) {\n        setValueByPath(toObject, ['slidingWindow'], slidingWindowToVertex(fromSlidingWindow));\n    }\n    return toObject;\n}\nfunction proactivityConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromProactiveAudio = getValueByPath(fromObject, [\n        'proactiveAudio',\n    ]);\n    if (fromProactiveAudio != null) {\n        setValueByPath(toObject, ['proactiveAudio'], fromProactiveAudio);\n    }\n    return toObject;\n}\nfunction proactivityConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromProactiveAudio = getValueByPath(fromObject, [\n        'proactiveAudio',\n    ]);\n    if (fromProactiveAudio != null) {\n        setValueByPath(toObject, ['proactiveAudio'], fromProactiveAudio);\n    }\n    return toObject;\n}\nfunction liveConnectConfigToMldev$1(fromObject, parentObject) {\n    const toObject = {};\n    const fromGenerationConfig = getValueByPath(fromObject, [\n        'generationConfig',\n    ]);\n    if (parentObject !== undefined && fromGenerationConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig'], fromGenerationConfig);\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (parentObject !== undefined && fromResponseModalities != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'responseModalities'], fromResponseModalities);\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (parentObject !== undefined && fromTemperature != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (parentObject !== undefined && fromTopP != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (parentObject !== undefined && fromTopK != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topK'], fromTopK);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (parentObject !== undefined && fromMaxOutputTokens != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (parentObject !== undefined && fromMediaResolution != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'mediaResolution'], fromMediaResolution);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'seed'], fromSeed);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (parentObject !== undefined && fromSpeechConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'speechConfig'], speechConfigToMldev$2(tLiveSpeechConfig(fromSpeechConfig)));\n    }\n    const fromEnableAffectiveDialog = getValueByPath(fromObject, [\n        'enableAffectiveDialog',\n    ]);\n    if (parentObject !== undefined && fromEnableAffectiveDialog != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'enableAffectiveDialog'], fromEnableAffectiveDialog);\n    }\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['setup', 'systemInstruction'], contentToMldev$2(tContent(fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        let transformedList = tTools(fromTools);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return toolToMldev$2(tTool(item));\n            });\n        }\n        setValueByPath(parentObject, ['setup', 'tools'], transformedList);\n    }\n    const fromSessionResumption = getValueByPath(fromObject, [\n        'sessionResumption',\n    ]);\n    if (parentObject !== undefined && fromSessionResumption != null) {\n        setValueByPath(parentObject, ['setup', 'sessionResumption'], sessionResumptionConfigToMldev$1(fromSessionResumption));\n    }\n    const fromInputAudioTranscription = getValueByPath(fromObject, [\n        'inputAudioTranscription',\n    ]);\n    if (parentObject !== undefined && fromInputAudioTranscription != null) {\n        setValueByPath(parentObject, ['setup', 'inputAudioTranscription'], audioTranscriptionConfigToMldev$1());\n    }\n    const fromOutputAudioTranscription = getValueByPath(fromObject, [\n        'outputAudioTranscription',\n    ]);\n    if (parentObject !== undefined && fromOutputAudioTranscription != null) {\n        setValueByPath(parentObject, ['setup', 'outputAudioTranscription'], audioTranscriptionConfigToMldev$1());\n    }\n    const fromRealtimeInputConfig = getValueByPath(fromObject, [\n        'realtimeInputConfig',\n    ]);\n    if (parentObject !== undefined && fromRealtimeInputConfig != null) {\n        setValueByPath(parentObject, ['setup', 'realtimeInputConfig'], realtimeInputConfigToMldev$1(fromRealtimeInputConfig));\n    }\n    const fromContextWindowCompression = getValueByPath(fromObject, [\n        'contextWindowCompression',\n    ]);\n    if (parentObject !== undefined && fromContextWindowCompression != null) {\n        setValueByPath(parentObject, ['setup', 'contextWindowCompression'], contextWindowCompressionConfigToMldev$1(fromContextWindowCompression));\n    }\n    const fromProactivity = getValueByPath(fromObject, ['proactivity']);\n    if (parentObject !== undefined && fromProactivity != null) {\n        setValueByPath(parentObject, ['setup', 'proactivity'], proactivityConfigToMldev$1(fromProactivity));\n    }\n    return toObject;\n}\nfunction liveConnectConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromGenerationConfig = getValueByPath(fromObject, [\n        'generationConfig',\n    ]);\n    if (parentObject !== undefined && fromGenerationConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig'], fromGenerationConfig);\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (parentObject !== undefined && fromResponseModalities != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'responseModalities'], fromResponseModalities);\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (parentObject !== undefined && fromTemperature != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (parentObject !== undefined && fromTopP != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (parentObject !== undefined && fromTopK != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topK'], fromTopK);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (parentObject !== undefined && fromMaxOutputTokens != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (parentObject !== undefined && fromMediaResolution != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'mediaResolution'], fromMediaResolution);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'seed'], fromSeed);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (parentObject !== undefined && fromSpeechConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'speechConfig'], speechConfigToVertex$1(tLiveSpeechConfig(fromSpeechConfig)));\n    }\n    const fromEnableAffectiveDialog = getValueByPath(fromObject, [\n        'enableAffectiveDialog',\n    ]);\n    if (parentObject !== undefined && fromEnableAffectiveDialog != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'enableAffectiveDialog'], fromEnableAffectiveDialog);\n    }\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['setup', 'systemInstruction'], contentToVertex$1(tContent(fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        let transformedList = tTools(fromTools);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return toolToVertex$1(tTool(item));\n            });\n        }\n        setValueByPath(parentObject, ['setup', 'tools'], transformedList);\n    }\n    const fromSessionResumption = getValueByPath(fromObject, [\n        'sessionResumption',\n    ]);\n    if (parentObject !== undefined && fromSessionResumption != null) {\n        setValueByPath(parentObject, ['setup', 'sessionResumption'], sessionResumptionConfigToVertex(fromSessionResumption));\n    }\n    const fromInputAudioTranscription = getValueByPath(fromObject, [\n        'inputAudioTranscription',\n    ]);\n    if (parentObject !== undefined && fromInputAudioTranscription != null) {\n        setValueByPath(parentObject, ['setup', 'inputAudioTranscription'], audioTranscriptionConfigToVertex());\n    }\n    const fromOutputAudioTranscription = getValueByPath(fromObject, [\n        'outputAudioTranscription',\n    ]);\n    if (parentObject !== undefined && fromOutputAudioTranscription != null) {\n        setValueByPath(parentObject, ['setup', 'outputAudioTranscription'], audioTranscriptionConfigToVertex());\n    }\n    const fromRealtimeInputConfig = getValueByPath(fromObject, [\n        'realtimeInputConfig',\n    ]);\n    if (parentObject !== undefined && fromRealtimeInputConfig != null) {\n        setValueByPath(parentObject, ['setup', 'realtimeInputConfig'], realtimeInputConfigToVertex(fromRealtimeInputConfig));\n    }\n    const fromContextWindowCompression = getValueByPath(fromObject, [\n        'contextWindowCompression',\n    ]);\n    if (parentObject !== undefined && fromContextWindowCompression != null) {\n        setValueByPath(parentObject, ['setup', 'contextWindowCompression'], contextWindowCompressionConfigToVertex(fromContextWindowCompression));\n    }\n    const fromProactivity = getValueByPath(fromObject, ['proactivity']);\n    if (parentObject !== undefined && fromProactivity != null) {\n        setValueByPath(parentObject, ['setup', 'proactivity'], proactivityConfigToVertex(fromProactivity));\n    }\n    return toObject;\n}\nfunction liveConnectParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['setup', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], liveConnectConfigToMldev$1(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction liveConnectParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['setup', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], liveConnectConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction activityStartToMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction activityStartToVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction activityEndToMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction activityEndToVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction liveSendRealtimeInputParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromMedia = getValueByPath(fromObject, ['media']);\n    if (fromMedia != null) {\n        setValueByPath(toObject, ['mediaChunks'], tBlobs(fromMedia));\n    }\n    const fromAudio = getValueByPath(fromObject, ['audio']);\n    if (fromAudio != null) {\n        setValueByPath(toObject, ['audio'], tAudioBlob(fromAudio));\n    }\n    const fromAudioStreamEnd = getValueByPath(fromObject, [\n        'audioStreamEnd',\n    ]);\n    if (fromAudioStreamEnd != null) {\n        setValueByPath(toObject, ['audioStreamEnd'], fromAudioStreamEnd);\n    }\n    const fromVideo = getValueByPath(fromObject, ['video']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['video'], tImageBlob(fromVideo));\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    const fromActivityStart = getValueByPath(fromObject, [\n        'activityStart',\n    ]);\n    if (fromActivityStart != null) {\n        setValueByPath(toObject, ['activityStart'], activityStartToMldev());\n    }\n    const fromActivityEnd = getValueByPath(fromObject, ['activityEnd']);\n    if (fromActivityEnd != null) {\n        setValueByPath(toObject, ['activityEnd'], activityEndToMldev());\n    }\n    return toObject;\n}\nfunction liveSendRealtimeInputParametersToVertex(fromObject) {\n    const toObject = {};\n    const fromMedia = getValueByPath(fromObject, ['media']);\n    if (fromMedia != null) {\n        setValueByPath(toObject, ['mediaChunks'], tBlobs(fromMedia));\n    }\n    if (getValueByPath(fromObject, ['audio']) !== undefined) {\n        throw new Error('audio parameter is not supported in Vertex AI.');\n    }\n    const fromAudioStreamEnd = getValueByPath(fromObject, [\n        'audioStreamEnd',\n    ]);\n    if (fromAudioStreamEnd != null) {\n        setValueByPath(toObject, ['audioStreamEnd'], fromAudioStreamEnd);\n    }\n    if (getValueByPath(fromObject, ['video']) !== undefined) {\n        throw new Error('video parameter is not supported in Vertex AI.');\n    }\n    if (getValueByPath(fromObject, ['text']) !== undefined) {\n        throw new Error('text parameter is not supported in Vertex AI.');\n    }\n    const fromActivityStart = getValueByPath(fromObject, [\n        'activityStart',\n    ]);\n    if (fromActivityStart != null) {\n        setValueByPath(toObject, ['activityStart'], activityStartToVertex());\n    }\n    const fromActivityEnd = getValueByPath(fromObject, ['activityEnd']);\n    if (fromActivityEnd != null) {\n        setValueByPath(toObject, ['activityEnd'], activityEndToVertex());\n    }\n    return toObject;\n}\nfunction weightedPromptToMldev(fromObject) {\n    const toObject = {};\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    const fromWeight = getValueByPath(fromObject, ['weight']);\n    if (fromWeight != null) {\n        setValueByPath(toObject, ['weight'], fromWeight);\n    }\n    return toObject;\n}\nfunction liveMusicSetWeightedPromptsParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromWeightedPrompts = getValueByPath(fromObject, [\n        'weightedPrompts',\n    ]);\n    if (fromWeightedPrompts != null) {\n        let transformedList = fromWeightedPrompts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return weightedPromptToMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['weightedPrompts'], transformedList);\n    }\n    return toObject;\n}\nfunction liveMusicGenerationConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (fromTemperature != null) {\n        setValueByPath(toObject, ['temperature'], fromTemperature);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (fromTopK != null) {\n        setValueByPath(toObject, ['topK'], fromTopK);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (fromSeed != null) {\n        setValueByPath(toObject, ['seed'], fromSeed);\n    }\n    const fromGuidance = getValueByPath(fromObject, ['guidance']);\n    if (fromGuidance != null) {\n        setValueByPath(toObject, ['guidance'], fromGuidance);\n    }\n    const fromBpm = getValueByPath(fromObject, ['bpm']);\n    if (fromBpm != null) {\n        setValueByPath(toObject, ['bpm'], fromBpm);\n    }\n    const fromDensity = getValueByPath(fromObject, ['density']);\n    if (fromDensity != null) {\n        setValueByPath(toObject, ['density'], fromDensity);\n    }\n    const fromBrightness = getValueByPath(fromObject, ['brightness']);\n    if (fromBrightness != null) {\n        setValueByPath(toObject, ['brightness'], fromBrightness);\n    }\n    const fromScale = getValueByPath(fromObject, ['scale']);\n    if (fromScale != null) {\n        setValueByPath(toObject, ['scale'], fromScale);\n    }\n    const fromMuteBass = getValueByPath(fromObject, ['muteBass']);\n    if (fromMuteBass != null) {\n        setValueByPath(toObject, ['muteBass'], fromMuteBass);\n    }\n    const fromMuteDrums = getValueByPath(fromObject, ['muteDrums']);\n    if (fromMuteDrums != null) {\n        setValueByPath(toObject, ['muteDrums'], fromMuteDrums);\n    }\n    const fromOnlyBassAndDrums = getValueByPath(fromObject, [\n        'onlyBassAndDrums',\n    ]);\n    if (fromOnlyBassAndDrums != null) {\n        setValueByPath(toObject, ['onlyBassAndDrums'], fromOnlyBassAndDrums);\n    }\n    return toObject;\n}\nfunction liveMusicSetConfigParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromMusicGenerationConfig = getValueByPath(fromObject, [\n        'musicGenerationConfig',\n    ]);\n    if (fromMusicGenerationConfig != null) {\n        setValueByPath(toObject, ['musicGenerationConfig'], liveMusicGenerationConfigToMldev(fromMusicGenerationConfig));\n    }\n    return toObject;\n}\nfunction liveMusicClientSetupToMldev(fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], fromModel);\n    }\n    return toObject;\n}\nfunction liveMusicClientContentToMldev(fromObject) {\n    const toObject = {};\n    const fromWeightedPrompts = getValueByPath(fromObject, [\n        'weightedPrompts',\n    ]);\n    if (fromWeightedPrompts != null) {\n        let transformedList = fromWeightedPrompts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return weightedPromptToMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['weightedPrompts'], transformedList);\n    }\n    return toObject;\n}\nfunction liveMusicClientMessageToMldev(fromObject) {\n    const toObject = {};\n    const fromSetup = getValueByPath(fromObject, ['setup']);\n    if (fromSetup != null) {\n        setValueByPath(toObject, ['setup'], liveMusicClientSetupToMldev(fromSetup));\n    }\n    const fromClientContent = getValueByPath(fromObject, [\n        'clientContent',\n    ]);\n    if (fromClientContent != null) {\n        setValueByPath(toObject, ['clientContent'], liveMusicClientContentToMldev(fromClientContent));\n    }\n    const fromMusicGenerationConfig = getValueByPath(fromObject, [\n        'musicGenerationConfig',\n    ]);\n    if (fromMusicGenerationConfig != null) {\n        setValueByPath(toObject, ['musicGenerationConfig'], liveMusicGenerationConfigToMldev(fromMusicGenerationConfig));\n    }\n    const fromPlaybackControl = getValueByPath(fromObject, [\n        'playbackControl',\n    ]);\n    if (fromPlaybackControl != null) {\n        setValueByPath(toObject, ['playbackControl'], fromPlaybackControl);\n    }\n    return toObject;\n}\nfunction liveServerSetupCompleteFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction liveServerSetupCompleteFromVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction videoMetadataFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction videoMetadataFromVertex$1(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction blobFromVertex$1(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataFromVertex$1(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataFromMldev$1(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobFromMldev$1(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataFromMldev$1(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction partFromVertex$1(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataFromVertex$1(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobFromVertex$1(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataFromVertex$1(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partFromMldev$1(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction contentFromVertex$1(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partFromVertex$1(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction transcriptionFromMldev(fromObject) {\n    const toObject = {};\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    const fromFinished = getValueByPath(fromObject, ['finished']);\n    if (fromFinished != null) {\n        setValueByPath(toObject, ['finished'], fromFinished);\n    }\n    return toObject;\n}\nfunction transcriptionFromVertex(fromObject) {\n    const toObject = {};\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    const fromFinished = getValueByPath(fromObject, ['finished']);\n    if (fromFinished != null) {\n        setValueByPath(toObject, ['finished'], fromFinished);\n    }\n    return toObject;\n}\nfunction urlMetadataFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromRetrievedUrl = getValueByPath(fromObject, ['retrievedUrl']);\n    if (fromRetrievedUrl != null) {\n        setValueByPath(toObject, ['retrievedUrl'], fromRetrievedUrl);\n    }\n    const fromUrlRetrievalStatus = getValueByPath(fromObject, [\n        'urlRetrievalStatus',\n    ]);\n    if (fromUrlRetrievalStatus != null) {\n        setValueByPath(toObject, ['urlRetrievalStatus'], fromUrlRetrievalStatus);\n    }\n    return toObject;\n}\nfunction urlContextMetadataFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromUrlMetadata = getValueByPath(fromObject, ['urlMetadata']);\n    if (fromUrlMetadata != null) {\n        let transformedList = fromUrlMetadata;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return urlMetadataFromMldev$1(item);\n            });\n        }\n        setValueByPath(toObject, ['urlMetadata'], transformedList);\n    }\n    return toObject;\n}\nfunction liveServerContentFromMldev(fromObject) {\n    const toObject = {};\n    const fromModelTurn = getValueByPath(fromObject, ['modelTurn']);\n    if (fromModelTurn != null) {\n        setValueByPath(toObject, ['modelTurn'], contentFromMldev$1(fromModelTurn));\n    }\n    const fromTurnComplete = getValueByPath(fromObject, ['turnComplete']);\n    if (fromTurnComplete != null) {\n        setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n    }\n    const fromInterrupted = getValueByPath(fromObject, ['interrupted']);\n    if (fromInterrupted != null) {\n        setValueByPath(toObject, ['interrupted'], fromInterrupted);\n    }\n    const fromGroundingMetadata = getValueByPath(fromObject, [\n        'groundingMetadata',\n    ]);\n    if (fromGroundingMetadata != null) {\n        setValueByPath(toObject, ['groundingMetadata'], fromGroundingMetadata);\n    }\n    const fromGenerationComplete = getValueByPath(fromObject, [\n        'generationComplete',\n    ]);\n    if (fromGenerationComplete != null) {\n        setValueByPath(toObject, ['generationComplete'], fromGenerationComplete);\n    }\n    const fromInputTranscription = getValueByPath(fromObject, [\n        'inputTranscription',\n    ]);\n    if (fromInputTranscription != null) {\n        setValueByPath(toObject, ['inputTranscription'], transcriptionFromMldev(fromInputTranscription));\n    }\n    const fromOutputTranscription = getValueByPath(fromObject, [\n        'outputTranscription',\n    ]);\n    if (fromOutputTranscription != null) {\n        setValueByPath(toObject, ['outputTranscription'], transcriptionFromMldev(fromOutputTranscription));\n    }\n    const fromUrlContextMetadata = getValueByPath(fromObject, [\n        'urlContextMetadata',\n    ]);\n    if (fromUrlContextMetadata != null) {\n        setValueByPath(toObject, ['urlContextMetadata'], urlContextMetadataFromMldev$1(fromUrlContextMetadata));\n    }\n    return toObject;\n}\nfunction liveServerContentFromVertex(fromObject) {\n    const toObject = {};\n    const fromModelTurn = getValueByPath(fromObject, ['modelTurn']);\n    if (fromModelTurn != null) {\n        setValueByPath(toObject, ['modelTurn'], contentFromVertex$1(fromModelTurn));\n    }\n    const fromTurnComplete = getValueByPath(fromObject, ['turnComplete']);\n    if (fromTurnComplete != null) {\n        setValueByPath(toObject, ['turnComplete'], fromTurnComplete);\n    }\n    const fromInterrupted = getValueByPath(fromObject, ['interrupted']);\n    if (fromInterrupted != null) {\n        setValueByPath(toObject, ['interrupted'], fromInterrupted);\n    }\n    const fromGroundingMetadata = getValueByPath(fromObject, [\n        'groundingMetadata',\n    ]);\n    if (fromGroundingMetadata != null) {\n        setValueByPath(toObject, ['groundingMetadata'], fromGroundingMetadata);\n    }\n    const fromGenerationComplete = getValueByPath(fromObject, [\n        'generationComplete',\n    ]);\n    if (fromGenerationComplete != null) {\n        setValueByPath(toObject, ['generationComplete'], fromGenerationComplete);\n    }\n    const fromInputTranscription = getValueByPath(fromObject, [\n        'inputTranscription',\n    ]);\n    if (fromInputTranscription != null) {\n        setValueByPath(toObject, ['inputTranscription'], transcriptionFromVertex(fromInputTranscription));\n    }\n    const fromOutputTranscription = getValueByPath(fromObject, [\n        'outputTranscription',\n    ]);\n    if (fromOutputTranscription != null) {\n        setValueByPath(toObject, ['outputTranscription'], transcriptionFromVertex(fromOutputTranscription));\n    }\n    return toObject;\n}\nfunction functionCallFromMldev(fromObject) {\n    const toObject = {};\n    const fromId = getValueByPath(fromObject, ['id']);\n    if (fromId != null) {\n        setValueByPath(toObject, ['id'], fromId);\n    }\n    const fromArgs = getValueByPath(fromObject, ['args']);\n    if (fromArgs != null) {\n        setValueByPath(toObject, ['args'], fromArgs);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    return toObject;\n}\nfunction functionCallFromVertex(fromObject) {\n    const toObject = {};\n    const fromArgs = getValueByPath(fromObject, ['args']);\n    if (fromArgs != null) {\n        setValueByPath(toObject, ['args'], fromArgs);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    return toObject;\n}\nfunction liveServerToolCallFromMldev(fromObject) {\n    const toObject = {};\n    const fromFunctionCalls = getValueByPath(fromObject, [\n        'functionCalls',\n    ]);\n    if (fromFunctionCalls != null) {\n        let transformedList = fromFunctionCalls;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionCallFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['functionCalls'], transformedList);\n    }\n    return toObject;\n}\nfunction liveServerToolCallFromVertex(fromObject) {\n    const toObject = {};\n    const fromFunctionCalls = getValueByPath(fromObject, [\n        'functionCalls',\n    ]);\n    if (fromFunctionCalls != null) {\n        let transformedList = fromFunctionCalls;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionCallFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['functionCalls'], transformedList);\n    }\n    return toObject;\n}\nfunction liveServerToolCallCancellationFromMldev(fromObject) {\n    const toObject = {};\n    const fromIds = getValueByPath(fromObject, ['ids']);\n    if (fromIds != null) {\n        setValueByPath(toObject, ['ids'], fromIds);\n    }\n    return toObject;\n}\nfunction liveServerToolCallCancellationFromVertex(fromObject) {\n    const toObject = {};\n    const fromIds = getValueByPath(fromObject, ['ids']);\n    if (fromIds != null) {\n        setValueByPath(toObject, ['ids'], fromIds);\n    }\n    return toObject;\n}\nfunction modalityTokenCountFromMldev(fromObject) {\n    const toObject = {};\n    const fromModality = getValueByPath(fromObject, ['modality']);\n    if (fromModality != null) {\n        setValueByPath(toObject, ['modality'], fromModality);\n    }\n    const fromTokenCount = getValueByPath(fromObject, ['tokenCount']);\n    if (fromTokenCount != null) {\n        setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n    }\n    return toObject;\n}\nfunction modalityTokenCountFromVertex(fromObject) {\n    const toObject = {};\n    const fromModality = getValueByPath(fromObject, ['modality']);\n    if (fromModality != null) {\n        setValueByPath(toObject, ['modality'], fromModality);\n    }\n    const fromTokenCount = getValueByPath(fromObject, ['tokenCount']);\n    if (fromTokenCount != null) {\n        setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n    }\n    return toObject;\n}\nfunction usageMetadataFromMldev(fromObject) {\n    const toObject = {};\n    const fromPromptTokenCount = getValueByPath(fromObject, [\n        'promptTokenCount',\n    ]);\n    if (fromPromptTokenCount != null) {\n        setValueByPath(toObject, ['promptTokenCount'], fromPromptTokenCount);\n    }\n    const fromCachedContentTokenCount = getValueByPath(fromObject, [\n        'cachedContentTokenCount',\n    ]);\n    if (fromCachedContentTokenCount != null) {\n        setValueByPath(toObject, ['cachedContentTokenCount'], fromCachedContentTokenCount);\n    }\n    const fromResponseTokenCount = getValueByPath(fromObject, [\n        'responseTokenCount',\n    ]);\n    if (fromResponseTokenCount != null) {\n        setValueByPath(toObject, ['responseTokenCount'], fromResponseTokenCount);\n    }\n    const fromToolUsePromptTokenCount = getValueByPath(fromObject, [\n        'toolUsePromptTokenCount',\n    ]);\n    if (fromToolUsePromptTokenCount != null) {\n        setValueByPath(toObject, ['toolUsePromptTokenCount'], fromToolUsePromptTokenCount);\n    }\n    const fromThoughtsTokenCount = getValueByPath(fromObject, [\n        'thoughtsTokenCount',\n    ]);\n    if (fromThoughtsTokenCount != null) {\n        setValueByPath(toObject, ['thoughtsTokenCount'], fromThoughtsTokenCount);\n    }\n    const fromTotalTokenCount = getValueByPath(fromObject, [\n        'totalTokenCount',\n    ]);\n    if (fromTotalTokenCount != null) {\n        setValueByPath(toObject, ['totalTokenCount'], fromTotalTokenCount);\n    }\n    const fromPromptTokensDetails = getValueByPath(fromObject, [\n        'promptTokensDetails',\n    ]);\n    if (fromPromptTokensDetails != null) {\n        let transformedList = fromPromptTokensDetails;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modalityTokenCountFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['promptTokensDetails'], transformedList);\n    }\n    const fromCacheTokensDetails = getValueByPath(fromObject, [\n        'cacheTokensDetails',\n    ]);\n    if (fromCacheTokensDetails != null) {\n        let transformedList = fromCacheTokensDetails;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modalityTokenCountFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['cacheTokensDetails'], transformedList);\n    }\n    const fromResponseTokensDetails = getValueByPath(fromObject, [\n        'responseTokensDetails',\n    ]);\n    if (fromResponseTokensDetails != null) {\n        let transformedList = fromResponseTokensDetails;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modalityTokenCountFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['responseTokensDetails'], transformedList);\n    }\n    const fromToolUsePromptTokensDetails = getValueByPath(fromObject, [\n        'toolUsePromptTokensDetails',\n    ]);\n    if (fromToolUsePromptTokensDetails != null) {\n        let transformedList = fromToolUsePromptTokensDetails;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modalityTokenCountFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['toolUsePromptTokensDetails'], transformedList);\n    }\n    return toObject;\n}\nfunction usageMetadataFromVertex(fromObject) {\n    const toObject = {};\n    const fromPromptTokenCount = getValueByPath(fromObject, [\n        'promptTokenCount',\n    ]);\n    if (fromPromptTokenCount != null) {\n        setValueByPath(toObject, ['promptTokenCount'], fromPromptTokenCount);\n    }\n    const fromCachedContentTokenCount = getValueByPath(fromObject, [\n        'cachedContentTokenCount',\n    ]);\n    if (fromCachedContentTokenCount != null) {\n        setValueByPath(toObject, ['cachedContentTokenCount'], fromCachedContentTokenCount);\n    }\n    const fromResponseTokenCount = getValueByPath(fromObject, [\n        'candidatesTokenCount',\n    ]);\n    if (fromResponseTokenCount != null) {\n        setValueByPath(toObject, ['responseTokenCount'], fromResponseTokenCount);\n    }\n    const fromToolUsePromptTokenCount = getValueByPath(fromObject, [\n        'toolUsePromptTokenCount',\n    ]);\n    if (fromToolUsePromptTokenCount != null) {\n        setValueByPath(toObject, ['toolUsePromptTokenCount'], fromToolUsePromptTokenCount);\n    }\n    const fromThoughtsTokenCount = getValueByPath(fromObject, [\n        'thoughtsTokenCount',\n    ]);\n    if (fromThoughtsTokenCount != null) {\n        setValueByPath(toObject, ['thoughtsTokenCount'], fromThoughtsTokenCount);\n    }\n    const fromTotalTokenCount = getValueByPath(fromObject, [\n        'totalTokenCount',\n    ]);\n    if (fromTotalTokenCount != null) {\n        setValueByPath(toObject, ['totalTokenCount'], fromTotalTokenCount);\n    }\n    const fromPromptTokensDetails = getValueByPath(fromObject, [\n        'promptTokensDetails',\n    ]);\n    if (fromPromptTokensDetails != null) {\n        let transformedList = fromPromptTokensDetails;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modalityTokenCountFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['promptTokensDetails'], transformedList);\n    }\n    const fromCacheTokensDetails = getValueByPath(fromObject, [\n        'cacheTokensDetails',\n    ]);\n    if (fromCacheTokensDetails != null) {\n        let transformedList = fromCacheTokensDetails;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modalityTokenCountFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['cacheTokensDetails'], transformedList);\n    }\n    const fromResponseTokensDetails = getValueByPath(fromObject, [\n        'candidatesTokensDetails',\n    ]);\n    if (fromResponseTokensDetails != null) {\n        let transformedList = fromResponseTokensDetails;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modalityTokenCountFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['responseTokensDetails'], transformedList);\n    }\n    const fromToolUsePromptTokensDetails = getValueByPath(fromObject, [\n        'toolUsePromptTokensDetails',\n    ]);\n    if (fromToolUsePromptTokensDetails != null) {\n        let transformedList = fromToolUsePromptTokensDetails;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modalityTokenCountFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['toolUsePromptTokensDetails'], transformedList);\n    }\n    const fromTrafficType = getValueByPath(fromObject, ['trafficType']);\n    if (fromTrafficType != null) {\n        setValueByPath(toObject, ['trafficType'], fromTrafficType);\n    }\n    return toObject;\n}\nfunction liveServerGoAwayFromMldev(fromObject) {\n    const toObject = {};\n    const fromTimeLeft = getValueByPath(fromObject, ['timeLeft']);\n    if (fromTimeLeft != null) {\n        setValueByPath(toObject, ['timeLeft'], fromTimeLeft);\n    }\n    return toObject;\n}\nfunction liveServerGoAwayFromVertex(fromObject) {\n    const toObject = {};\n    const fromTimeLeft = getValueByPath(fromObject, ['timeLeft']);\n    if (fromTimeLeft != null) {\n        setValueByPath(toObject, ['timeLeft'], fromTimeLeft);\n    }\n    return toObject;\n}\nfunction liveServerSessionResumptionUpdateFromMldev(fromObject) {\n    const toObject = {};\n    const fromNewHandle = getValueByPath(fromObject, ['newHandle']);\n    if (fromNewHandle != null) {\n        setValueByPath(toObject, ['newHandle'], fromNewHandle);\n    }\n    const fromResumable = getValueByPath(fromObject, ['resumable']);\n    if (fromResumable != null) {\n        setValueByPath(toObject, ['resumable'], fromResumable);\n    }\n    const fromLastConsumedClientMessageIndex = getValueByPath(fromObject, [\n        'lastConsumedClientMessageIndex',\n    ]);\n    if (fromLastConsumedClientMessageIndex != null) {\n        setValueByPath(toObject, ['lastConsumedClientMessageIndex'], fromLastConsumedClientMessageIndex);\n    }\n    return toObject;\n}\nfunction liveServerSessionResumptionUpdateFromVertex(fromObject) {\n    const toObject = {};\n    const fromNewHandle = getValueByPath(fromObject, ['newHandle']);\n    if (fromNewHandle != null) {\n        setValueByPath(toObject, ['newHandle'], fromNewHandle);\n    }\n    const fromResumable = getValueByPath(fromObject, ['resumable']);\n    if (fromResumable != null) {\n        setValueByPath(toObject, ['resumable'], fromResumable);\n    }\n    const fromLastConsumedClientMessageIndex = getValueByPath(fromObject, [\n        'lastConsumedClientMessageIndex',\n    ]);\n    if (fromLastConsumedClientMessageIndex != null) {\n        setValueByPath(toObject, ['lastConsumedClientMessageIndex'], fromLastConsumedClientMessageIndex);\n    }\n    return toObject;\n}\nfunction liveServerMessageFromMldev(fromObject) {\n    const toObject = {};\n    const fromSetupComplete = getValueByPath(fromObject, [\n        'setupComplete',\n    ]);\n    if (fromSetupComplete != null) {\n        setValueByPath(toObject, ['setupComplete'], liveServerSetupCompleteFromMldev());\n    }\n    const fromServerContent = getValueByPath(fromObject, [\n        'serverContent',\n    ]);\n    if (fromServerContent != null) {\n        setValueByPath(toObject, ['serverContent'], liveServerContentFromMldev(fromServerContent));\n    }\n    const fromToolCall = getValueByPath(fromObject, ['toolCall']);\n    if (fromToolCall != null) {\n        setValueByPath(toObject, ['toolCall'], liveServerToolCallFromMldev(fromToolCall));\n    }\n    const fromToolCallCancellation = getValueByPath(fromObject, [\n        'toolCallCancellation',\n    ]);\n    if (fromToolCallCancellation != null) {\n        setValueByPath(toObject, ['toolCallCancellation'], liveServerToolCallCancellationFromMldev(fromToolCallCancellation));\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], usageMetadataFromMldev(fromUsageMetadata));\n    }\n    const fromGoAway = getValueByPath(fromObject, ['goAway']);\n    if (fromGoAway != null) {\n        setValueByPath(toObject, ['goAway'], liveServerGoAwayFromMldev(fromGoAway));\n    }\n    const fromSessionResumptionUpdate = getValueByPath(fromObject, [\n        'sessionResumptionUpdate',\n    ]);\n    if (fromSessionResumptionUpdate != null) {\n        setValueByPath(toObject, ['sessionResumptionUpdate'], liveServerSessionResumptionUpdateFromMldev(fromSessionResumptionUpdate));\n    }\n    return toObject;\n}\nfunction liveServerMessageFromVertex(fromObject) {\n    const toObject = {};\n    const fromSetupComplete = getValueByPath(fromObject, [\n        'setupComplete',\n    ]);\n    if (fromSetupComplete != null) {\n        setValueByPath(toObject, ['setupComplete'], liveServerSetupCompleteFromVertex());\n    }\n    const fromServerContent = getValueByPath(fromObject, [\n        'serverContent',\n    ]);\n    if (fromServerContent != null) {\n        setValueByPath(toObject, ['serverContent'], liveServerContentFromVertex(fromServerContent));\n    }\n    const fromToolCall = getValueByPath(fromObject, ['toolCall']);\n    if (fromToolCall != null) {\n        setValueByPath(toObject, ['toolCall'], liveServerToolCallFromVertex(fromToolCall));\n    }\n    const fromToolCallCancellation = getValueByPath(fromObject, [\n        'toolCallCancellation',\n    ]);\n    if (fromToolCallCancellation != null) {\n        setValueByPath(toObject, ['toolCallCancellation'], liveServerToolCallCancellationFromVertex(fromToolCallCancellation));\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], usageMetadataFromVertex(fromUsageMetadata));\n    }\n    const fromGoAway = getValueByPath(fromObject, ['goAway']);\n    if (fromGoAway != null) {\n        setValueByPath(toObject, ['goAway'], liveServerGoAwayFromVertex(fromGoAway));\n    }\n    const fromSessionResumptionUpdate = getValueByPath(fromObject, [\n        'sessionResumptionUpdate',\n    ]);\n    if (fromSessionResumptionUpdate != null) {\n        setValueByPath(toObject, ['sessionResumptionUpdate'], liveServerSessionResumptionUpdateFromVertex(fromSessionResumptionUpdate));\n    }\n    return toObject;\n}\nfunction liveMusicServerSetupCompleteFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction weightedPromptFromMldev(fromObject) {\n    const toObject = {};\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    const fromWeight = getValueByPath(fromObject, ['weight']);\n    if (fromWeight != null) {\n        setValueByPath(toObject, ['weight'], fromWeight);\n    }\n    return toObject;\n}\nfunction liveMusicClientContentFromMldev(fromObject) {\n    const toObject = {};\n    const fromWeightedPrompts = getValueByPath(fromObject, [\n        'weightedPrompts',\n    ]);\n    if (fromWeightedPrompts != null) {\n        let transformedList = fromWeightedPrompts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return weightedPromptFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['weightedPrompts'], transformedList);\n    }\n    return toObject;\n}\nfunction liveMusicGenerationConfigFromMldev(fromObject) {\n    const toObject = {};\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (fromTemperature != null) {\n        setValueByPath(toObject, ['temperature'], fromTemperature);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (fromTopK != null) {\n        setValueByPath(toObject, ['topK'], fromTopK);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (fromSeed != null) {\n        setValueByPath(toObject, ['seed'], fromSeed);\n    }\n    const fromGuidance = getValueByPath(fromObject, ['guidance']);\n    if (fromGuidance != null) {\n        setValueByPath(toObject, ['guidance'], fromGuidance);\n    }\n    const fromBpm = getValueByPath(fromObject, ['bpm']);\n    if (fromBpm != null) {\n        setValueByPath(toObject, ['bpm'], fromBpm);\n    }\n    const fromDensity = getValueByPath(fromObject, ['density']);\n    if (fromDensity != null) {\n        setValueByPath(toObject, ['density'], fromDensity);\n    }\n    const fromBrightness = getValueByPath(fromObject, ['brightness']);\n    if (fromBrightness != null) {\n        setValueByPath(toObject, ['brightness'], fromBrightness);\n    }\n    const fromScale = getValueByPath(fromObject, ['scale']);\n    if (fromScale != null) {\n        setValueByPath(toObject, ['scale'], fromScale);\n    }\n    const fromMuteBass = getValueByPath(fromObject, ['muteBass']);\n    if (fromMuteBass != null) {\n        setValueByPath(toObject, ['muteBass'], fromMuteBass);\n    }\n    const fromMuteDrums = getValueByPath(fromObject, ['muteDrums']);\n    if (fromMuteDrums != null) {\n        setValueByPath(toObject, ['muteDrums'], fromMuteDrums);\n    }\n    const fromOnlyBassAndDrums = getValueByPath(fromObject, [\n        'onlyBassAndDrums',\n    ]);\n    if (fromOnlyBassAndDrums != null) {\n        setValueByPath(toObject, ['onlyBassAndDrums'], fromOnlyBassAndDrums);\n    }\n    return toObject;\n}\nfunction liveMusicSourceMetadataFromMldev(fromObject) {\n    const toObject = {};\n    const fromClientContent = getValueByPath(fromObject, [\n        'clientContent',\n    ]);\n    if (fromClientContent != null) {\n        setValueByPath(toObject, ['clientContent'], liveMusicClientContentFromMldev(fromClientContent));\n    }\n    const fromMusicGenerationConfig = getValueByPath(fromObject, [\n        'musicGenerationConfig',\n    ]);\n    if (fromMusicGenerationConfig != null) {\n        setValueByPath(toObject, ['musicGenerationConfig'], liveMusicGenerationConfigFromMldev(fromMusicGenerationConfig));\n    }\n    return toObject;\n}\nfunction audioChunkFromMldev(fromObject) {\n    const toObject = {};\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    const fromSourceMetadata = getValueByPath(fromObject, [\n        'sourceMetadata',\n    ]);\n    if (fromSourceMetadata != null) {\n        setValueByPath(toObject, ['sourceMetadata'], liveMusicSourceMetadataFromMldev(fromSourceMetadata));\n    }\n    return toObject;\n}\nfunction liveMusicServerContentFromMldev(fromObject) {\n    const toObject = {};\n    const fromAudioChunks = getValueByPath(fromObject, ['audioChunks']);\n    if (fromAudioChunks != null) {\n        let transformedList = fromAudioChunks;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return audioChunkFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['audioChunks'], transformedList);\n    }\n    return toObject;\n}\nfunction liveMusicFilteredPromptFromMldev(fromObject) {\n    const toObject = {};\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    const fromFilteredReason = getValueByPath(fromObject, [\n        'filteredReason',\n    ]);\n    if (fromFilteredReason != null) {\n        setValueByPath(toObject, ['filteredReason'], fromFilteredReason);\n    }\n    return toObject;\n}\nfunction liveMusicServerMessageFromMldev(fromObject) {\n    const toObject = {};\n    const fromSetupComplete = getValueByPath(fromObject, [\n        'setupComplete',\n    ]);\n    if (fromSetupComplete != null) {\n        setValueByPath(toObject, ['setupComplete'], liveMusicServerSetupCompleteFromMldev());\n    }\n    const fromServerContent = getValueByPath(fromObject, [\n        'serverContent',\n    ]);\n    if (fromServerContent != null) {\n        setValueByPath(toObject, ['serverContent'], liveMusicServerContentFromMldev(fromServerContent));\n    }\n    const fromFilteredPrompt = getValueByPath(fromObject, [\n        'filteredPrompt',\n    ]);\n    if (fromFilteredPrompt != null) {\n        setValueByPath(toObject, ['filteredPrompt'], liveMusicFilteredPromptFromMldev(fromFilteredPrompt));\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction videoMetadataToMldev$1(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobToMldev$1(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataToMldev$1(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partToMldev$1(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataToMldev$1(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobToMldev$1(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataToMldev$1(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToMldev$1(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partToMldev$1(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction schemaToMldev(fromObject) {\n    const toObject = {};\n    const fromAnyOf = getValueByPath(fromObject, ['anyOf']);\n    if (fromAnyOf != null) {\n        setValueByPath(toObject, ['anyOf'], fromAnyOf);\n    }\n    const fromDefault = getValueByPath(fromObject, ['default']);\n    if (fromDefault != null) {\n        setValueByPath(toObject, ['default'], fromDefault);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromEnum = getValueByPath(fromObject, ['enum']);\n    if (fromEnum != null) {\n        setValueByPath(toObject, ['enum'], fromEnum);\n    }\n    const fromExample = getValueByPath(fromObject, ['example']);\n    if (fromExample != null) {\n        setValueByPath(toObject, ['example'], fromExample);\n    }\n    const fromFormat = getValueByPath(fromObject, ['format']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['format'], fromFormat);\n    }\n    const fromItems = getValueByPath(fromObject, ['items']);\n    if (fromItems != null) {\n        setValueByPath(toObject, ['items'], fromItems);\n    }\n    const fromMaxItems = getValueByPath(fromObject, ['maxItems']);\n    if (fromMaxItems != null) {\n        setValueByPath(toObject, ['maxItems'], fromMaxItems);\n    }\n    const fromMaxLength = getValueByPath(fromObject, ['maxLength']);\n    if (fromMaxLength != null) {\n        setValueByPath(toObject, ['maxLength'], fromMaxLength);\n    }\n    const fromMaxProperties = getValueByPath(fromObject, [\n        'maxProperties',\n    ]);\n    if (fromMaxProperties != null) {\n        setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n    }\n    const fromMaximum = getValueByPath(fromObject, ['maximum']);\n    if (fromMaximum != null) {\n        setValueByPath(toObject, ['maximum'], fromMaximum);\n    }\n    const fromMinItems = getValueByPath(fromObject, ['minItems']);\n    if (fromMinItems != null) {\n        setValueByPath(toObject, ['minItems'], fromMinItems);\n    }\n    const fromMinLength = getValueByPath(fromObject, ['minLength']);\n    if (fromMinLength != null) {\n        setValueByPath(toObject, ['minLength'], fromMinLength);\n    }\n    const fromMinProperties = getValueByPath(fromObject, [\n        'minProperties',\n    ]);\n    if (fromMinProperties != null) {\n        setValueByPath(toObject, ['minProperties'], fromMinProperties);\n    }\n    const fromMinimum = getValueByPath(fromObject, ['minimum']);\n    if (fromMinimum != null) {\n        setValueByPath(toObject, ['minimum'], fromMinimum);\n    }\n    const fromNullable = getValueByPath(fromObject, ['nullable']);\n    if (fromNullable != null) {\n        setValueByPath(toObject, ['nullable'], fromNullable);\n    }\n    const fromPattern = getValueByPath(fromObject, ['pattern']);\n    if (fromPattern != null) {\n        setValueByPath(toObject, ['pattern'], fromPattern);\n    }\n    const fromProperties = getValueByPath(fromObject, ['properties']);\n    if (fromProperties != null) {\n        setValueByPath(toObject, ['properties'], fromProperties);\n    }\n    const fromPropertyOrdering = getValueByPath(fromObject, [\n        'propertyOrdering',\n    ]);\n    if (fromPropertyOrdering != null) {\n        setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n    }\n    const fromRequired = getValueByPath(fromObject, ['required']);\n    if (fromRequired != null) {\n        setValueByPath(toObject, ['required'], fromRequired);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (fromTitle != null) {\n        setValueByPath(toObject, ['title'], fromTitle);\n    }\n    const fromType = getValueByPath(fromObject, ['type']);\n    if (fromType != null) {\n        setValueByPath(toObject, ['type'], fromType);\n    }\n    return toObject;\n}\nfunction safetySettingToMldev(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['method']) !== undefined) {\n        throw new Error('method parameter is not supported in Gemini API.');\n    }\n    const fromCategory = getValueByPath(fromObject, ['category']);\n    if (fromCategory != null) {\n        setValueByPath(toObject, ['category'], fromCategory);\n    }\n    const fromThreshold = getValueByPath(fromObject, ['threshold']);\n    if (fromThreshold != null) {\n        setValueByPath(toObject, ['threshold'], fromThreshold);\n    }\n    return toObject;\n}\nfunction functionDeclarationToMldev$1(fromObject) {\n    const toObject = {};\n    const fromBehavior = getValueByPath(fromObject, ['behavior']);\n    if (fromBehavior != null) {\n        setValueByPath(toObject, ['behavior'], fromBehavior);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    const fromParametersJsonSchema = getValueByPath(fromObject, [\n        'parametersJsonSchema',\n    ]);\n    if (fromParametersJsonSchema != null) {\n        setValueByPath(toObject, ['parametersJsonSchema'], fromParametersJsonSchema);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], fromResponse);\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    return toObject;\n}\nfunction intervalToMldev$1(fromObject) {\n    const toObject = {};\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    return toObject;\n}\nfunction googleSearchToMldev$1(fromObject) {\n    const toObject = {};\n    const fromTimeRangeFilter = getValueByPath(fromObject, [\n        'timeRangeFilter',\n    ]);\n    if (fromTimeRangeFilter != null) {\n        setValueByPath(toObject, ['timeRangeFilter'], intervalToMldev$1(fromTimeRangeFilter));\n    }\n    return toObject;\n}\nfunction dynamicRetrievalConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToMldev$1(fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToMldev$1(fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction urlContextToMldev$1() {\n    const toObject = {};\n    return toObject;\n}\nfunction toolToMldev$1(fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        let transformedList = fromFunctionDeclarations;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionDeclarationToMldev$1(item);\n            });\n        }\n        setValueByPath(toObject, ['functionDeclarations'], transformedList);\n    }\n    if (getValueByPath(fromObject, ['retrieval']) !== undefined) {\n        throw new Error('retrieval parameter is not supported in Gemini API.');\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToMldev$1(fromGoogleSearch));\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToMldev$1(fromGoogleSearchRetrieval));\n    }\n    if (getValueByPath(fromObject, ['enterpriseWebSearch']) !== undefined) {\n        throw new Error('enterpriseWebSearch parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['googleMaps']) !== undefined) {\n        throw new Error('googleMaps parameter is not supported in Gemini API.');\n    }\n    const fromUrlContext = getValueByPath(fromObject, ['urlContext']);\n    if (fromUrlContext != null) {\n        setValueByPath(toObject, ['urlContext'], urlContextToMldev$1());\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction functionCallingConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromAllowedFunctionNames = getValueByPath(fromObject, [\n        'allowedFunctionNames',\n    ]);\n    if (fromAllowedFunctionNames != null) {\n        setValueByPath(toObject, ['allowedFunctionNames'], fromAllowedFunctionNames);\n    }\n    return toObject;\n}\nfunction latLngToMldev(fromObject) {\n    const toObject = {};\n    const fromLatitude = getValueByPath(fromObject, ['latitude']);\n    if (fromLatitude != null) {\n        setValueByPath(toObject, ['latitude'], fromLatitude);\n    }\n    const fromLongitude = getValueByPath(fromObject, ['longitude']);\n    if (fromLongitude != null) {\n        setValueByPath(toObject, ['longitude'], fromLongitude);\n    }\n    return toObject;\n}\nfunction retrievalConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromLatLng = getValueByPath(fromObject, ['latLng']);\n    if (fromLatLng != null) {\n        setValueByPath(toObject, ['latLng'], latLngToMldev(fromLatLng));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction toolConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromFunctionCallingConfig = getValueByPath(fromObject, [\n        'functionCallingConfig',\n    ]);\n    if (fromFunctionCallingConfig != null) {\n        setValueByPath(toObject, ['functionCallingConfig'], functionCallingConfigToMldev(fromFunctionCallingConfig));\n    }\n    const fromRetrievalConfig = getValueByPath(fromObject, [\n        'retrievalConfig',\n    ]);\n    if (fromRetrievalConfig != null) {\n        setValueByPath(toObject, ['retrievalConfig'], retrievalConfigToMldev(fromRetrievalConfig));\n    }\n    return toObject;\n}\nfunction prebuiltVoiceConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromVoiceName = getValueByPath(fromObject, ['voiceName']);\n    if (fromVoiceName != null) {\n        setValueByPath(toObject, ['voiceName'], fromVoiceName);\n    }\n    return toObject;\n}\nfunction voiceConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromPrebuiltVoiceConfig = getValueByPath(fromObject, [\n        'prebuiltVoiceConfig',\n    ]);\n    if (fromPrebuiltVoiceConfig != null) {\n        setValueByPath(toObject, ['prebuiltVoiceConfig'], prebuiltVoiceConfigToMldev$1(fromPrebuiltVoiceConfig));\n    }\n    return toObject;\n}\nfunction speakerVoiceConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromSpeaker = getValueByPath(fromObject, ['speaker']);\n    if (fromSpeaker != null) {\n        setValueByPath(toObject, ['speaker'], fromSpeaker);\n    }\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToMldev$1(fromVoiceConfig));\n    }\n    return toObject;\n}\nfunction multiSpeakerVoiceConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromSpeakerVoiceConfigs = getValueByPath(fromObject, [\n        'speakerVoiceConfigs',\n    ]);\n    if (fromSpeakerVoiceConfigs != null) {\n        let transformedList = fromSpeakerVoiceConfigs;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return speakerVoiceConfigToMldev$1(item);\n            });\n        }\n        setValueByPath(toObject, ['speakerVoiceConfigs'], transformedList);\n    }\n    return toObject;\n}\nfunction speechConfigToMldev$1(fromObject) {\n    const toObject = {};\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToMldev$1(fromVoiceConfig));\n    }\n    const fromMultiSpeakerVoiceConfig = getValueByPath(fromObject, [\n        'multiSpeakerVoiceConfig',\n    ]);\n    if (fromMultiSpeakerVoiceConfig != null) {\n        setValueByPath(toObject, ['multiSpeakerVoiceConfig'], multiSpeakerVoiceConfigToMldev$1(fromMultiSpeakerVoiceConfig));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction thinkingConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromIncludeThoughts = getValueByPath(fromObject, [\n        'includeThoughts',\n    ]);\n    if (fromIncludeThoughts != null) {\n        setValueByPath(toObject, ['includeThoughts'], fromIncludeThoughts);\n    }\n    const fromThinkingBudget = getValueByPath(fromObject, [\n        'thinkingBudget',\n    ]);\n    if (fromThinkingBudget != null) {\n        setValueByPath(toObject, ['thinkingBudget'], fromThinkingBudget);\n    }\n    return toObject;\n}\nfunction generateContentConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToMldev$1(tContent(fromSystemInstruction)));\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (fromTemperature != null) {\n        setValueByPath(toObject, ['temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (fromTopP != null) {\n        setValueByPath(toObject, ['topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (fromTopK != null) {\n        setValueByPath(toObject, ['topK'], fromTopK);\n    }\n    const fromCandidateCount = getValueByPath(fromObject, [\n        'candidateCount',\n    ]);\n    if (fromCandidateCount != null) {\n        setValueByPath(toObject, ['candidateCount'], fromCandidateCount);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (fromMaxOutputTokens != null) {\n        setValueByPath(toObject, ['maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromStopSequences = getValueByPath(fromObject, [\n        'stopSequences',\n    ]);\n    if (fromStopSequences != null) {\n        setValueByPath(toObject, ['stopSequences'], fromStopSequences);\n    }\n    const fromResponseLogprobs = getValueByPath(fromObject, [\n        'responseLogprobs',\n    ]);\n    if (fromResponseLogprobs != null) {\n        setValueByPath(toObject, ['responseLogprobs'], fromResponseLogprobs);\n    }\n    const fromLogprobs = getValueByPath(fromObject, ['logprobs']);\n    if (fromLogprobs != null) {\n        setValueByPath(toObject, ['logprobs'], fromLogprobs);\n    }\n    const fromPresencePenalty = getValueByPath(fromObject, [\n        'presencePenalty',\n    ]);\n    if (fromPresencePenalty != null) {\n        setValueByPath(toObject, ['presencePenalty'], fromPresencePenalty);\n    }\n    const fromFrequencyPenalty = getValueByPath(fromObject, [\n        'frequencyPenalty',\n    ]);\n    if (fromFrequencyPenalty != null) {\n        setValueByPath(toObject, ['frequencyPenalty'], fromFrequencyPenalty);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (fromSeed != null) {\n        setValueByPath(toObject, ['seed'], fromSeed);\n    }\n    const fromResponseMimeType = getValueByPath(fromObject, [\n        'responseMimeType',\n    ]);\n    if (fromResponseMimeType != null) {\n        setValueByPath(toObject, ['responseMimeType'], fromResponseMimeType);\n    }\n    const fromResponseSchema = getValueByPath(fromObject, [\n        'responseSchema',\n    ]);\n    if (fromResponseSchema != null) {\n        setValueByPath(toObject, ['responseSchema'], schemaToMldev(tSchema(fromResponseSchema)));\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    if (getValueByPath(fromObject, ['routingConfig']) !== undefined) {\n        throw new Error('routingConfig parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['modelSelectionConfig']) !== undefined) {\n        throw new Error('modelSelectionConfig parameter is not supported in Gemini API.');\n    }\n    const fromSafetySettings = getValueByPath(fromObject, [\n        'safetySettings',\n    ]);\n    if (parentObject !== undefined && fromSafetySettings != null) {\n        let transformedList = fromSafetySettings;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return safetySettingToMldev(item);\n            });\n        }\n        setValueByPath(parentObject, ['safetySettings'], transformedList);\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        let transformedList = tTools(fromTools);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return toolToMldev$1(tTool(item));\n            });\n        }\n        setValueByPath(parentObject, ['tools'], transformedList);\n    }\n    const fromToolConfig = getValueByPath(fromObject, ['toolConfig']);\n    if (parentObject !== undefined && fromToolConfig != null) {\n        setValueByPath(parentObject, ['toolConfig'], toolConfigToMldev(fromToolConfig));\n    }\n    if (getValueByPath(fromObject, ['labels']) !== undefined) {\n        throw new Error('labels parameter is not supported in Gemini API.');\n    }\n    const fromCachedContent = getValueByPath(fromObject, [\n        'cachedContent',\n    ]);\n    if (parentObject !== undefined && fromCachedContent != null) {\n        setValueByPath(parentObject, ['cachedContent'], tCachedContentName(apiClient, fromCachedContent));\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (fromResponseModalities != null) {\n        setValueByPath(toObject, ['responseModalities'], fromResponseModalities);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (fromMediaResolution != null) {\n        setValueByPath(toObject, ['mediaResolution'], fromMediaResolution);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (fromSpeechConfig != null) {\n        setValueByPath(toObject, ['speechConfig'], speechConfigToMldev$1(tSpeechConfig(fromSpeechConfig)));\n    }\n    if (getValueByPath(fromObject, ['audioTimestamp']) !== undefined) {\n        throw new Error('audioTimestamp parameter is not supported in Gemini API.');\n    }\n    const fromThinkingConfig = getValueByPath(fromObject, [\n        'thinkingConfig',\n    ]);\n    if (fromThinkingConfig != null) {\n        setValueByPath(toObject, ['thinkingConfig'], thinkingConfigToMldev(fromThinkingConfig));\n    }\n    return toObject;\n}\nfunction generateContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        let transformedList = tContents(fromContents);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentToMldev$1(item);\n            });\n        }\n        setValueByPath(toObject, ['contents'], transformedList);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['generationConfig'], generateContentConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction embedContentConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromTaskType = getValueByPath(fromObject, ['taskType']);\n    if (parentObject !== undefined && fromTaskType != null) {\n        setValueByPath(parentObject, ['requests[]', 'taskType'], fromTaskType);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (parentObject !== undefined && fromTitle != null) {\n        setValueByPath(parentObject, ['requests[]', 'title'], fromTitle);\n    }\n    const fromOutputDimensionality = getValueByPath(fromObject, [\n        'outputDimensionality',\n    ]);\n    if (parentObject !== undefined && fromOutputDimensionality != null) {\n        setValueByPath(parentObject, ['requests[]', 'outputDimensionality'], fromOutputDimensionality);\n    }\n    if (getValueByPath(fromObject, ['mimeType']) !== undefined) {\n        throw new Error('mimeType parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['autoTruncate']) !== undefined) {\n        throw new Error('autoTruncate parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction embedContentParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        setValueByPath(toObject, ['requests[]', 'content'], tContentsForEmbed(apiClient, fromContents));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], embedContentConfigToMldev(fromConfig, toObject));\n    }\n    const fromModelForEmbedContent = getValueByPath(fromObject, ['model']);\n    if (fromModelForEmbedContent !== undefined) {\n        setValueByPath(toObject, ['requests[]', 'model'], tModel(apiClient, fromModelForEmbedContent));\n    }\n    return toObject;\n}\nfunction generateImagesConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['outputGcsUri']) !== undefined) {\n        throw new Error('outputGcsUri parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['negativePrompt']) !== undefined) {\n        throw new Error('negativePrompt parameter is not supported in Gemini API.');\n    }\n    const fromNumberOfImages = getValueByPath(fromObject, [\n        'numberOfImages',\n    ]);\n    if (parentObject !== undefined && fromNumberOfImages != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfImages);\n    }\n    const fromAspectRatio = getValueByPath(fromObject, ['aspectRatio']);\n    if (parentObject !== undefined && fromAspectRatio != null) {\n        setValueByPath(parentObject, ['parameters', 'aspectRatio'], fromAspectRatio);\n    }\n    const fromGuidanceScale = getValueByPath(fromObject, [\n        'guidanceScale',\n    ]);\n    if (parentObject !== undefined && fromGuidanceScale != null) {\n        setValueByPath(parentObject, ['parameters', 'guidanceScale'], fromGuidanceScale);\n    }\n    if (getValueByPath(fromObject, ['seed']) !== undefined) {\n        throw new Error('seed parameter is not supported in Gemini API.');\n    }\n    const fromSafetyFilterLevel = getValueByPath(fromObject, [\n        'safetyFilterLevel',\n    ]);\n    if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n        setValueByPath(parentObject, ['parameters', 'safetySetting'], fromSafetyFilterLevel);\n    }\n    const fromPersonGeneration = getValueByPath(fromObject, [\n        'personGeneration',\n    ]);\n    if (parentObject !== undefined && fromPersonGeneration != null) {\n        setValueByPath(parentObject, ['parameters', 'personGeneration'], fromPersonGeneration);\n    }\n    const fromIncludeSafetyAttributes = getValueByPath(fromObject, [\n        'includeSafetyAttributes',\n    ]);\n    if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n        setValueByPath(parentObject, ['parameters', 'includeSafetyAttributes'], fromIncludeSafetyAttributes);\n    }\n    const fromIncludeRaiReason = getValueByPath(fromObject, [\n        'includeRaiReason',\n    ]);\n    if (parentObject !== undefined && fromIncludeRaiReason != null) {\n        setValueByPath(parentObject, ['parameters', 'includeRaiReason'], fromIncludeRaiReason);\n    }\n    const fromLanguage = getValueByPath(fromObject, ['language']);\n    if (parentObject !== undefined && fromLanguage != null) {\n        setValueByPath(parentObject, ['parameters', 'language'], fromLanguage);\n    }\n    const fromOutputMimeType = getValueByPath(fromObject, [\n        'outputMimeType',\n    ]);\n    if (parentObject !== undefined && fromOutputMimeType != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'mimeType'], fromOutputMimeType);\n    }\n    const fromOutputCompressionQuality = getValueByPath(fromObject, [\n        'outputCompressionQuality',\n    ]);\n    if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'compressionQuality'], fromOutputCompressionQuality);\n    }\n    if (getValueByPath(fromObject, ['addWatermark']) !== undefined) {\n        throw new Error('addWatermark parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['enhancePrompt']) !== undefined) {\n        throw new Error('enhancePrompt parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction generateImagesParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromPrompt != null) {\n        setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], generateImagesConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getModelParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'name'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction listModelsConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    const fromFilter = getValueByPath(fromObject, ['filter']);\n    if (parentObject !== undefined && fromFilter != null) {\n        setValueByPath(parentObject, ['_query', 'filter'], fromFilter);\n    }\n    const fromQueryBase = getValueByPath(fromObject, ['queryBase']);\n    if (parentObject !== undefined && fromQueryBase != null) {\n        setValueByPath(parentObject, ['_url', 'models_url'], tModelsUrl(apiClient, fromQueryBase));\n    }\n    return toObject;\n}\nfunction listModelsParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listModelsConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction updateModelConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (parentObject !== undefined && fromDisplayName != null) {\n        setValueByPath(parentObject, ['displayName'], fromDisplayName);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (parentObject !== undefined && fromDescription != null) {\n        setValueByPath(parentObject, ['description'], fromDescription);\n    }\n    const fromDefaultCheckpointId = getValueByPath(fromObject, [\n        'defaultCheckpointId',\n    ]);\n    if (parentObject !== undefined && fromDefaultCheckpointId != null) {\n        setValueByPath(parentObject, ['defaultCheckpointId'], fromDefaultCheckpointId);\n    }\n    return toObject;\n}\nfunction updateModelParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'name'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], updateModelConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction deleteModelParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'name'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction countTokensConfigToMldev(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['systemInstruction']) !== undefined) {\n        throw new Error('systemInstruction parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['tools']) !== undefined) {\n        throw new Error('tools parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['generationConfig']) !== undefined) {\n        throw new Error('generationConfig parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction countTokensParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        let transformedList = tContents(fromContents);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentToMldev$1(item);\n            });\n        }\n        setValueByPath(toObject, ['contents'], transformedList);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], countTokensConfigToMldev(fromConfig));\n    }\n    return toObject;\n}\nfunction imageToMldev(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['gcsUri']) !== undefined) {\n        throw new Error('gcsUri parameter is not supported in Gemini API.');\n    }\n    const fromImageBytes = getValueByPath(fromObject, ['imageBytes']);\n    if (fromImageBytes != null) {\n        setValueByPath(toObject, ['bytesBase64Encoded'], tBytes(fromImageBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generateVideosConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromNumberOfVideos = getValueByPath(fromObject, [\n        'numberOfVideos',\n    ]);\n    if (parentObject !== undefined && fromNumberOfVideos != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfVideos);\n    }\n    if (getValueByPath(fromObject, ['outputGcsUri']) !== undefined) {\n        throw new Error('outputGcsUri parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['fps']) !== undefined) {\n        throw new Error('fps parameter is not supported in Gemini API.');\n    }\n    const fromDurationSeconds = getValueByPath(fromObject, [\n        'durationSeconds',\n    ]);\n    if (parentObject !== undefined && fromDurationSeconds != null) {\n        setValueByPath(parentObject, ['parameters', 'durationSeconds'], fromDurationSeconds);\n    }\n    if (getValueByPath(fromObject, ['seed']) !== undefined) {\n        throw new Error('seed parameter is not supported in Gemini API.');\n    }\n    const fromAspectRatio = getValueByPath(fromObject, ['aspectRatio']);\n    if (parentObject !== undefined && fromAspectRatio != null) {\n        setValueByPath(parentObject, ['parameters', 'aspectRatio'], fromAspectRatio);\n    }\n    if (getValueByPath(fromObject, ['resolution']) !== undefined) {\n        throw new Error('resolution parameter is not supported in Gemini API.');\n    }\n    const fromPersonGeneration = getValueByPath(fromObject, [\n        'personGeneration',\n    ]);\n    if (parentObject !== undefined && fromPersonGeneration != null) {\n        setValueByPath(parentObject, ['parameters', 'personGeneration'], fromPersonGeneration);\n    }\n    if (getValueByPath(fromObject, ['pubsubTopic']) !== undefined) {\n        throw new Error('pubsubTopic parameter is not supported in Gemini API.');\n    }\n    const fromNegativePrompt = getValueByPath(fromObject, [\n        'negativePrompt',\n    ]);\n    if (parentObject !== undefined && fromNegativePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'negativePrompt'], fromNegativePrompt);\n    }\n    const fromEnhancePrompt = getValueByPath(fromObject, [\n        'enhancePrompt',\n    ]);\n    if (parentObject !== undefined && fromEnhancePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'enhancePrompt'], fromEnhancePrompt);\n    }\n    if (getValueByPath(fromObject, ['generateAudio']) !== undefined) {\n        throw new Error('generateAudio parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['lastFrame']) !== undefined) {\n        throw new Error('lastFrame parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['compressionQuality']) !== undefined) {\n        throw new Error('compressionQuality parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction generateVideosParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromPrompt != null) {\n        setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n    }\n    const fromImage = getValueByPath(fromObject, ['image']);\n    if (fromImage != null) {\n        setValueByPath(toObject, ['instances[0]', 'image'], imageToMldev(fromImage));\n    }\n    if (getValueByPath(fromObject, ['video']) !== undefined) {\n        throw new Error('video parameter is not supported in Gemini API.');\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], generateVideosConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction videoMetadataToVertex(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobToVertex(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataToVertex(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partToVertex(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataToVertex(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobToVertex(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataToVertex(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToVertex(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partToVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction schemaToVertex(fromObject) {\n    const toObject = {};\n    const fromAnyOf = getValueByPath(fromObject, ['anyOf']);\n    if (fromAnyOf != null) {\n        setValueByPath(toObject, ['anyOf'], fromAnyOf);\n    }\n    const fromDefault = getValueByPath(fromObject, ['default']);\n    if (fromDefault != null) {\n        setValueByPath(toObject, ['default'], fromDefault);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromEnum = getValueByPath(fromObject, ['enum']);\n    if (fromEnum != null) {\n        setValueByPath(toObject, ['enum'], fromEnum);\n    }\n    const fromExample = getValueByPath(fromObject, ['example']);\n    if (fromExample != null) {\n        setValueByPath(toObject, ['example'], fromExample);\n    }\n    const fromFormat = getValueByPath(fromObject, ['format']);\n    if (fromFormat != null) {\n        setValueByPath(toObject, ['format'], fromFormat);\n    }\n    const fromItems = getValueByPath(fromObject, ['items']);\n    if (fromItems != null) {\n        setValueByPath(toObject, ['items'], fromItems);\n    }\n    const fromMaxItems = getValueByPath(fromObject, ['maxItems']);\n    if (fromMaxItems != null) {\n        setValueByPath(toObject, ['maxItems'], fromMaxItems);\n    }\n    const fromMaxLength = getValueByPath(fromObject, ['maxLength']);\n    if (fromMaxLength != null) {\n        setValueByPath(toObject, ['maxLength'], fromMaxLength);\n    }\n    const fromMaxProperties = getValueByPath(fromObject, [\n        'maxProperties',\n    ]);\n    if (fromMaxProperties != null) {\n        setValueByPath(toObject, ['maxProperties'], fromMaxProperties);\n    }\n    const fromMaximum = getValueByPath(fromObject, ['maximum']);\n    if (fromMaximum != null) {\n        setValueByPath(toObject, ['maximum'], fromMaximum);\n    }\n    const fromMinItems = getValueByPath(fromObject, ['minItems']);\n    if (fromMinItems != null) {\n        setValueByPath(toObject, ['minItems'], fromMinItems);\n    }\n    const fromMinLength = getValueByPath(fromObject, ['minLength']);\n    if (fromMinLength != null) {\n        setValueByPath(toObject, ['minLength'], fromMinLength);\n    }\n    const fromMinProperties = getValueByPath(fromObject, [\n        'minProperties',\n    ]);\n    if (fromMinProperties != null) {\n        setValueByPath(toObject, ['minProperties'], fromMinProperties);\n    }\n    const fromMinimum = getValueByPath(fromObject, ['minimum']);\n    if (fromMinimum != null) {\n        setValueByPath(toObject, ['minimum'], fromMinimum);\n    }\n    const fromNullable = getValueByPath(fromObject, ['nullable']);\n    if (fromNullable != null) {\n        setValueByPath(toObject, ['nullable'], fromNullable);\n    }\n    const fromPattern = getValueByPath(fromObject, ['pattern']);\n    if (fromPattern != null) {\n        setValueByPath(toObject, ['pattern'], fromPattern);\n    }\n    const fromProperties = getValueByPath(fromObject, ['properties']);\n    if (fromProperties != null) {\n        setValueByPath(toObject, ['properties'], fromProperties);\n    }\n    const fromPropertyOrdering = getValueByPath(fromObject, [\n        'propertyOrdering',\n    ]);\n    if (fromPropertyOrdering != null) {\n        setValueByPath(toObject, ['propertyOrdering'], fromPropertyOrdering);\n    }\n    const fromRequired = getValueByPath(fromObject, ['required']);\n    if (fromRequired != null) {\n        setValueByPath(toObject, ['required'], fromRequired);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (fromTitle != null) {\n        setValueByPath(toObject, ['title'], fromTitle);\n    }\n    const fromType = getValueByPath(fromObject, ['type']);\n    if (fromType != null) {\n        setValueByPath(toObject, ['type'], fromType);\n    }\n    return toObject;\n}\nfunction modelSelectionConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromFeatureSelectionPreference = getValueByPath(fromObject, [\n        'featureSelectionPreference',\n    ]);\n    if (fromFeatureSelectionPreference != null) {\n        setValueByPath(toObject, ['featureSelectionPreference'], fromFeatureSelectionPreference);\n    }\n    return toObject;\n}\nfunction safetySettingToVertex(fromObject) {\n    const toObject = {};\n    const fromMethod = getValueByPath(fromObject, ['method']);\n    if (fromMethod != null) {\n        setValueByPath(toObject, ['method'], fromMethod);\n    }\n    const fromCategory = getValueByPath(fromObject, ['category']);\n    if (fromCategory != null) {\n        setValueByPath(toObject, ['category'], fromCategory);\n    }\n    const fromThreshold = getValueByPath(fromObject, ['threshold']);\n    if (fromThreshold != null) {\n        setValueByPath(toObject, ['threshold'], fromThreshold);\n    }\n    return toObject;\n}\nfunction functionDeclarationToVertex(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['behavior']) !== undefined) {\n        throw new Error('behavior parameter is not supported in Vertex AI.');\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    const fromParametersJsonSchema = getValueByPath(fromObject, [\n        'parametersJsonSchema',\n    ]);\n    if (fromParametersJsonSchema != null) {\n        setValueByPath(toObject, ['parametersJsonSchema'], fromParametersJsonSchema);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], fromResponse);\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    return toObject;\n}\nfunction intervalToVertex(fromObject) {\n    const toObject = {};\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    return toObject;\n}\nfunction googleSearchToVertex(fromObject) {\n    const toObject = {};\n    const fromTimeRangeFilter = getValueByPath(fromObject, [\n        'timeRangeFilter',\n    ]);\n    if (fromTimeRangeFilter != null) {\n        setValueByPath(toObject, ['timeRangeFilter'], intervalToVertex(fromTimeRangeFilter));\n    }\n    return toObject;\n}\nfunction dynamicRetrievalConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToVertex(fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToVertex(fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction enterpriseWebSearchToVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction apiKeyConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromApiKeyString = getValueByPath(fromObject, ['apiKeyString']);\n    if (fromApiKeyString != null) {\n        setValueByPath(toObject, ['apiKeyString'], fromApiKeyString);\n    }\n    return toObject;\n}\nfunction authConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromApiKeyConfig = getValueByPath(fromObject, ['apiKeyConfig']);\n    if (fromApiKeyConfig != null) {\n        setValueByPath(toObject, ['apiKeyConfig'], apiKeyConfigToVertex(fromApiKeyConfig));\n    }\n    const fromAuthType = getValueByPath(fromObject, ['authType']);\n    if (fromAuthType != null) {\n        setValueByPath(toObject, ['authType'], fromAuthType);\n    }\n    const fromGoogleServiceAccountConfig = getValueByPath(fromObject, [\n        'googleServiceAccountConfig',\n    ]);\n    if (fromGoogleServiceAccountConfig != null) {\n        setValueByPath(toObject, ['googleServiceAccountConfig'], fromGoogleServiceAccountConfig);\n    }\n    const fromHttpBasicAuthConfig = getValueByPath(fromObject, [\n        'httpBasicAuthConfig',\n    ]);\n    if (fromHttpBasicAuthConfig != null) {\n        setValueByPath(toObject, ['httpBasicAuthConfig'], fromHttpBasicAuthConfig);\n    }\n    const fromOauthConfig = getValueByPath(fromObject, ['oauthConfig']);\n    if (fromOauthConfig != null) {\n        setValueByPath(toObject, ['oauthConfig'], fromOauthConfig);\n    }\n    const fromOidcConfig = getValueByPath(fromObject, ['oidcConfig']);\n    if (fromOidcConfig != null) {\n        setValueByPath(toObject, ['oidcConfig'], fromOidcConfig);\n    }\n    return toObject;\n}\nfunction googleMapsToVertex(fromObject) {\n    const toObject = {};\n    const fromAuthConfig = getValueByPath(fromObject, ['authConfig']);\n    if (fromAuthConfig != null) {\n        setValueByPath(toObject, ['authConfig'], authConfigToVertex(fromAuthConfig));\n    }\n    return toObject;\n}\nfunction urlContextToVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction toolToVertex(fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        let transformedList = fromFunctionDeclarations;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionDeclarationToVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['functionDeclarations'], transformedList);\n    }\n    const fromRetrieval = getValueByPath(fromObject, ['retrieval']);\n    if (fromRetrieval != null) {\n        setValueByPath(toObject, ['retrieval'], fromRetrieval);\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToVertex(fromGoogleSearch));\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToVertex(fromGoogleSearchRetrieval));\n    }\n    const fromEnterpriseWebSearch = getValueByPath(fromObject, [\n        'enterpriseWebSearch',\n    ]);\n    if (fromEnterpriseWebSearch != null) {\n        setValueByPath(toObject, ['enterpriseWebSearch'], enterpriseWebSearchToVertex());\n    }\n    const fromGoogleMaps = getValueByPath(fromObject, ['googleMaps']);\n    if (fromGoogleMaps != null) {\n        setValueByPath(toObject, ['googleMaps'], googleMapsToVertex(fromGoogleMaps));\n    }\n    const fromUrlContext = getValueByPath(fromObject, ['urlContext']);\n    if (fromUrlContext != null) {\n        setValueByPath(toObject, ['urlContext'], urlContextToVertex());\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction functionCallingConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromAllowedFunctionNames = getValueByPath(fromObject, [\n        'allowedFunctionNames',\n    ]);\n    if (fromAllowedFunctionNames != null) {\n        setValueByPath(toObject, ['allowedFunctionNames'], fromAllowedFunctionNames);\n    }\n    return toObject;\n}\nfunction latLngToVertex(fromObject) {\n    const toObject = {};\n    const fromLatitude = getValueByPath(fromObject, ['latitude']);\n    if (fromLatitude != null) {\n        setValueByPath(toObject, ['latitude'], fromLatitude);\n    }\n    const fromLongitude = getValueByPath(fromObject, ['longitude']);\n    if (fromLongitude != null) {\n        setValueByPath(toObject, ['longitude'], fromLongitude);\n    }\n    return toObject;\n}\nfunction retrievalConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromLatLng = getValueByPath(fromObject, ['latLng']);\n    if (fromLatLng != null) {\n        setValueByPath(toObject, ['latLng'], latLngToVertex(fromLatLng));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction toolConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromFunctionCallingConfig = getValueByPath(fromObject, [\n        'functionCallingConfig',\n    ]);\n    if (fromFunctionCallingConfig != null) {\n        setValueByPath(toObject, ['functionCallingConfig'], functionCallingConfigToVertex(fromFunctionCallingConfig));\n    }\n    const fromRetrievalConfig = getValueByPath(fromObject, [\n        'retrievalConfig',\n    ]);\n    if (fromRetrievalConfig != null) {\n        setValueByPath(toObject, ['retrievalConfig'], retrievalConfigToVertex(fromRetrievalConfig));\n    }\n    return toObject;\n}\nfunction prebuiltVoiceConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromVoiceName = getValueByPath(fromObject, ['voiceName']);\n    if (fromVoiceName != null) {\n        setValueByPath(toObject, ['voiceName'], fromVoiceName);\n    }\n    return toObject;\n}\nfunction voiceConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromPrebuiltVoiceConfig = getValueByPath(fromObject, [\n        'prebuiltVoiceConfig',\n    ]);\n    if (fromPrebuiltVoiceConfig != null) {\n        setValueByPath(toObject, ['prebuiltVoiceConfig'], prebuiltVoiceConfigToVertex(fromPrebuiltVoiceConfig));\n    }\n    return toObject;\n}\nfunction speechConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToVertex(fromVoiceConfig));\n    }\n    if (getValueByPath(fromObject, ['multiSpeakerVoiceConfig']) !== undefined) {\n        throw new Error('multiSpeakerVoiceConfig parameter is not supported in Vertex AI.');\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction thinkingConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromIncludeThoughts = getValueByPath(fromObject, [\n        'includeThoughts',\n    ]);\n    if (fromIncludeThoughts != null) {\n        setValueByPath(toObject, ['includeThoughts'], fromIncludeThoughts);\n    }\n    const fromThinkingBudget = getValueByPath(fromObject, [\n        'thinkingBudget',\n    ]);\n    if (fromThinkingBudget != null) {\n        setValueByPath(toObject, ['thinkingBudget'], fromThinkingBudget);\n    }\n    return toObject;\n}\nfunction generateContentConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToVertex(tContent(fromSystemInstruction)));\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (fromTemperature != null) {\n        setValueByPath(toObject, ['temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (fromTopP != null) {\n        setValueByPath(toObject, ['topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (fromTopK != null) {\n        setValueByPath(toObject, ['topK'], fromTopK);\n    }\n    const fromCandidateCount = getValueByPath(fromObject, [\n        'candidateCount',\n    ]);\n    if (fromCandidateCount != null) {\n        setValueByPath(toObject, ['candidateCount'], fromCandidateCount);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (fromMaxOutputTokens != null) {\n        setValueByPath(toObject, ['maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromStopSequences = getValueByPath(fromObject, [\n        'stopSequences',\n    ]);\n    if (fromStopSequences != null) {\n        setValueByPath(toObject, ['stopSequences'], fromStopSequences);\n    }\n    const fromResponseLogprobs = getValueByPath(fromObject, [\n        'responseLogprobs',\n    ]);\n    if (fromResponseLogprobs != null) {\n        setValueByPath(toObject, ['responseLogprobs'], fromResponseLogprobs);\n    }\n    const fromLogprobs = getValueByPath(fromObject, ['logprobs']);\n    if (fromLogprobs != null) {\n        setValueByPath(toObject, ['logprobs'], fromLogprobs);\n    }\n    const fromPresencePenalty = getValueByPath(fromObject, [\n        'presencePenalty',\n    ]);\n    if (fromPresencePenalty != null) {\n        setValueByPath(toObject, ['presencePenalty'], fromPresencePenalty);\n    }\n    const fromFrequencyPenalty = getValueByPath(fromObject, [\n        'frequencyPenalty',\n    ]);\n    if (fromFrequencyPenalty != null) {\n        setValueByPath(toObject, ['frequencyPenalty'], fromFrequencyPenalty);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (fromSeed != null) {\n        setValueByPath(toObject, ['seed'], fromSeed);\n    }\n    const fromResponseMimeType = getValueByPath(fromObject, [\n        'responseMimeType',\n    ]);\n    if (fromResponseMimeType != null) {\n        setValueByPath(toObject, ['responseMimeType'], fromResponseMimeType);\n    }\n    const fromResponseSchema = getValueByPath(fromObject, [\n        'responseSchema',\n    ]);\n    if (fromResponseSchema != null) {\n        setValueByPath(toObject, ['responseSchema'], schemaToVertex(tSchema(fromResponseSchema)));\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    const fromRoutingConfig = getValueByPath(fromObject, [\n        'routingConfig',\n    ]);\n    if (fromRoutingConfig != null) {\n        setValueByPath(toObject, ['routingConfig'], fromRoutingConfig);\n    }\n    const fromModelSelectionConfig = getValueByPath(fromObject, [\n        'modelSelectionConfig',\n    ]);\n    if (fromModelSelectionConfig != null) {\n        setValueByPath(toObject, ['modelConfig'], modelSelectionConfigToVertex(fromModelSelectionConfig));\n    }\n    const fromSafetySettings = getValueByPath(fromObject, [\n        'safetySettings',\n    ]);\n    if (parentObject !== undefined && fromSafetySettings != null) {\n        let transformedList = fromSafetySettings;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return safetySettingToVertex(item);\n            });\n        }\n        setValueByPath(parentObject, ['safetySettings'], transformedList);\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        let transformedList = tTools(fromTools);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return toolToVertex(tTool(item));\n            });\n        }\n        setValueByPath(parentObject, ['tools'], transformedList);\n    }\n    const fromToolConfig = getValueByPath(fromObject, ['toolConfig']);\n    if (parentObject !== undefined && fromToolConfig != null) {\n        setValueByPath(parentObject, ['toolConfig'], toolConfigToVertex(fromToolConfig));\n    }\n    const fromLabels = getValueByPath(fromObject, ['labels']);\n    if (parentObject !== undefined && fromLabels != null) {\n        setValueByPath(parentObject, ['labels'], fromLabels);\n    }\n    const fromCachedContent = getValueByPath(fromObject, [\n        'cachedContent',\n    ]);\n    if (parentObject !== undefined && fromCachedContent != null) {\n        setValueByPath(parentObject, ['cachedContent'], tCachedContentName(apiClient, fromCachedContent));\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (fromResponseModalities != null) {\n        setValueByPath(toObject, ['responseModalities'], fromResponseModalities);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (fromMediaResolution != null) {\n        setValueByPath(toObject, ['mediaResolution'], fromMediaResolution);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (fromSpeechConfig != null) {\n        setValueByPath(toObject, ['speechConfig'], speechConfigToVertex(tSpeechConfig(fromSpeechConfig)));\n    }\n    const fromAudioTimestamp = getValueByPath(fromObject, [\n        'audioTimestamp',\n    ]);\n    if (fromAudioTimestamp != null) {\n        setValueByPath(toObject, ['audioTimestamp'], fromAudioTimestamp);\n    }\n    const fromThinkingConfig = getValueByPath(fromObject, [\n        'thinkingConfig',\n    ]);\n    if (fromThinkingConfig != null) {\n        setValueByPath(toObject, ['thinkingConfig'], thinkingConfigToVertex(fromThinkingConfig));\n    }\n    return toObject;\n}\nfunction generateContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        let transformedList = tContents(fromContents);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentToVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['contents'], transformedList);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['generationConfig'], generateContentConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction embedContentConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromTaskType = getValueByPath(fromObject, ['taskType']);\n    if (parentObject !== undefined && fromTaskType != null) {\n        setValueByPath(parentObject, ['instances[]', 'task_type'], fromTaskType);\n    }\n    const fromTitle = getValueByPath(fromObject, ['title']);\n    if (parentObject !== undefined && fromTitle != null) {\n        setValueByPath(parentObject, ['instances[]', 'title'], fromTitle);\n    }\n    const fromOutputDimensionality = getValueByPath(fromObject, [\n        'outputDimensionality',\n    ]);\n    if (parentObject !== undefined && fromOutputDimensionality != null) {\n        setValueByPath(parentObject, ['parameters', 'outputDimensionality'], fromOutputDimensionality);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (parentObject !== undefined && fromMimeType != null) {\n        setValueByPath(parentObject, ['instances[]', 'mimeType'], fromMimeType);\n    }\n    const fromAutoTruncate = getValueByPath(fromObject, ['autoTruncate']);\n    if (parentObject !== undefined && fromAutoTruncate != null) {\n        setValueByPath(parentObject, ['parameters', 'autoTruncate'], fromAutoTruncate);\n    }\n    return toObject;\n}\nfunction embedContentParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        setValueByPath(toObject, ['instances[]', 'content'], tContentsForEmbed(apiClient, fromContents));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], embedContentConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction generateImagesConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromOutputGcsUri = getValueByPath(fromObject, ['outputGcsUri']);\n    if (parentObject !== undefined && fromOutputGcsUri != null) {\n        setValueByPath(parentObject, ['parameters', 'storageUri'], fromOutputGcsUri);\n    }\n    const fromNegativePrompt = getValueByPath(fromObject, [\n        'negativePrompt',\n    ]);\n    if (parentObject !== undefined && fromNegativePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'negativePrompt'], fromNegativePrompt);\n    }\n    const fromNumberOfImages = getValueByPath(fromObject, [\n        'numberOfImages',\n    ]);\n    if (parentObject !== undefined && fromNumberOfImages != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfImages);\n    }\n    const fromAspectRatio = getValueByPath(fromObject, ['aspectRatio']);\n    if (parentObject !== undefined && fromAspectRatio != null) {\n        setValueByPath(parentObject, ['parameters', 'aspectRatio'], fromAspectRatio);\n    }\n    const fromGuidanceScale = getValueByPath(fromObject, [\n        'guidanceScale',\n    ]);\n    if (parentObject !== undefined && fromGuidanceScale != null) {\n        setValueByPath(parentObject, ['parameters', 'guidanceScale'], fromGuidanceScale);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n    }\n    const fromSafetyFilterLevel = getValueByPath(fromObject, [\n        'safetyFilterLevel',\n    ]);\n    if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n        setValueByPath(parentObject, ['parameters', 'safetySetting'], fromSafetyFilterLevel);\n    }\n    const fromPersonGeneration = getValueByPath(fromObject, [\n        'personGeneration',\n    ]);\n    if (parentObject !== undefined && fromPersonGeneration != null) {\n        setValueByPath(parentObject, ['parameters', 'personGeneration'], fromPersonGeneration);\n    }\n    const fromIncludeSafetyAttributes = getValueByPath(fromObject, [\n        'includeSafetyAttributes',\n    ]);\n    if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n        setValueByPath(parentObject, ['parameters', 'includeSafetyAttributes'], fromIncludeSafetyAttributes);\n    }\n    const fromIncludeRaiReason = getValueByPath(fromObject, [\n        'includeRaiReason',\n    ]);\n    if (parentObject !== undefined && fromIncludeRaiReason != null) {\n        setValueByPath(parentObject, ['parameters', 'includeRaiReason'], fromIncludeRaiReason);\n    }\n    const fromLanguage = getValueByPath(fromObject, ['language']);\n    if (parentObject !== undefined && fromLanguage != null) {\n        setValueByPath(parentObject, ['parameters', 'language'], fromLanguage);\n    }\n    const fromOutputMimeType = getValueByPath(fromObject, [\n        'outputMimeType',\n    ]);\n    if (parentObject !== undefined && fromOutputMimeType != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'mimeType'], fromOutputMimeType);\n    }\n    const fromOutputCompressionQuality = getValueByPath(fromObject, [\n        'outputCompressionQuality',\n    ]);\n    if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'compressionQuality'], fromOutputCompressionQuality);\n    }\n    const fromAddWatermark = getValueByPath(fromObject, ['addWatermark']);\n    if (parentObject !== undefined && fromAddWatermark != null) {\n        setValueByPath(parentObject, ['parameters', 'addWatermark'], fromAddWatermark);\n    }\n    const fromEnhancePrompt = getValueByPath(fromObject, [\n        'enhancePrompt',\n    ]);\n    if (parentObject !== undefined && fromEnhancePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'enhancePrompt'], fromEnhancePrompt);\n    }\n    return toObject;\n}\nfunction generateImagesParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromPrompt != null) {\n        setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], generateImagesConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction imageToVertex(fromObject) {\n    const toObject = {};\n    const fromGcsUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromGcsUri != null) {\n        setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n    }\n    const fromImageBytes = getValueByPath(fromObject, ['imageBytes']);\n    if (fromImageBytes != null) {\n        setValueByPath(toObject, ['bytesBase64Encoded'], tBytes(fromImageBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction maskReferenceConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromMaskMode = getValueByPath(fromObject, ['maskMode']);\n    if (fromMaskMode != null) {\n        setValueByPath(toObject, ['maskMode'], fromMaskMode);\n    }\n    const fromSegmentationClasses = getValueByPath(fromObject, [\n        'segmentationClasses',\n    ]);\n    if (fromSegmentationClasses != null) {\n        setValueByPath(toObject, ['maskClasses'], fromSegmentationClasses);\n    }\n    const fromMaskDilation = getValueByPath(fromObject, ['maskDilation']);\n    if (fromMaskDilation != null) {\n        setValueByPath(toObject, ['dilation'], fromMaskDilation);\n    }\n    return toObject;\n}\nfunction controlReferenceConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromControlType = getValueByPath(fromObject, ['controlType']);\n    if (fromControlType != null) {\n        setValueByPath(toObject, ['controlType'], fromControlType);\n    }\n    const fromEnableControlImageComputation = getValueByPath(fromObject, [\n        'enableControlImageComputation',\n    ]);\n    if (fromEnableControlImageComputation != null) {\n        setValueByPath(toObject, ['computeControl'], fromEnableControlImageComputation);\n    }\n    return toObject;\n}\nfunction styleReferenceConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromStyleDescription = getValueByPath(fromObject, [\n        'styleDescription',\n    ]);\n    if (fromStyleDescription != null) {\n        setValueByPath(toObject, ['styleDescription'], fromStyleDescription);\n    }\n    return toObject;\n}\nfunction subjectReferenceConfigToVertex(fromObject) {\n    const toObject = {};\n    const fromSubjectType = getValueByPath(fromObject, ['subjectType']);\n    if (fromSubjectType != null) {\n        setValueByPath(toObject, ['subjectType'], fromSubjectType);\n    }\n    const fromSubjectDescription = getValueByPath(fromObject, [\n        'subjectDescription',\n    ]);\n    if (fromSubjectDescription != null) {\n        setValueByPath(toObject, ['subjectDescription'], fromSubjectDescription);\n    }\n    return toObject;\n}\nfunction referenceImageAPIInternalToVertex(fromObject) {\n    const toObject = {};\n    const fromReferenceImage = getValueByPath(fromObject, [\n        'referenceImage',\n    ]);\n    if (fromReferenceImage != null) {\n        setValueByPath(toObject, ['referenceImage'], imageToVertex(fromReferenceImage));\n    }\n    const fromReferenceId = getValueByPath(fromObject, ['referenceId']);\n    if (fromReferenceId != null) {\n        setValueByPath(toObject, ['referenceId'], fromReferenceId);\n    }\n    const fromReferenceType = getValueByPath(fromObject, [\n        'referenceType',\n    ]);\n    if (fromReferenceType != null) {\n        setValueByPath(toObject, ['referenceType'], fromReferenceType);\n    }\n    const fromMaskImageConfig = getValueByPath(fromObject, [\n        'maskImageConfig',\n    ]);\n    if (fromMaskImageConfig != null) {\n        setValueByPath(toObject, ['maskImageConfig'], maskReferenceConfigToVertex(fromMaskImageConfig));\n    }\n    const fromControlImageConfig = getValueByPath(fromObject, [\n        'controlImageConfig',\n    ]);\n    if (fromControlImageConfig != null) {\n        setValueByPath(toObject, ['controlImageConfig'], controlReferenceConfigToVertex(fromControlImageConfig));\n    }\n    const fromStyleImageConfig = getValueByPath(fromObject, [\n        'styleImageConfig',\n    ]);\n    if (fromStyleImageConfig != null) {\n        setValueByPath(toObject, ['styleImageConfig'], styleReferenceConfigToVertex(fromStyleImageConfig));\n    }\n    const fromSubjectImageConfig = getValueByPath(fromObject, [\n        'subjectImageConfig',\n    ]);\n    if (fromSubjectImageConfig != null) {\n        setValueByPath(toObject, ['subjectImageConfig'], subjectReferenceConfigToVertex(fromSubjectImageConfig));\n    }\n    return toObject;\n}\nfunction editImageConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromOutputGcsUri = getValueByPath(fromObject, ['outputGcsUri']);\n    if (parentObject !== undefined && fromOutputGcsUri != null) {\n        setValueByPath(parentObject, ['parameters', 'storageUri'], fromOutputGcsUri);\n    }\n    const fromNegativePrompt = getValueByPath(fromObject, [\n        'negativePrompt',\n    ]);\n    if (parentObject !== undefined && fromNegativePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'negativePrompt'], fromNegativePrompt);\n    }\n    const fromNumberOfImages = getValueByPath(fromObject, [\n        'numberOfImages',\n    ]);\n    if (parentObject !== undefined && fromNumberOfImages != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfImages);\n    }\n    const fromAspectRatio = getValueByPath(fromObject, ['aspectRatio']);\n    if (parentObject !== undefined && fromAspectRatio != null) {\n        setValueByPath(parentObject, ['parameters', 'aspectRatio'], fromAspectRatio);\n    }\n    const fromGuidanceScale = getValueByPath(fromObject, [\n        'guidanceScale',\n    ]);\n    if (parentObject !== undefined && fromGuidanceScale != null) {\n        setValueByPath(parentObject, ['parameters', 'guidanceScale'], fromGuidanceScale);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n    }\n    const fromSafetyFilterLevel = getValueByPath(fromObject, [\n        'safetyFilterLevel',\n    ]);\n    if (parentObject !== undefined && fromSafetyFilterLevel != null) {\n        setValueByPath(parentObject, ['parameters', 'safetySetting'], fromSafetyFilterLevel);\n    }\n    const fromPersonGeneration = getValueByPath(fromObject, [\n        'personGeneration',\n    ]);\n    if (parentObject !== undefined && fromPersonGeneration != null) {\n        setValueByPath(parentObject, ['parameters', 'personGeneration'], fromPersonGeneration);\n    }\n    const fromIncludeSafetyAttributes = getValueByPath(fromObject, [\n        'includeSafetyAttributes',\n    ]);\n    if (parentObject !== undefined && fromIncludeSafetyAttributes != null) {\n        setValueByPath(parentObject, ['parameters', 'includeSafetyAttributes'], fromIncludeSafetyAttributes);\n    }\n    const fromIncludeRaiReason = getValueByPath(fromObject, [\n        'includeRaiReason',\n    ]);\n    if (parentObject !== undefined && fromIncludeRaiReason != null) {\n        setValueByPath(parentObject, ['parameters', 'includeRaiReason'], fromIncludeRaiReason);\n    }\n    const fromLanguage = getValueByPath(fromObject, ['language']);\n    if (parentObject !== undefined && fromLanguage != null) {\n        setValueByPath(parentObject, ['parameters', 'language'], fromLanguage);\n    }\n    const fromOutputMimeType = getValueByPath(fromObject, [\n        'outputMimeType',\n    ]);\n    if (parentObject !== undefined && fromOutputMimeType != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'mimeType'], fromOutputMimeType);\n    }\n    const fromOutputCompressionQuality = getValueByPath(fromObject, [\n        'outputCompressionQuality',\n    ]);\n    if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'compressionQuality'], fromOutputCompressionQuality);\n    }\n    const fromEditMode = getValueByPath(fromObject, ['editMode']);\n    if (parentObject !== undefined && fromEditMode != null) {\n        setValueByPath(parentObject, ['parameters', 'editMode'], fromEditMode);\n    }\n    const fromBaseSteps = getValueByPath(fromObject, ['baseSteps']);\n    if (parentObject !== undefined && fromBaseSteps != null) {\n        setValueByPath(parentObject, ['parameters', 'editConfig', 'baseSteps'], fromBaseSteps);\n    }\n    return toObject;\n}\nfunction editImageParametersInternalToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromPrompt != null) {\n        setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n    }\n    const fromReferenceImages = getValueByPath(fromObject, [\n        'referenceImages',\n    ]);\n    if (fromReferenceImages != null) {\n        let transformedList = fromReferenceImages;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return referenceImageAPIInternalToVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['instances[0]', 'referenceImages'], transformedList);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], editImageConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction upscaleImageAPIConfigInternalToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromIncludeRaiReason = getValueByPath(fromObject, [\n        'includeRaiReason',\n    ]);\n    if (parentObject !== undefined && fromIncludeRaiReason != null) {\n        setValueByPath(parentObject, ['parameters', 'includeRaiReason'], fromIncludeRaiReason);\n    }\n    const fromOutputMimeType = getValueByPath(fromObject, [\n        'outputMimeType',\n    ]);\n    if (parentObject !== undefined && fromOutputMimeType != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'mimeType'], fromOutputMimeType);\n    }\n    const fromOutputCompressionQuality = getValueByPath(fromObject, [\n        'outputCompressionQuality',\n    ]);\n    if (parentObject !== undefined && fromOutputCompressionQuality != null) {\n        setValueByPath(parentObject, ['parameters', 'outputOptions', 'compressionQuality'], fromOutputCompressionQuality);\n    }\n    const fromEnhanceInputImage = getValueByPath(fromObject, [\n        'enhanceInputImage',\n    ]);\n    if (parentObject !== undefined && fromEnhanceInputImage != null) {\n        setValueByPath(parentObject, ['parameters', 'upscaleConfig', 'enhanceInputImage'], fromEnhanceInputImage);\n    }\n    const fromImagePreservationFactor = getValueByPath(fromObject, [\n        'imagePreservationFactor',\n    ]);\n    if (parentObject !== undefined && fromImagePreservationFactor != null) {\n        setValueByPath(parentObject, ['parameters', 'upscaleConfig', 'imagePreservationFactor'], fromImagePreservationFactor);\n    }\n    const fromNumberOfImages = getValueByPath(fromObject, [\n        'numberOfImages',\n    ]);\n    if (parentObject !== undefined && fromNumberOfImages != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfImages);\n    }\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (parentObject !== undefined && fromMode != null) {\n        setValueByPath(parentObject, ['parameters', 'mode'], fromMode);\n    }\n    return toObject;\n}\nfunction upscaleImageAPIParametersInternalToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromImage = getValueByPath(fromObject, ['image']);\n    if (fromImage != null) {\n        setValueByPath(toObject, ['instances[0]', 'image'], imageToVertex(fromImage));\n    }\n    const fromUpscaleFactor = getValueByPath(fromObject, [\n        'upscaleFactor',\n    ]);\n    if (fromUpscaleFactor != null) {\n        setValueByPath(toObject, ['parameters', 'upscaleConfig', 'upscaleFactor'], fromUpscaleFactor);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], upscaleImageAPIConfigInternalToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getModelParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'name'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction listModelsConfigToVertex(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    const fromFilter = getValueByPath(fromObject, ['filter']);\n    if (parentObject !== undefined && fromFilter != null) {\n        setValueByPath(parentObject, ['_query', 'filter'], fromFilter);\n    }\n    const fromQueryBase = getValueByPath(fromObject, ['queryBase']);\n    if (parentObject !== undefined && fromQueryBase != null) {\n        setValueByPath(parentObject, ['_url', 'models_url'], tModelsUrl(apiClient, fromQueryBase));\n    }\n    return toObject;\n}\nfunction listModelsParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listModelsConfigToVertex(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction updateModelConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (parentObject !== undefined && fromDisplayName != null) {\n        setValueByPath(parentObject, ['displayName'], fromDisplayName);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (parentObject !== undefined && fromDescription != null) {\n        setValueByPath(parentObject, ['description'], fromDescription);\n    }\n    const fromDefaultCheckpointId = getValueByPath(fromObject, [\n        'defaultCheckpointId',\n    ]);\n    if (parentObject !== undefined && fromDefaultCheckpointId != null) {\n        setValueByPath(parentObject, ['defaultCheckpointId'], fromDefaultCheckpointId);\n    }\n    return toObject;\n}\nfunction updateModelParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], updateModelConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction deleteModelParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'name'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction countTokensConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['systemInstruction'], contentToVertex(tContent(fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        let transformedList = fromTools;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return toolToVertex(item);\n            });\n        }\n        setValueByPath(parentObject, ['tools'], transformedList);\n    }\n    const fromGenerationConfig = getValueByPath(fromObject, [\n        'generationConfig',\n    ]);\n    if (parentObject !== undefined && fromGenerationConfig != null) {\n        setValueByPath(parentObject, ['generationConfig'], fromGenerationConfig);\n    }\n    return toObject;\n}\nfunction countTokensParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        let transformedList = tContents(fromContents);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentToVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['contents'], transformedList);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], countTokensConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction computeTokensParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromContents = getValueByPath(fromObject, ['contents']);\n    if (fromContents != null) {\n        let transformedList = tContents(fromContents);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentToVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['contents'], transformedList);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction videoToVertex(fromObject) {\n    const toObject = {};\n    const fromUri = getValueByPath(fromObject, ['uri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['gcsUri'], fromUri);\n    }\n    const fromVideoBytes = getValueByPath(fromObject, ['videoBytes']);\n    if (fromVideoBytes != null) {\n        setValueByPath(toObject, ['bytesBase64Encoded'], tBytes(fromVideoBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generateVideosConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromNumberOfVideos = getValueByPath(fromObject, [\n        'numberOfVideos',\n    ]);\n    if (parentObject !== undefined && fromNumberOfVideos != null) {\n        setValueByPath(parentObject, ['parameters', 'sampleCount'], fromNumberOfVideos);\n    }\n    const fromOutputGcsUri = getValueByPath(fromObject, ['outputGcsUri']);\n    if (parentObject !== undefined && fromOutputGcsUri != null) {\n        setValueByPath(parentObject, ['parameters', 'storageUri'], fromOutputGcsUri);\n    }\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (parentObject !== undefined && fromFps != null) {\n        setValueByPath(parentObject, ['parameters', 'fps'], fromFps);\n    }\n    const fromDurationSeconds = getValueByPath(fromObject, [\n        'durationSeconds',\n    ]);\n    if (parentObject !== undefined && fromDurationSeconds != null) {\n        setValueByPath(parentObject, ['parameters', 'durationSeconds'], fromDurationSeconds);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['parameters', 'seed'], fromSeed);\n    }\n    const fromAspectRatio = getValueByPath(fromObject, ['aspectRatio']);\n    if (parentObject !== undefined && fromAspectRatio != null) {\n        setValueByPath(parentObject, ['parameters', 'aspectRatio'], fromAspectRatio);\n    }\n    const fromResolution = getValueByPath(fromObject, ['resolution']);\n    if (parentObject !== undefined && fromResolution != null) {\n        setValueByPath(parentObject, ['parameters', 'resolution'], fromResolution);\n    }\n    const fromPersonGeneration = getValueByPath(fromObject, [\n        'personGeneration',\n    ]);\n    if (parentObject !== undefined && fromPersonGeneration != null) {\n        setValueByPath(parentObject, ['parameters', 'personGeneration'], fromPersonGeneration);\n    }\n    const fromPubsubTopic = getValueByPath(fromObject, ['pubsubTopic']);\n    if (parentObject !== undefined && fromPubsubTopic != null) {\n        setValueByPath(parentObject, ['parameters', 'pubsubTopic'], fromPubsubTopic);\n    }\n    const fromNegativePrompt = getValueByPath(fromObject, [\n        'negativePrompt',\n    ]);\n    if (parentObject !== undefined && fromNegativePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'negativePrompt'], fromNegativePrompt);\n    }\n    const fromEnhancePrompt = getValueByPath(fromObject, [\n        'enhancePrompt',\n    ]);\n    if (parentObject !== undefined && fromEnhancePrompt != null) {\n        setValueByPath(parentObject, ['parameters', 'enhancePrompt'], fromEnhancePrompt);\n    }\n    const fromGenerateAudio = getValueByPath(fromObject, [\n        'generateAudio',\n    ]);\n    if (parentObject !== undefined && fromGenerateAudio != null) {\n        setValueByPath(parentObject, ['parameters', 'generateAudio'], fromGenerateAudio);\n    }\n    const fromLastFrame = getValueByPath(fromObject, ['lastFrame']);\n    if (parentObject !== undefined && fromLastFrame != null) {\n        setValueByPath(parentObject, ['instances[0]', 'lastFrame'], imageToVertex(fromLastFrame));\n    }\n    const fromCompressionQuality = getValueByPath(fromObject, [\n        'compressionQuality',\n    ]);\n    if (parentObject !== undefined && fromCompressionQuality != null) {\n        setValueByPath(parentObject, ['parameters', 'compressionQuality'], fromCompressionQuality);\n    }\n    return toObject;\n}\nfunction generateVideosParametersToVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['_url', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromPrompt != null) {\n        setValueByPath(toObject, ['instances[0]', 'prompt'], fromPrompt);\n    }\n    const fromImage = getValueByPath(fromObject, ['image']);\n    if (fromImage != null) {\n        setValueByPath(toObject, ['instances[0]', 'image'], imageToVertex(fromImage));\n    }\n    const fromVideo = getValueByPath(fromObject, ['video']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['instances[0]', 'video'], videoToVertex(fromVideo));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], generateVideosConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction videoMetadataFromMldev(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobFromMldev(fromObject) {\n    const toObject = {};\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataFromMldev(fromObject) {\n    const toObject = {};\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partFromMldev(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataFromMldev(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobFromMldev(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataFromMldev(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentFromMldev(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction citationMetadataFromMldev(fromObject) {\n    const toObject = {};\n    const fromCitations = getValueByPath(fromObject, ['citationSources']);\n    if (fromCitations != null) {\n        setValueByPath(toObject, ['citations'], fromCitations);\n    }\n    return toObject;\n}\nfunction urlMetadataFromMldev(fromObject) {\n    const toObject = {};\n    const fromRetrievedUrl = getValueByPath(fromObject, ['retrievedUrl']);\n    if (fromRetrievedUrl != null) {\n        setValueByPath(toObject, ['retrievedUrl'], fromRetrievedUrl);\n    }\n    const fromUrlRetrievalStatus = getValueByPath(fromObject, [\n        'urlRetrievalStatus',\n    ]);\n    if (fromUrlRetrievalStatus != null) {\n        setValueByPath(toObject, ['urlRetrievalStatus'], fromUrlRetrievalStatus);\n    }\n    return toObject;\n}\nfunction urlContextMetadataFromMldev(fromObject) {\n    const toObject = {};\n    const fromUrlMetadata = getValueByPath(fromObject, ['urlMetadata']);\n    if (fromUrlMetadata != null) {\n        let transformedList = fromUrlMetadata;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return urlMetadataFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['urlMetadata'], transformedList);\n    }\n    return toObject;\n}\nfunction candidateFromMldev(fromObject) {\n    const toObject = {};\n    const fromContent = getValueByPath(fromObject, ['content']);\n    if (fromContent != null) {\n        setValueByPath(toObject, ['content'], contentFromMldev(fromContent));\n    }\n    const fromCitationMetadata = getValueByPath(fromObject, [\n        'citationMetadata',\n    ]);\n    if (fromCitationMetadata != null) {\n        setValueByPath(toObject, ['citationMetadata'], citationMetadataFromMldev(fromCitationMetadata));\n    }\n    const fromTokenCount = getValueByPath(fromObject, ['tokenCount']);\n    if (fromTokenCount != null) {\n        setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n    }\n    const fromFinishReason = getValueByPath(fromObject, ['finishReason']);\n    if (fromFinishReason != null) {\n        setValueByPath(toObject, ['finishReason'], fromFinishReason);\n    }\n    const fromUrlContextMetadata = getValueByPath(fromObject, [\n        'urlContextMetadata',\n    ]);\n    if (fromUrlContextMetadata != null) {\n        setValueByPath(toObject, ['urlContextMetadata'], urlContextMetadataFromMldev(fromUrlContextMetadata));\n    }\n    const fromAvgLogprobs = getValueByPath(fromObject, ['avgLogprobs']);\n    if (fromAvgLogprobs != null) {\n        setValueByPath(toObject, ['avgLogprobs'], fromAvgLogprobs);\n    }\n    const fromGroundingMetadata = getValueByPath(fromObject, [\n        'groundingMetadata',\n    ]);\n    if (fromGroundingMetadata != null) {\n        setValueByPath(toObject, ['groundingMetadata'], fromGroundingMetadata);\n    }\n    const fromIndex = getValueByPath(fromObject, ['index']);\n    if (fromIndex != null) {\n        setValueByPath(toObject, ['index'], fromIndex);\n    }\n    const fromLogprobsResult = getValueByPath(fromObject, [\n        'logprobsResult',\n    ]);\n    if (fromLogprobsResult != null) {\n        setValueByPath(toObject, ['logprobsResult'], fromLogprobsResult);\n    }\n    const fromSafetyRatings = getValueByPath(fromObject, [\n        'safetyRatings',\n    ]);\n    if (fromSafetyRatings != null) {\n        setValueByPath(toObject, ['safetyRatings'], fromSafetyRatings);\n    }\n    return toObject;\n}\nfunction generateContentResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromCandidates = getValueByPath(fromObject, ['candidates']);\n    if (fromCandidates != null) {\n        let transformedList = fromCandidates;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return candidateFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['candidates'], transformedList);\n    }\n    const fromModelVersion = getValueByPath(fromObject, ['modelVersion']);\n    if (fromModelVersion != null) {\n        setValueByPath(toObject, ['modelVersion'], fromModelVersion);\n    }\n    const fromPromptFeedback = getValueByPath(fromObject, [\n        'promptFeedback',\n    ]);\n    if (fromPromptFeedback != null) {\n        setValueByPath(toObject, ['promptFeedback'], fromPromptFeedback);\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n    }\n    return toObject;\n}\nfunction contentEmbeddingFromMldev(fromObject) {\n    const toObject = {};\n    const fromValues = getValueByPath(fromObject, ['values']);\n    if (fromValues != null) {\n        setValueByPath(toObject, ['values'], fromValues);\n    }\n    return toObject;\n}\nfunction embedContentMetadataFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction embedContentResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromEmbeddings = getValueByPath(fromObject, ['embeddings']);\n    if (fromEmbeddings != null) {\n        let transformedList = fromEmbeddings;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentEmbeddingFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['embeddings'], transformedList);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], embedContentMetadataFromMldev());\n    }\n    return toObject;\n}\nfunction imageFromMldev(fromObject) {\n    const toObject = {};\n    const fromImageBytes = getValueByPath(fromObject, [\n        'bytesBase64Encoded',\n    ]);\n    if (fromImageBytes != null) {\n        setValueByPath(toObject, ['imageBytes'], tBytes(fromImageBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction safetyAttributesFromMldev(fromObject) {\n    const toObject = {};\n    const fromCategories = getValueByPath(fromObject, [\n        'safetyAttributes',\n        'categories',\n    ]);\n    if (fromCategories != null) {\n        setValueByPath(toObject, ['categories'], fromCategories);\n    }\n    const fromScores = getValueByPath(fromObject, [\n        'safetyAttributes',\n        'scores',\n    ]);\n    if (fromScores != null) {\n        setValueByPath(toObject, ['scores'], fromScores);\n    }\n    const fromContentType = getValueByPath(fromObject, ['contentType']);\n    if (fromContentType != null) {\n        setValueByPath(toObject, ['contentType'], fromContentType);\n    }\n    return toObject;\n}\nfunction generatedImageFromMldev(fromObject) {\n    const toObject = {};\n    const fromImage = getValueByPath(fromObject, ['_self']);\n    if (fromImage != null) {\n        setValueByPath(toObject, ['image'], imageFromMldev(fromImage));\n    }\n    const fromRaiFilteredReason = getValueByPath(fromObject, [\n        'raiFilteredReason',\n    ]);\n    if (fromRaiFilteredReason != null) {\n        setValueByPath(toObject, ['raiFilteredReason'], fromRaiFilteredReason);\n    }\n    const fromSafetyAttributes = getValueByPath(fromObject, ['_self']);\n    if (fromSafetyAttributes != null) {\n        setValueByPath(toObject, ['safetyAttributes'], safetyAttributesFromMldev(fromSafetyAttributes));\n    }\n    return toObject;\n}\nfunction generateImagesResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromGeneratedImages = getValueByPath(fromObject, [\n        'predictions',\n    ]);\n    if (fromGeneratedImages != null) {\n        let transformedList = fromGeneratedImages;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return generatedImageFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['generatedImages'], transformedList);\n    }\n    const fromPositivePromptSafetyAttributes = getValueByPath(fromObject, [\n        'positivePromptSafetyAttributes',\n    ]);\n    if (fromPositivePromptSafetyAttributes != null) {\n        setValueByPath(toObject, ['positivePromptSafetyAttributes'], safetyAttributesFromMldev(fromPositivePromptSafetyAttributes));\n    }\n    return toObject;\n}\nfunction tunedModelInfoFromMldev(fromObject) {\n    const toObject = {};\n    const fromBaseModel = getValueByPath(fromObject, ['baseModel']);\n    if (fromBaseModel != null) {\n        setValueByPath(toObject, ['baseModel'], fromBaseModel);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    return toObject;\n}\nfunction modelFromMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromVersion = getValueByPath(fromObject, ['version']);\n    if (fromVersion != null) {\n        setValueByPath(toObject, ['version'], fromVersion);\n    }\n    const fromTunedModelInfo = getValueByPath(fromObject, ['_self']);\n    if (fromTunedModelInfo != null) {\n        setValueByPath(toObject, ['tunedModelInfo'], tunedModelInfoFromMldev(fromTunedModelInfo));\n    }\n    const fromInputTokenLimit = getValueByPath(fromObject, [\n        'inputTokenLimit',\n    ]);\n    if (fromInputTokenLimit != null) {\n        setValueByPath(toObject, ['inputTokenLimit'], fromInputTokenLimit);\n    }\n    const fromOutputTokenLimit = getValueByPath(fromObject, [\n        'outputTokenLimit',\n    ]);\n    if (fromOutputTokenLimit != null) {\n        setValueByPath(toObject, ['outputTokenLimit'], fromOutputTokenLimit);\n    }\n    const fromSupportedActions = getValueByPath(fromObject, [\n        'supportedGenerationMethods',\n    ]);\n    if (fromSupportedActions != null) {\n        setValueByPath(toObject, ['supportedActions'], fromSupportedActions);\n    }\n    return toObject;\n}\nfunction listModelsResponseFromMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromModels = getValueByPath(fromObject, ['_self']);\n    if (fromModels != null) {\n        let transformedList = tExtractModels(fromModels);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modelFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['models'], transformedList);\n    }\n    return toObject;\n}\nfunction deleteModelResponseFromMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction countTokensResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromTotalTokens = getValueByPath(fromObject, ['totalTokens']);\n    if (fromTotalTokens != null) {\n        setValueByPath(toObject, ['totalTokens'], fromTotalTokens);\n    }\n    const fromCachedContentTokenCount = getValueByPath(fromObject, [\n        'cachedContentTokenCount',\n    ]);\n    if (fromCachedContentTokenCount != null) {\n        setValueByPath(toObject, ['cachedContentTokenCount'], fromCachedContentTokenCount);\n    }\n    return toObject;\n}\nfunction videoFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromUri = getValueByPath(fromObject, ['video', 'uri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromVideoBytes = getValueByPath(fromObject, [\n        'video',\n        'encodedVideo',\n    ]);\n    if (fromVideoBytes != null) {\n        setValueByPath(toObject, ['videoBytes'], tBytes(fromVideoBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['encoding']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generatedVideoFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromVideo = getValueByPath(fromObject, ['_self']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['video'], videoFromMldev$1(fromVideo));\n    }\n    return toObject;\n}\nfunction generateVideosResponseFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromGeneratedVideos = getValueByPath(fromObject, [\n        'generatedSamples',\n    ]);\n    if (fromGeneratedVideos != null) {\n        let transformedList = fromGeneratedVideos;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return generatedVideoFromMldev$1(item);\n            });\n        }\n        setValueByPath(toObject, ['generatedVideos'], transformedList);\n    }\n    const fromRaiMediaFilteredCount = getValueByPath(fromObject, [\n        'raiMediaFilteredCount',\n    ]);\n    if (fromRaiMediaFilteredCount != null) {\n        setValueByPath(toObject, ['raiMediaFilteredCount'], fromRaiMediaFilteredCount);\n    }\n    const fromRaiMediaFilteredReasons = getValueByPath(fromObject, [\n        'raiMediaFilteredReasons',\n    ]);\n    if (fromRaiMediaFilteredReasons != null) {\n        setValueByPath(toObject, ['raiMediaFilteredReasons'], fromRaiMediaFilteredReasons);\n    }\n    return toObject;\n}\nfunction generateVideosOperationFromMldev$1(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], fromMetadata);\n    }\n    const fromDone = getValueByPath(fromObject, ['done']);\n    if (fromDone != null) {\n        setValueByPath(toObject, ['done'], fromDone);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    const fromResponse = getValueByPath(fromObject, [\n        'response',\n        'generateVideoResponse',\n    ]);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], generateVideosResponseFromMldev$1(fromResponse));\n    }\n    return toObject;\n}\nfunction videoMetadataFromVertex(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobFromVertex(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataFromVertex(fromObject) {\n    const toObject = {};\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partFromVertex(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataFromVertex(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobFromVertex(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataFromVertex(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentFromVertex(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction citationMetadataFromVertex(fromObject) {\n    const toObject = {};\n    const fromCitations = getValueByPath(fromObject, ['citations']);\n    if (fromCitations != null) {\n        setValueByPath(toObject, ['citations'], fromCitations);\n    }\n    return toObject;\n}\nfunction urlMetadataFromVertex(fromObject) {\n    const toObject = {};\n    const fromRetrievedUrl = getValueByPath(fromObject, ['retrievedUrl']);\n    if (fromRetrievedUrl != null) {\n        setValueByPath(toObject, ['retrievedUrl'], fromRetrievedUrl);\n    }\n    const fromUrlRetrievalStatus = getValueByPath(fromObject, [\n        'urlRetrievalStatus',\n    ]);\n    if (fromUrlRetrievalStatus != null) {\n        setValueByPath(toObject, ['urlRetrievalStatus'], fromUrlRetrievalStatus);\n    }\n    return toObject;\n}\nfunction urlContextMetadataFromVertex(fromObject) {\n    const toObject = {};\n    const fromUrlMetadata = getValueByPath(fromObject, ['urlMetadata']);\n    if (fromUrlMetadata != null) {\n        let transformedList = fromUrlMetadata;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return urlMetadataFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['urlMetadata'], transformedList);\n    }\n    return toObject;\n}\nfunction candidateFromVertex(fromObject) {\n    const toObject = {};\n    const fromContent = getValueByPath(fromObject, ['content']);\n    if (fromContent != null) {\n        setValueByPath(toObject, ['content'], contentFromVertex(fromContent));\n    }\n    const fromCitationMetadata = getValueByPath(fromObject, [\n        'citationMetadata',\n    ]);\n    if (fromCitationMetadata != null) {\n        setValueByPath(toObject, ['citationMetadata'], citationMetadataFromVertex(fromCitationMetadata));\n    }\n    const fromFinishMessage = getValueByPath(fromObject, [\n        'finishMessage',\n    ]);\n    if (fromFinishMessage != null) {\n        setValueByPath(toObject, ['finishMessage'], fromFinishMessage);\n    }\n    const fromFinishReason = getValueByPath(fromObject, ['finishReason']);\n    if (fromFinishReason != null) {\n        setValueByPath(toObject, ['finishReason'], fromFinishReason);\n    }\n    const fromUrlContextMetadata = getValueByPath(fromObject, [\n        'urlContextMetadata',\n    ]);\n    if (fromUrlContextMetadata != null) {\n        setValueByPath(toObject, ['urlContextMetadata'], urlContextMetadataFromVertex(fromUrlContextMetadata));\n    }\n    const fromAvgLogprobs = getValueByPath(fromObject, ['avgLogprobs']);\n    if (fromAvgLogprobs != null) {\n        setValueByPath(toObject, ['avgLogprobs'], fromAvgLogprobs);\n    }\n    const fromGroundingMetadata = getValueByPath(fromObject, [\n        'groundingMetadata',\n    ]);\n    if (fromGroundingMetadata != null) {\n        setValueByPath(toObject, ['groundingMetadata'], fromGroundingMetadata);\n    }\n    const fromIndex = getValueByPath(fromObject, ['index']);\n    if (fromIndex != null) {\n        setValueByPath(toObject, ['index'], fromIndex);\n    }\n    const fromLogprobsResult = getValueByPath(fromObject, [\n        'logprobsResult',\n    ]);\n    if (fromLogprobsResult != null) {\n        setValueByPath(toObject, ['logprobsResult'], fromLogprobsResult);\n    }\n    const fromSafetyRatings = getValueByPath(fromObject, [\n        'safetyRatings',\n    ]);\n    if (fromSafetyRatings != null) {\n        setValueByPath(toObject, ['safetyRatings'], fromSafetyRatings);\n    }\n    return toObject;\n}\nfunction generateContentResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromCandidates = getValueByPath(fromObject, ['candidates']);\n    if (fromCandidates != null) {\n        let transformedList = fromCandidates;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return candidateFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['candidates'], transformedList);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromResponseId = getValueByPath(fromObject, ['responseId']);\n    if (fromResponseId != null) {\n        setValueByPath(toObject, ['responseId'], fromResponseId);\n    }\n    const fromModelVersion = getValueByPath(fromObject, ['modelVersion']);\n    if (fromModelVersion != null) {\n        setValueByPath(toObject, ['modelVersion'], fromModelVersion);\n    }\n    const fromPromptFeedback = getValueByPath(fromObject, [\n        'promptFeedback',\n    ]);\n    if (fromPromptFeedback != null) {\n        setValueByPath(toObject, ['promptFeedback'], fromPromptFeedback);\n    }\n    const fromUsageMetadata = getValueByPath(fromObject, [\n        'usageMetadata',\n    ]);\n    if (fromUsageMetadata != null) {\n        setValueByPath(toObject, ['usageMetadata'], fromUsageMetadata);\n    }\n    return toObject;\n}\nfunction contentEmbeddingStatisticsFromVertex(fromObject) {\n    const toObject = {};\n    const fromTruncated = getValueByPath(fromObject, ['truncated']);\n    if (fromTruncated != null) {\n        setValueByPath(toObject, ['truncated'], fromTruncated);\n    }\n    const fromTokenCount = getValueByPath(fromObject, ['token_count']);\n    if (fromTokenCount != null) {\n        setValueByPath(toObject, ['tokenCount'], fromTokenCount);\n    }\n    return toObject;\n}\nfunction contentEmbeddingFromVertex(fromObject) {\n    const toObject = {};\n    const fromValues = getValueByPath(fromObject, ['values']);\n    if (fromValues != null) {\n        setValueByPath(toObject, ['values'], fromValues);\n    }\n    const fromStatistics = getValueByPath(fromObject, ['statistics']);\n    if (fromStatistics != null) {\n        setValueByPath(toObject, ['statistics'], contentEmbeddingStatisticsFromVertex(fromStatistics));\n    }\n    return toObject;\n}\nfunction embedContentMetadataFromVertex(fromObject) {\n    const toObject = {};\n    const fromBillableCharacterCount = getValueByPath(fromObject, [\n        'billableCharacterCount',\n    ]);\n    if (fromBillableCharacterCount != null) {\n        setValueByPath(toObject, ['billableCharacterCount'], fromBillableCharacterCount);\n    }\n    return toObject;\n}\nfunction embedContentResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromEmbeddings = getValueByPath(fromObject, [\n        'predictions[]',\n        'embeddings',\n    ]);\n    if (fromEmbeddings != null) {\n        let transformedList = fromEmbeddings;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return contentEmbeddingFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['embeddings'], transformedList);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], embedContentMetadataFromVertex(fromMetadata));\n    }\n    return toObject;\n}\nfunction imageFromVertex(fromObject) {\n    const toObject = {};\n    const fromGcsUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromGcsUri != null) {\n        setValueByPath(toObject, ['gcsUri'], fromGcsUri);\n    }\n    const fromImageBytes = getValueByPath(fromObject, [\n        'bytesBase64Encoded',\n    ]);\n    if (fromImageBytes != null) {\n        setValueByPath(toObject, ['imageBytes'], tBytes(fromImageBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction safetyAttributesFromVertex(fromObject) {\n    const toObject = {};\n    const fromCategories = getValueByPath(fromObject, [\n        'safetyAttributes',\n        'categories',\n    ]);\n    if (fromCategories != null) {\n        setValueByPath(toObject, ['categories'], fromCategories);\n    }\n    const fromScores = getValueByPath(fromObject, [\n        'safetyAttributes',\n        'scores',\n    ]);\n    if (fromScores != null) {\n        setValueByPath(toObject, ['scores'], fromScores);\n    }\n    const fromContentType = getValueByPath(fromObject, ['contentType']);\n    if (fromContentType != null) {\n        setValueByPath(toObject, ['contentType'], fromContentType);\n    }\n    return toObject;\n}\nfunction generatedImageFromVertex(fromObject) {\n    const toObject = {};\n    const fromImage = getValueByPath(fromObject, ['_self']);\n    if (fromImage != null) {\n        setValueByPath(toObject, ['image'], imageFromVertex(fromImage));\n    }\n    const fromRaiFilteredReason = getValueByPath(fromObject, [\n        'raiFilteredReason',\n    ]);\n    if (fromRaiFilteredReason != null) {\n        setValueByPath(toObject, ['raiFilteredReason'], fromRaiFilteredReason);\n    }\n    const fromSafetyAttributes = getValueByPath(fromObject, ['_self']);\n    if (fromSafetyAttributes != null) {\n        setValueByPath(toObject, ['safetyAttributes'], safetyAttributesFromVertex(fromSafetyAttributes));\n    }\n    const fromEnhancedPrompt = getValueByPath(fromObject, ['prompt']);\n    if (fromEnhancedPrompt != null) {\n        setValueByPath(toObject, ['enhancedPrompt'], fromEnhancedPrompt);\n    }\n    return toObject;\n}\nfunction generateImagesResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromGeneratedImages = getValueByPath(fromObject, [\n        'predictions',\n    ]);\n    if (fromGeneratedImages != null) {\n        let transformedList = fromGeneratedImages;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return generatedImageFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['generatedImages'], transformedList);\n    }\n    const fromPositivePromptSafetyAttributes = getValueByPath(fromObject, [\n        'positivePromptSafetyAttributes',\n    ]);\n    if (fromPositivePromptSafetyAttributes != null) {\n        setValueByPath(toObject, ['positivePromptSafetyAttributes'], safetyAttributesFromVertex(fromPositivePromptSafetyAttributes));\n    }\n    return toObject;\n}\nfunction editImageResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromGeneratedImages = getValueByPath(fromObject, [\n        'predictions',\n    ]);\n    if (fromGeneratedImages != null) {\n        let transformedList = fromGeneratedImages;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return generatedImageFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['generatedImages'], transformedList);\n    }\n    return toObject;\n}\nfunction upscaleImageResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromGeneratedImages = getValueByPath(fromObject, [\n        'predictions',\n    ]);\n    if (fromGeneratedImages != null) {\n        let transformedList = fromGeneratedImages;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return generatedImageFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['generatedImages'], transformedList);\n    }\n    return toObject;\n}\nfunction endpointFromVertex(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['endpoint']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDeployedModelId = getValueByPath(fromObject, [\n        'deployedModelId',\n    ]);\n    if (fromDeployedModelId != null) {\n        setValueByPath(toObject, ['deployedModelId'], fromDeployedModelId);\n    }\n    return toObject;\n}\nfunction tunedModelInfoFromVertex(fromObject) {\n    const toObject = {};\n    const fromBaseModel = getValueByPath(fromObject, [\n        'labels',\n        'google-vertex-llm-tuning-base-model-id',\n    ]);\n    if (fromBaseModel != null) {\n        setValueByPath(toObject, ['baseModel'], fromBaseModel);\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    return toObject;\n}\nfunction checkpointFromVertex(fromObject) {\n    const toObject = {};\n    const fromCheckpointId = getValueByPath(fromObject, ['checkpointId']);\n    if (fromCheckpointId != null) {\n        setValueByPath(toObject, ['checkpointId'], fromCheckpointId);\n    }\n    const fromEpoch = getValueByPath(fromObject, ['epoch']);\n    if (fromEpoch != null) {\n        setValueByPath(toObject, ['epoch'], fromEpoch);\n    }\n    const fromStep = getValueByPath(fromObject, ['step']);\n    if (fromStep != null) {\n        setValueByPath(toObject, ['step'], fromStep);\n    }\n    return toObject;\n}\nfunction modelFromVertex(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromDisplayName = getValueByPath(fromObject, ['displayName']);\n    if (fromDisplayName != null) {\n        setValueByPath(toObject, ['displayName'], fromDisplayName);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromVersion = getValueByPath(fromObject, ['versionId']);\n    if (fromVersion != null) {\n        setValueByPath(toObject, ['version'], fromVersion);\n    }\n    const fromEndpoints = getValueByPath(fromObject, ['deployedModels']);\n    if (fromEndpoints != null) {\n        let transformedList = fromEndpoints;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return endpointFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['endpoints'], transformedList);\n    }\n    const fromLabels = getValueByPath(fromObject, ['labels']);\n    if (fromLabels != null) {\n        setValueByPath(toObject, ['labels'], fromLabels);\n    }\n    const fromTunedModelInfo = getValueByPath(fromObject, ['_self']);\n    if (fromTunedModelInfo != null) {\n        setValueByPath(toObject, ['tunedModelInfo'], tunedModelInfoFromVertex(fromTunedModelInfo));\n    }\n    const fromDefaultCheckpointId = getValueByPath(fromObject, [\n        'defaultCheckpointId',\n    ]);\n    if (fromDefaultCheckpointId != null) {\n        setValueByPath(toObject, ['defaultCheckpointId'], fromDefaultCheckpointId);\n    }\n    const fromCheckpoints = getValueByPath(fromObject, ['checkpoints']);\n    if (fromCheckpoints != null) {\n        let transformedList = fromCheckpoints;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return checkpointFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['checkpoints'], transformedList);\n    }\n    return toObject;\n}\nfunction listModelsResponseFromVertex(apiClient, fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromModels = getValueByPath(fromObject, ['_self']);\n    if (fromModels != null) {\n        let transformedList = tExtractModels(fromModels);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return modelFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['models'], transformedList);\n    }\n    return toObject;\n}\nfunction deleteModelResponseFromVertex() {\n    const toObject = {};\n    return toObject;\n}\nfunction countTokensResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromTotalTokens = getValueByPath(fromObject, ['totalTokens']);\n    if (fromTotalTokens != null) {\n        setValueByPath(toObject, ['totalTokens'], fromTotalTokens);\n    }\n    return toObject;\n}\nfunction computeTokensResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromTokensInfo = getValueByPath(fromObject, ['tokensInfo']);\n    if (fromTokensInfo != null) {\n        setValueByPath(toObject, ['tokensInfo'], fromTokensInfo);\n    }\n    return toObject;\n}\nfunction videoFromVertex$1(fromObject) {\n    const toObject = {};\n    const fromUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromVideoBytes = getValueByPath(fromObject, [\n        'bytesBase64Encoded',\n    ]);\n    if (fromVideoBytes != null) {\n        setValueByPath(toObject, ['videoBytes'], tBytes(fromVideoBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generatedVideoFromVertex$1(fromObject) {\n    const toObject = {};\n    const fromVideo = getValueByPath(fromObject, ['_self']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['video'], videoFromVertex$1(fromVideo));\n    }\n    return toObject;\n}\nfunction generateVideosResponseFromVertex$1(fromObject) {\n    const toObject = {};\n    const fromGeneratedVideos = getValueByPath(fromObject, ['videos']);\n    if (fromGeneratedVideos != null) {\n        let transformedList = fromGeneratedVideos;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return generatedVideoFromVertex$1(item);\n            });\n        }\n        setValueByPath(toObject, ['generatedVideos'], transformedList);\n    }\n    const fromRaiMediaFilteredCount = getValueByPath(fromObject, [\n        'raiMediaFilteredCount',\n    ]);\n    if (fromRaiMediaFilteredCount != null) {\n        setValueByPath(toObject, ['raiMediaFilteredCount'], fromRaiMediaFilteredCount);\n    }\n    const fromRaiMediaFilteredReasons = getValueByPath(fromObject, [\n        'raiMediaFilteredReasons',\n    ]);\n    if (fromRaiMediaFilteredReasons != null) {\n        setValueByPath(toObject, ['raiMediaFilteredReasons'], fromRaiMediaFilteredReasons);\n    }\n    return toObject;\n}\nfunction generateVideosOperationFromVertex$1(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], fromMetadata);\n    }\n    const fromDone = getValueByPath(fromObject, ['done']);\n    if (fromDone != null) {\n        setValueByPath(toObject, ['done'], fromDone);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], generateVideosResponseFromVertex$1(fromResponse));\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst CONTENT_TYPE_HEADER = 'Content-Type';\nconst SERVER_TIMEOUT_HEADER = 'X-Server-Timeout';\nconst USER_AGENT_HEADER = 'User-Agent';\nconst GOOGLE_API_CLIENT_HEADER = 'x-goog-api-client';\nconst SDK_VERSION = '1.7.0'; // x-release-please-version\nconst LIBRARY_LABEL = `google-genai-sdk/${SDK_VERSION}`;\nconst VERTEX_AI_API_DEFAULT_VERSION = 'v1beta1';\nconst GOOGLE_AI_API_DEFAULT_VERSION = 'v1beta';\nconst responseLineRE = /^data: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * The ApiClient class is used to send requests to the Gemini API or Vertex AI\n * endpoints.\n */\nclass ApiClient {\n    constructor(opts) {\n        var _a, _b;\n        this.clientOptions = Object.assign(Object.assign({}, opts), { project: opts.project, location: opts.location, apiKey: opts.apiKey, vertexai: opts.vertexai });\n        const initHttpOptions = {};\n        if (this.clientOptions.vertexai) {\n            initHttpOptions.apiVersion =\n                (_a = this.clientOptions.apiVersion) !== null && _a !== void 0 ? _a : VERTEX_AI_API_DEFAULT_VERSION;\n            initHttpOptions.baseUrl = this.baseUrlFromProjectLocation();\n            this.normalizeAuthParameters();\n        }\n        else {\n            // Gemini API\n            initHttpOptions.apiVersion =\n                (_b = this.clientOptions.apiVersion) !== null && _b !== void 0 ? _b : GOOGLE_AI_API_DEFAULT_VERSION;\n            initHttpOptions.baseUrl = `https://generativelanguage.googleapis.com/`;\n        }\n        initHttpOptions.headers = this.getDefaultHeaders();\n        this.clientOptions.httpOptions = initHttpOptions;\n        if (opts.httpOptions) {\n            this.clientOptions.httpOptions = this.patchHttpOptions(initHttpOptions, opts.httpOptions);\n        }\n    }\n    /**\n     * Determines the base URL for Vertex AI based on project and location.\n     * Uses the global endpoint if location is 'global' or if project/location\n     * are not specified (implying API key usage).\n     * @private\n     */\n    baseUrlFromProjectLocation() {\n        if (this.clientOptions.project &&\n            this.clientOptions.location &&\n            this.clientOptions.location !== 'global') {\n            // Regional endpoint\n            return `https://${this.clientOptions.location}-aiplatform.googleapis.com/`;\n        }\n        // Global endpoint (covers 'global' location and API key usage)\n        return `https://aiplatform.googleapis.com/`;\n    }\n    /**\n     * Normalizes authentication parameters for Vertex AI.\n     * If project and location are provided, API key is cleared.\n     * If project and location are not provided (implying API key usage),\n     * project and location are cleared.\n     * @private\n     */\n    normalizeAuthParameters() {\n        if (this.clientOptions.project && this.clientOptions.location) {\n            // Using project/location for auth, clear potential API key\n            this.clientOptions.apiKey = undefined;\n            return;\n        }\n        // Using API key for auth (or no auth provided yet), clear project/location\n        this.clientOptions.project = undefined;\n        this.clientOptions.location = undefined;\n    }\n    isVertexAI() {\n        var _a;\n        return (_a = this.clientOptions.vertexai) !== null && _a !== void 0 ? _a : false;\n    }\n    getProject() {\n        return this.clientOptions.project;\n    }\n    getLocation() {\n        return this.clientOptions.location;\n    }\n    getApiVersion() {\n        if (this.clientOptions.httpOptions &&\n            this.clientOptions.httpOptions.apiVersion !== undefined) {\n            return this.clientOptions.httpOptions.apiVersion;\n        }\n        throw new Error('API version is not set.');\n    }\n    getBaseUrl() {\n        if (this.clientOptions.httpOptions &&\n            this.clientOptions.httpOptions.baseUrl !== undefined) {\n            return this.clientOptions.httpOptions.baseUrl;\n        }\n        throw new Error('Base URL is not set.');\n    }\n    getRequestUrl() {\n        return this.getRequestUrlInternal(this.clientOptions.httpOptions);\n    }\n    getHeaders() {\n        if (this.clientOptions.httpOptions &&\n            this.clientOptions.httpOptions.headers !== undefined) {\n            return this.clientOptions.httpOptions.headers;\n        }\n        else {\n            throw new Error('Headers are not set.');\n        }\n    }\n    getRequestUrlInternal(httpOptions) {\n        if (!httpOptions ||\n            httpOptions.baseUrl === undefined ||\n            httpOptions.apiVersion === undefined) {\n            throw new Error('HTTP options are not correctly set.');\n        }\n        const baseUrl = httpOptions.baseUrl.endsWith('/')\n            ? httpOptions.baseUrl.slice(0, -1)\n            : httpOptions.baseUrl;\n        const urlElement = [baseUrl];\n        if (httpOptions.apiVersion && httpOptions.apiVersion !== '') {\n            urlElement.push(httpOptions.apiVersion);\n        }\n        return urlElement.join('/');\n    }\n    getBaseResourcePath() {\n        return `projects/${this.clientOptions.project}/locations/${this.clientOptions.location}`;\n    }\n    getApiKey() {\n        return this.clientOptions.apiKey;\n    }\n    getWebsocketBaseUrl() {\n        const baseUrl = this.getBaseUrl();\n        const urlParts = new URL(baseUrl);\n        urlParts.protocol = urlParts.protocol == 'http:' ? 'ws' : 'wss';\n        return urlParts.toString();\n    }\n    setBaseUrl(url) {\n        if (this.clientOptions.httpOptions) {\n            this.clientOptions.httpOptions.baseUrl = url;\n        }\n        else {\n            throw new Error('HTTP options are not correctly set.');\n        }\n    }\n    constructUrl(path, httpOptions, prependProjectLocation) {\n        const urlElement = [this.getRequestUrlInternal(httpOptions)];\n        if (prependProjectLocation) {\n            urlElement.push(this.getBaseResourcePath());\n        }\n        if (path !== '') {\n            urlElement.push(path);\n        }\n        const url = new URL(`${urlElement.join('/')}`);\n        return url;\n    }\n    shouldPrependVertexProjectPath(request) {\n        if (this.clientOptions.apiKey) {\n            return false;\n        }\n        if (!this.clientOptions.vertexai) {\n            return false;\n        }\n        if (request.path.startsWith('projects/')) {\n            // Assume the path already starts with\n            // `projects/<project>/location/<location>`.\n            return false;\n        }\n        if (request.httpMethod === 'GET' &&\n            request.path.startsWith('publishers/google/models')) {\n            // These paths are used by Vertex's models.get and models.list\n            // calls. For base models Vertex does not accept a project/location\n            // prefix (for tuned model the prefix is required).\n            return false;\n        }\n        return true;\n    }\n    async request(request) {\n        let patchedHttpOptions = this.clientOptions.httpOptions;\n        if (request.httpOptions) {\n            patchedHttpOptions = this.patchHttpOptions(this.clientOptions.httpOptions, request.httpOptions);\n        }\n        const prependProjectLocation = this.shouldPrependVertexProjectPath(request);\n        const url = this.constructUrl(request.path, patchedHttpOptions, prependProjectLocation);\n        if (request.queryParams) {\n            for (const [key, value] of Object.entries(request.queryParams)) {\n                url.searchParams.append(key, String(value));\n            }\n        }\n        let requestInit = {};\n        if (request.httpMethod === 'GET') {\n            if (request.body && request.body !== '{}') {\n                throw new Error('Request body should be empty for GET request, but got non empty request body');\n            }\n        }\n        else {\n            requestInit.body = request.body;\n        }\n        requestInit = await this.includeExtraHttpOptionsToRequestInit(requestInit, patchedHttpOptions, request.abortSignal);\n        return this.unaryApiCall(url, requestInit, request.httpMethod);\n    }\n    patchHttpOptions(baseHttpOptions, requestHttpOptions) {\n        const patchedHttpOptions = JSON.parse(JSON.stringify(baseHttpOptions));\n        for (const [key, value] of Object.entries(requestHttpOptions)) {\n            // Records compile to objects.\n            if (typeof value === 'object') {\n                // @ts-expect-error TS2345TS7053: Element implicitly has an 'any' type\n                // because expression of type 'string' can't be used to index type\n                // 'HttpOptions'.\n                patchedHttpOptions[key] = Object.assign(Object.assign({}, patchedHttpOptions[key]), value);\n            }\n            else if (value !== undefined) {\n                // @ts-expect-error TS2345TS7053: Element implicitly has an 'any' type\n                // because expression of type 'string' can't be used to index type\n                // 'HttpOptions'.\n                patchedHttpOptions[key] = value;\n            }\n        }\n        return patchedHttpOptions;\n    }\n    async requestStream(request) {\n        let patchedHttpOptions = this.clientOptions.httpOptions;\n        if (request.httpOptions) {\n            patchedHttpOptions = this.patchHttpOptions(this.clientOptions.httpOptions, request.httpOptions);\n        }\n        const prependProjectLocation = this.shouldPrependVertexProjectPath(request);\n        const url = this.constructUrl(request.path, patchedHttpOptions, prependProjectLocation);\n        if (!url.searchParams.has('alt') || url.searchParams.get('alt') !== 'sse') {\n            url.searchParams.set('alt', 'sse');\n        }\n        let requestInit = {};\n        requestInit.body = request.body;\n        requestInit = await this.includeExtraHttpOptionsToRequestInit(requestInit, patchedHttpOptions, request.abortSignal);\n        return this.streamApiCall(url, requestInit, request.httpMethod);\n    }\n    async includeExtraHttpOptionsToRequestInit(requestInit, httpOptions, abortSignal) {\n        if ((httpOptions && httpOptions.timeout) || abortSignal) {\n            const abortController = new AbortController();\n            const signal = abortController.signal;\n            if (httpOptions.timeout && (httpOptions === null || httpOptions === void 0 ? void 0 : httpOptions.timeout) > 0) {\n                setTimeout(() => abortController.abort(), httpOptions.timeout);\n            }\n            if (abortSignal) {\n                abortSignal.addEventListener('abort', () => {\n                    abortController.abort();\n                });\n            }\n            requestInit.signal = signal;\n        }\n        if (httpOptions && httpOptions.extraBody !== null) {\n            includeExtraBodyToRequestInit(requestInit, httpOptions.extraBody);\n        }\n        requestInit.headers = await this.getHeadersInternal(httpOptions);\n        return requestInit;\n    }\n    async unaryApiCall(url, requestInit, httpMethod) {\n        return this.apiCall(url.toString(), Object.assign(Object.assign({}, requestInit), { method: httpMethod }))\n            .then(async (response) => {\n            await throwErrorIfNotOK(response);\n            return new HttpResponse(response);\n        })\n            .catch((e) => {\n            if (e instanceof Error) {\n                throw e;\n            }\n            else {\n                throw new Error(JSON.stringify(e));\n            }\n        });\n    }\n    async streamApiCall(url, requestInit, httpMethod) {\n        return this.apiCall(url.toString(), Object.assign(Object.assign({}, requestInit), { method: httpMethod }))\n            .then(async (response) => {\n            await throwErrorIfNotOK(response);\n            return this.processStreamResponse(response);\n        })\n            .catch((e) => {\n            if (e instanceof Error) {\n                throw e;\n            }\n            else {\n                throw new Error(JSON.stringify(e));\n            }\n        });\n    }\n    processStreamResponse(response) {\n        var _a;\n        return __asyncGenerator(this, arguments, function* processStreamResponse_1() {\n            const reader = (_a = response === null || response === void 0 ? void 0 : response.body) === null || _a === void 0 ? void 0 : _a.getReader();\n            const decoder = new TextDecoder('utf-8');\n            if (!reader) {\n                throw new Error('Response body is empty');\n            }\n            try {\n                let buffer = '';\n                while (true) {\n                    const { done, value } = yield __await(reader.read());\n                    if (done) {\n                        if (buffer.trim().length > 0) {\n                            throw new Error('Incomplete JSON segment at the end');\n                        }\n                        break;\n                    }\n                    const chunkString = decoder.decode(value);\n                    // Parse and throw an error if the chunk contains an error.\n                    try {\n                        const chunkJson = JSON.parse(chunkString);\n                        if ('error' in chunkJson) {\n                            const errorJson = JSON.parse(JSON.stringify(chunkJson['error']));\n                            const status = errorJson['status'];\n                            const code = errorJson['code'];\n                            const errorMessage = `got status: ${status}. ${JSON.stringify(chunkJson)}`;\n                            if (code >= 400 && code < 600) {\n                                const apiError = new ApiError({\n                                    message: errorMessage,\n                                    status: code,\n                                });\n                                throw apiError;\n                            }\n                        }\n                    }\n                    catch (e) {\n                        const error = e;\n                        if (error.name === 'ApiError') {\n                            throw e;\n                        }\n                    }\n                    buffer += chunkString;\n                    let match = buffer.match(responseLineRE);\n                    while (match) {\n                        const processedChunkString = match[1];\n                        try {\n                            const partialResponse = new Response(processedChunkString, {\n                                headers: response === null || response === void 0 ? void 0 : response.headers,\n                                status: response === null || response === void 0 ? void 0 : response.status,\n                                statusText: response === null || response === void 0 ? void 0 : response.statusText,\n                            });\n                            yield yield __await(new HttpResponse(partialResponse));\n                            buffer = buffer.slice(match[0].length);\n                            match = buffer.match(responseLineRE);\n                        }\n                        catch (e) {\n                            throw new Error(`exception parsing stream chunk ${processedChunkString}. ${e}`);\n                        }\n                    }\n                }\n            }\n            finally {\n                reader.releaseLock();\n            }\n        });\n    }\n    async apiCall(url, requestInit) {\n        return fetch(url, requestInit).catch((e) => {\n            throw new Error(`exception ${e} sending request`);\n        });\n    }\n    getDefaultHeaders() {\n        const headers = {};\n        const versionHeaderValue = LIBRARY_LABEL + ' ' + this.clientOptions.userAgentExtra;\n        headers[USER_AGENT_HEADER] = versionHeaderValue;\n        headers[GOOGLE_API_CLIENT_HEADER] = versionHeaderValue;\n        headers[CONTENT_TYPE_HEADER] = 'application/json';\n        return headers;\n    }\n    async getHeadersInternal(httpOptions) {\n        const headers = new Headers();\n        if (httpOptions && httpOptions.headers) {\n            for (const [key, value] of Object.entries(httpOptions.headers)) {\n                headers.append(key, value);\n            }\n            // Append a timeout header if it is set, note that the timeout option is\n            // in milliseconds but the header is in seconds.\n            if (httpOptions.timeout && httpOptions.timeout > 0) {\n                headers.append(SERVER_TIMEOUT_HEADER, String(Math.ceil(httpOptions.timeout / 1000)));\n            }\n        }\n        await this.clientOptions.auth.addAuthHeaders(headers);\n        return headers;\n    }\n    /**\n     * Uploads a file asynchronously using Gemini API only, this is not supported\n     * in Vertex AI.\n     *\n     * @param file The string path to the file to be uploaded or a Blob object.\n     * @param config Optional parameters specified in the `UploadFileConfig`\n     *     interface. @see {@link UploadFileConfig}\n     * @return A promise that resolves to a `File` object.\n     * @throws An error if called on a Vertex AI client.\n     * @throws An error if the `mimeType` is not provided and can not be inferred,\n     */\n    async uploadFile(file, config) {\n        var _a;\n        const fileToUpload = {};\n        if (config != null) {\n            fileToUpload.mimeType = config.mimeType;\n            fileToUpload.name = config.name;\n            fileToUpload.displayName = config.displayName;\n        }\n        if (fileToUpload.name && !fileToUpload.name.startsWith('files/')) {\n            fileToUpload.name = `files/${fileToUpload.name}`;\n        }\n        const uploader = this.clientOptions.uploader;\n        const fileStat = await uploader.stat(file);\n        fileToUpload.sizeBytes = String(fileStat.size);\n        const mimeType = (_a = config === null || config === void 0 ? void 0 : config.mimeType) !== null && _a !== void 0 ? _a : fileStat.type;\n        if (mimeType === undefined || mimeType === '') {\n            throw new Error('Can not determine mimeType. Please provide mimeType in the config.');\n        }\n        fileToUpload.mimeType = mimeType;\n        const uploadUrl = await this.fetchUploadUrl(fileToUpload, config);\n        return uploader.upload(file, uploadUrl, this);\n    }\n    /**\n     * Downloads a file asynchronously to the specified path.\n     *\n     * @params params - The parameters for the download request, see {@link\n     * DownloadFileParameters}\n     */\n    async downloadFile(params) {\n        const downloader = this.clientOptions.downloader;\n        await downloader.download(params, this);\n    }\n    async fetchUploadUrl(file, config) {\n        var _a;\n        let httpOptions = {};\n        if (config === null || config === void 0 ? void 0 : config.httpOptions) {\n            httpOptions = config.httpOptions;\n        }\n        else {\n            httpOptions = {\n                apiVersion: '',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Goog-Upload-Protocol': 'resumable',\n                    'X-Goog-Upload-Command': 'start',\n                    'X-Goog-Upload-Header-Content-Length': `${file.sizeBytes}`,\n                    'X-Goog-Upload-Header-Content-Type': `${file.mimeType}`,\n                },\n            };\n        }\n        const body = {\n            'file': file,\n        };\n        const httpResponse = await this.request({\n            path: formatMap('upload/v1beta/files', body['_url']),\n            body: JSON.stringify(body),\n            httpMethod: 'POST',\n            httpOptions,\n        });\n        if (!httpResponse || !(httpResponse === null || httpResponse === void 0 ? void 0 : httpResponse.headers)) {\n            throw new Error('Server did not return an HttpResponse or the returned HttpResponse did not have headers.');\n        }\n        const uploadUrl = (_a = httpResponse === null || httpResponse === void 0 ? void 0 : httpResponse.headers) === null || _a === void 0 ? void 0 : _a['x-goog-upload-url'];\n        if (uploadUrl === undefined) {\n            throw new Error('Failed to get upload url. Server did not return the x-google-upload-url in the headers');\n        }\n        return uploadUrl;\n    }\n}\nasync function throwErrorIfNotOK(response) {\n    var _a;\n    if (response === undefined) {\n        throw new Error('response is undefined');\n    }\n    if (!response.ok) {\n        const status = response.status;\n        let errorBody;\n        if ((_a = response.headers.get('content-type')) === null || _a === void 0 ? void 0 : _a.includes('application/json')) {\n            errorBody = await response.json();\n        }\n        else {\n            errorBody = {\n                error: {\n                    message: await response.text(),\n                    code: response.status,\n                    status: response.statusText,\n                },\n            };\n        }\n        const errorMessage = JSON.stringify(errorBody);\n        if (status >= 400 && status < 600) {\n            const apiError = new ApiError({\n                message: errorMessage,\n                status: status,\n            });\n            throw apiError;\n        }\n        throw new Error(errorMessage);\n    }\n}\n/**\n * Recursively updates the `requestInit.body` with values from an `extraBody` object.\n *\n * If `requestInit.body` is a string, it's assumed to be JSON and will be parsed.\n * The `extraBody` is then deeply merged into this parsed object.\n * If `requestInit.body` is a Blob, `extraBody` will be ignored, and a warning logged,\n * as merging structured data into an opaque Blob is not supported.\n *\n * The function does not enforce that updated values from `extraBody` have the\n * same type as existing values in `requestInit.body`. Type mismatches during\n * the merge will result in a warning, but the value from `extraBody` will overwrite\n * the original. `extraBody` users are responsible for ensuring `extraBody` has the correct structure.\n *\n * @param requestInit The RequestInit object whose body will be updated.\n * @param extraBody The object containing updates to be merged into `requestInit.body`.\n */\nfunction includeExtraBodyToRequestInit(requestInit, extraBody) {\n    if (!extraBody || Object.keys(extraBody).length === 0) {\n        return;\n    }\n    if (requestInit.body instanceof Blob) {\n        console.warn('includeExtraBodyToRequestInit: extraBody provided but current request body is a Blob. extraBody will be ignored as merging is not supported for Blob bodies.');\n        return;\n    }\n    let currentBodyObject = {};\n    // If adding new type to HttpRequest.body, please check the code below to\n    // see if we need to update the logic.\n    if (typeof requestInit.body === 'string' && requestInit.body.length > 0) {\n        try {\n            const parsedBody = JSON.parse(requestInit.body);\n            if (typeof parsedBody === 'object' &&\n                parsedBody !== null &&\n                !Array.isArray(parsedBody)) {\n                currentBodyObject = parsedBody;\n            }\n            else {\n                console.warn('includeExtraBodyToRequestInit: Original request body is valid JSON but not a non-array object. Skip applying extraBody to the request body.');\n                return;\n            }\n            /*  eslint-disable-next-line @typescript-eslint/no-unused-vars */\n        }\n        catch (e) {\n            console.warn('includeExtraBodyToRequestInit: Original request body is not valid JSON. Skip applying extraBody to the request body.');\n            return;\n        }\n    }\n    function deepMerge(target, source) {\n        const output = Object.assign({}, target);\n        for (const key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n                const sourceValue = source[key];\n                const targetValue = output[key];\n                if (sourceValue &&\n                    typeof sourceValue === 'object' &&\n                    !Array.isArray(sourceValue) &&\n                    targetValue &&\n                    typeof targetValue === 'object' &&\n                    !Array.isArray(targetValue)) {\n                    output[key] = deepMerge(targetValue, sourceValue);\n                }\n                else {\n                    if (targetValue &&\n                        sourceValue &&\n                        typeof targetValue !== typeof sourceValue) {\n                        console.warn(`includeExtraBodyToRequestInit:deepMerge: Type mismatch for key \"${key}\". Original type: ${typeof targetValue}, New type: ${typeof sourceValue}. Overwriting.`);\n                    }\n                    output[key] = sourceValue;\n                }\n            }\n        }\n        return output;\n    }\n    const mergedBody = deepMerge(currentBodyObject, extraBody);\n    requestInit.body = JSON.stringify(mergedBody);\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// TODO: b/416041229 - Determine how to retrieve the MCP package version.\nconst MCP_LABEL = 'mcp_used/unknown';\n// Checks whether the list of tools contains any MCP tools.\nfunction hasMcpToolUsage(tools) {\n    for (const tool of tools) {\n        if (isMcpCallableTool(tool)) {\n            return true;\n        }\n        if (typeof tool === 'object' && 'inputSchema' in tool) {\n            return true;\n        }\n    }\n    return false;\n}\n// Sets the MCP version label in the Google API client header.\nfunction setMcpUsageHeader(headers) {\n    var _a;\n    const existingHeader = (_a = headers[GOOGLE_API_CLIENT_HEADER]) !== null && _a !== void 0 ? _a : '';\n    headers[GOOGLE_API_CLIENT_HEADER] = (existingHeader + ` ${MCP_LABEL}`).trimStart();\n}\n// Checks whether the list of tools contains any MCP clients. Will return true\n// if there is at least one MCP client.\nfunction hasMcpClientTools(params) {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = params.config) === null || _a === void 0 ? void 0 : _a.tools) === null || _b === void 0 ? void 0 : _b.some((tool) => isMcpCallableTool(tool))) !== null && _c !== void 0 ? _c : false;\n}\n// Checks whether the list of tools contains any non-MCP tools. Will return true\n// if there is at least one non-MCP tool.\nfunction hasNonMcpTools(params) {\n    var _a, _b, _c;\n    return ((_c = (_b = (_a = params.config) === null || _a === void 0 ? void 0 : _a.tools) === null || _b === void 0 ? void 0 : _b.some((tool) => !isMcpCallableTool(tool))) !== null && _c !== void 0 ? _c : false);\n}\n// Returns true if the object is a MCP CallableTool, otherwise false.\nfunction isMcpCallableTool(object) {\n    return (object !== null &&\n        typeof object === 'object' &&\n        object instanceof McpCallableTool);\n}\n// List all tools from the MCP client.\nfunction listAllTools(mcpClient, maxTools = 100) {\n    return __asyncGenerator(this, arguments, function* listAllTools_1() {\n        let cursor = undefined;\n        let numTools = 0;\n        while (numTools < maxTools) {\n            const t = yield __await(mcpClient.listTools({ cursor }));\n            for (const tool of t.tools) {\n                yield yield __await(tool);\n                numTools++;\n            }\n            if (!t.nextCursor) {\n                break;\n            }\n            cursor = t.nextCursor;\n        }\n    });\n}\n/**\n * McpCallableTool can be used for model inference and invoking MCP clients with\n * given function call arguments.\n *\n * @experimental Built-in MCP support is an experimental feature, may change in future\n * versions.\n */\nclass McpCallableTool {\n    constructor(mcpClients = [], config) {\n        this.mcpTools = [];\n        this.functionNameToMcpClient = {};\n        this.mcpClients = mcpClients;\n        this.config = config;\n    }\n    /**\n     * Creates a McpCallableTool.\n     */\n    static create(mcpClients, config) {\n        return new McpCallableTool(mcpClients, config);\n    }\n    /**\n     * Validates the function names are not duplicate and initialize the function\n     * name to MCP client mapping.\n     *\n     * @throws {Error} if the MCP tools from the MCP clients have duplicate tool\n     *     names.\n     */\n    async initialize() {\n        var _a, e_1, _b, _c;\n        if (this.mcpTools.length > 0) {\n            return;\n        }\n        const functionMap = {};\n        const mcpTools = [];\n        for (const mcpClient of this.mcpClients) {\n            try {\n                for (var _d = true, _e = (e_1 = void 0, __asyncValues(listAllTools(mcpClient))), _f; _f = await _e.next(), _a = _f.done, !_a; _d = true) {\n                    _c = _f.value;\n                    _d = false;\n                    const mcpTool = _c;\n                    mcpTools.push(mcpTool);\n                    const mcpToolName = mcpTool.name;\n                    if (functionMap[mcpToolName]) {\n                        throw new Error(`Duplicate function name ${mcpToolName} found in MCP tools. Please ensure function names are unique.`);\n                    }\n                    functionMap[mcpToolName] = mcpClient;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = _e.return)) await _b.call(_e);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        this.mcpTools = mcpTools;\n        this.functionNameToMcpClient = functionMap;\n    }\n    async tool() {\n        await this.initialize();\n        return mcpToolsToGeminiTool(this.mcpTools, this.config);\n    }\n    async callTool(functionCalls) {\n        await this.initialize();\n        const functionCallResponseParts = [];\n        for (const functionCall of functionCalls) {\n            if (functionCall.name in this.functionNameToMcpClient) {\n                const mcpClient = this.functionNameToMcpClient[functionCall.name];\n                let requestOptions = undefined;\n                // TODO: b/424238654 - Add support for finer grained timeout control.\n                if (this.config.timeout) {\n                    requestOptions = {\n                        timeout: this.config.timeout,\n                    };\n                }\n                const callToolResponse = await mcpClient.callTool({\n                    name: functionCall.name,\n                    arguments: functionCall.args,\n                }, \n                // Set the result schema to undefined to allow MCP to rely on the\n                // default schema.\n                undefined, requestOptions);\n                functionCallResponseParts.push({\n                    functionResponse: {\n                        name: functionCall.name,\n                        response: callToolResponse.isError\n                            ? { error: callToolResponse }\n                            : callToolResponse,\n                    },\n                });\n            }\n        }\n        return functionCallResponseParts;\n    }\n}\nfunction isMcpClient(client) {\n    return (client !== null &&\n        typeof client === 'object' &&\n        'listTools' in client &&\n        typeof client.listTools === 'function');\n}\n/**\n * Creates a McpCallableTool from MCP clients and an optional config.\n *\n * The callable tool can invoke the MCP clients with given function call\n * arguments. (often for automatic function calling).\n * Use the config to modify tool parameters such as behavior.\n *\n * @experimental Built-in MCP support is an experimental feature, may change in future\n * versions.\n */\nfunction mcpToTool(...args) {\n    if (args.length === 0) {\n        throw new Error('No MCP clients provided');\n    }\n    const maybeConfig = args[args.length - 1];\n    if (isMcpClient(maybeConfig)) {\n        return McpCallableTool.create(args, {});\n    }\n    return McpCallableTool.create(args.slice(0, args.length - 1), maybeConfig);\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Handles incoming messages from the WebSocket.\n *\n * @remarks\n * This function is responsible for parsing incoming messages, transforming them\n * into LiveMusicServerMessage, and then calling the onmessage callback.\n * Note that the first message which is received from the server is a\n * setupComplete message.\n *\n * @param apiClient The ApiClient instance.\n * @param onmessage The user-provided onmessage callback (if any).\n * @param event The MessageEvent from the WebSocket.\n */\nasync function handleWebSocketMessage$1(apiClient, onmessage, event) {\n    const serverMessage = new LiveMusicServerMessage();\n    let data;\n    if (event.data instanceof Blob) {\n        data = JSON.parse(await event.data.text());\n    }\n    else {\n        data = JSON.parse(event.data);\n    }\n    const response = liveMusicServerMessageFromMldev(data);\n    Object.assign(serverMessage, response);\n    onmessage(serverMessage);\n}\n/**\n   LiveMusic class encapsulates the configuration for live music\n   generation via Lyria Live models.\n\n   @experimental\n  */\nclass LiveMusic {\n    constructor(apiClient, auth, webSocketFactory) {\n        this.apiClient = apiClient;\n        this.auth = auth;\n        this.webSocketFactory = webSocketFactory;\n    }\n    /**\n       Establishes a connection to the specified model and returns a\n       LiveMusicSession object representing that connection.\n  \n       @experimental\n  \n       @remarks\n  \n       @param params - The parameters for establishing a connection to the model.\n       @return A live session.\n  \n       @example\n       ```ts\n       let model = 'models/lyria-realtime-exp';\n       const session = await ai.live.music.connect({\n         model: model,\n         callbacks: {\n           onmessage: (e: MessageEvent) => {\n             console.log('Received message from the server: %s\\n', debug(e.data));\n           },\n           onerror: (e: ErrorEvent) => {\n             console.log('Error occurred: %s\\n', debug(e.error));\n           },\n           onclose: (e: CloseEvent) => {\n             console.log('Connection closed.');\n           },\n         },\n       });\n       ```\n      */\n    async connect(params) {\n        var _a, _b;\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('Live music is not supported for Vertex AI.');\n        }\n        console.warn('Live music generation is experimental and may change in future versions.');\n        const websocketBaseUrl = this.apiClient.getWebsocketBaseUrl();\n        const apiVersion = this.apiClient.getApiVersion();\n        const headers = mapToHeaders$1(this.apiClient.getDefaultHeaders());\n        const apiKey = this.apiClient.getApiKey();\n        const url = `${websocketBaseUrl}/ws/google.ai.generativelanguage.${apiVersion}.GenerativeService.BidiGenerateMusic?key=${apiKey}`;\n        let onopenResolve = () => { };\n        const onopenPromise = new Promise((resolve) => {\n            onopenResolve = resolve;\n        });\n        const callbacks = params.callbacks;\n        const onopenAwaitedCallback = function () {\n            onopenResolve({});\n        };\n        const apiClient = this.apiClient;\n        const websocketCallbacks = {\n            onopen: onopenAwaitedCallback,\n            onmessage: (event) => {\n                void handleWebSocketMessage$1(apiClient, callbacks.onmessage, event);\n            },\n            onerror: (_a = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onerror) !== null && _a !== void 0 ? _a : function (e) {\n            },\n            onclose: (_b = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onclose) !== null && _b !== void 0 ? _b : function (e) {\n            },\n        };\n        const conn = this.webSocketFactory.create(url, headersToMap$1(headers), websocketCallbacks);\n        conn.connect();\n        // Wait for the websocket to open before sending requests.\n        await onopenPromise;\n        const model = tModel(this.apiClient, params.model);\n        const setup = liveMusicClientSetupToMldev({\n            model,\n        });\n        const clientMessage = liveMusicClientMessageToMldev({ setup });\n        conn.send(JSON.stringify(clientMessage));\n        return new LiveMusicSession(conn, this.apiClient);\n    }\n}\n/**\n   Represents a connection to the API.\n\n   @experimental\n  */\nclass LiveMusicSession {\n    constructor(conn, apiClient) {\n        this.conn = conn;\n        this.apiClient = apiClient;\n    }\n    /**\n      Sets inputs to steer music generation. Updates the session's current\n      weighted prompts.\n  \n      @param params - Contains one property, `weightedPrompts`.\n  \n        - `weightedPrompts` to send to the model; weights are normalized to\n          sum to 1.0.\n  \n      @experimental\n     */\n    async setWeightedPrompts(params) {\n        if (!params.weightedPrompts ||\n            Object.keys(params.weightedPrompts).length === 0) {\n            throw new Error('Weighted prompts must be set and contain at least one entry.');\n        }\n        const setWeightedPromptsParameters = liveMusicSetWeightedPromptsParametersToMldev(params);\n        const clientContent = liveMusicClientContentToMldev(setWeightedPromptsParameters);\n        this.conn.send(JSON.stringify({ clientContent }));\n    }\n    /**\n      Sets a configuration to the model. Updates the session's current\n      music generation config.\n  \n      @param params - Contains one property, `musicGenerationConfig`.\n  \n        - `musicGenerationConfig` to set in the model. Passing an empty or\n      undefined config to the model will reset the config to defaults.\n  \n      @experimental\n     */\n    async setMusicGenerationConfig(params) {\n        if (!params.musicGenerationConfig) {\n            params.musicGenerationConfig = {};\n        }\n        const setConfigParameters = liveMusicSetConfigParametersToMldev(params);\n        const clientMessage = liveMusicClientMessageToMldev(setConfigParameters);\n        this.conn.send(JSON.stringify(clientMessage));\n    }\n    sendPlaybackControl(playbackControl) {\n        const clientMessage = liveMusicClientMessageToMldev({\n            playbackControl,\n        });\n        this.conn.send(JSON.stringify(clientMessage));\n    }\n    /**\n     * Start the music stream.\n     *\n     * @experimental\n     */\n    play() {\n        this.sendPlaybackControl(LiveMusicPlaybackControl.PLAY);\n    }\n    /**\n     * Temporarily halt the music stream. Use `play` to resume from the current\n     * position.\n     *\n     * @experimental\n     */\n    pause() {\n        this.sendPlaybackControl(LiveMusicPlaybackControl.PAUSE);\n    }\n    /**\n     * Stop the music stream and reset the state. Retains the current prompts\n     * and config.\n     *\n     * @experimental\n     */\n    stop() {\n        this.sendPlaybackControl(LiveMusicPlaybackControl.STOP);\n    }\n    /**\n     * Resets the context of the music generation without stopping it.\n     * Retains the current prompts and config.\n     *\n     * @experimental\n     */\n    resetContext() {\n        this.sendPlaybackControl(LiveMusicPlaybackControl.RESET_CONTEXT);\n    }\n    /**\n       Terminates the WebSocket connection.\n  \n       @experimental\n     */\n    close() {\n        this.conn.close();\n    }\n}\n// Converts an headers object to a \"map\" object as expected by the WebSocket\n// constructor. We use this as the Auth interface works with Headers objects\n// while the WebSocket constructor takes a map.\nfunction headersToMap$1(headers) {\n    const headerMap = {};\n    headers.forEach((value, key) => {\n        headerMap[key] = value;\n    });\n    return headerMap;\n}\n// Converts a \"map\" object to a headers object. We use this as the Auth\n// interface works with Headers objects while the API client default headers\n// returns a map.\nfunction mapToHeaders$1(map) {\n    const headers = new Headers();\n    for (const [key, value] of Object.entries(map)) {\n        headers.append(key, value);\n    }\n    return headers;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst FUNCTION_RESPONSE_REQUIRES_ID = 'FunctionResponse request must have an `id` field from the response of a ToolCall.FunctionalCalls in Google AI.';\n/**\n * Handles incoming messages from the WebSocket.\n *\n * @remarks\n * This function is responsible for parsing incoming messages, transforming them\n * into LiveServerMessages, and then calling the onmessage callback. Note that\n * the first message which is received from the server is a setupComplete\n * message.\n *\n * @param apiClient The ApiClient instance.\n * @param onmessage The user-provided onmessage callback (if any).\n * @param event The MessageEvent from the WebSocket.\n */\nasync function handleWebSocketMessage(apiClient, onmessage, event) {\n    const serverMessage = new LiveServerMessage();\n    let jsonData;\n    if (event.data instanceof Blob) {\n        jsonData = await event.data.text();\n    }\n    else if (event.data instanceof ArrayBuffer) {\n        jsonData = new TextDecoder().decode(event.data);\n    }\n    else {\n        jsonData = event.data;\n    }\n    const data = JSON.parse(jsonData);\n    if (apiClient.isVertexAI()) {\n        const resp = liveServerMessageFromVertex(data);\n        Object.assign(serverMessage, resp);\n    }\n    else {\n        const resp = liveServerMessageFromMldev(data);\n        Object.assign(serverMessage, resp);\n    }\n    onmessage(serverMessage);\n}\n/**\n   Live class encapsulates the configuration for live interaction with the\n   Generative Language API. It embeds ApiClient for general API settings.\n\n   @experimental\n  */\nclass Live {\n    constructor(apiClient, auth, webSocketFactory) {\n        this.apiClient = apiClient;\n        this.auth = auth;\n        this.webSocketFactory = webSocketFactory;\n        this.music = new LiveMusic(this.apiClient, this.auth, this.webSocketFactory);\n    }\n    /**\n       Establishes a connection to the specified model with the given\n       configuration and returns a Session object representing that connection.\n  \n       @experimental Built-in MCP support is an experimental feature, may change in\n       future versions.\n  \n       @remarks\n  \n       @param params - The parameters for establishing a connection to the model.\n       @return A live session.\n  \n       @example\n       ```ts\n       let model: string;\n       if (GOOGLE_GENAI_USE_VERTEXAI) {\n         model = 'gemini-2.0-flash-live-preview-04-09';\n       } else {\n         model = 'gemini-2.0-flash-live-001';\n       }\n       const session = await ai.live.connect({\n         model: model,\n         config: {\n           responseModalities: [Modality.AUDIO],\n         },\n         callbacks: {\n           onopen: () => {\n             console.log('Connected to the socket.');\n           },\n           onmessage: (e: MessageEvent) => {\n             console.log('Received message from the server: %s\\n', debug(e.data));\n           },\n           onerror: (e: ErrorEvent) => {\n             console.log('Error occurred: %s\\n', debug(e.error));\n           },\n           onclose: (e: CloseEvent) => {\n             console.log('Connection closed.');\n           },\n         },\n       });\n       ```\n      */\n    async connect(params) {\n        var _a, _b, _c, _d, _e, _f;\n        const websocketBaseUrl = this.apiClient.getWebsocketBaseUrl();\n        const apiVersion = this.apiClient.getApiVersion();\n        let url;\n        const defaultHeaders = this.apiClient.getDefaultHeaders();\n        if (params.config &&\n            params.config.tools &&\n            hasMcpToolUsage(params.config.tools)) {\n            setMcpUsageHeader(defaultHeaders);\n        }\n        const headers = mapToHeaders(defaultHeaders);\n        if (this.apiClient.isVertexAI()) {\n            url = `${websocketBaseUrl}/ws/google.cloud.aiplatform.${apiVersion}.LlmBidiService/BidiGenerateContent`;\n            await this.auth.addAuthHeaders(headers);\n        }\n        else {\n            const apiKey = this.apiClient.getApiKey();\n            let method = 'BidiGenerateContent';\n            let keyName = 'key';\n            if (apiKey === null || apiKey === void 0 ? void 0 : apiKey.startsWith('auth_tokens/')) {\n                console.warn('Warning: Ephemeral token support is experimental and may change in future versions.');\n                method = 'BidiGenerateContentConstrained';\n                keyName = 'access_token';\n            }\n            url = `${websocketBaseUrl}/ws/google.ai.generativelanguage.${apiVersion}.GenerativeService.${method}?${keyName}=${apiKey}`;\n        }\n        let onopenResolve = () => { };\n        const onopenPromise = new Promise((resolve) => {\n            onopenResolve = resolve;\n        });\n        const callbacks = params.callbacks;\n        const onopenAwaitedCallback = function () {\n            var _a;\n            (_a = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onopen) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n            onopenResolve({});\n        };\n        const apiClient = this.apiClient;\n        const websocketCallbacks = {\n            onopen: onopenAwaitedCallback,\n            onmessage: (event) => {\n                void handleWebSocketMessage(apiClient, callbacks.onmessage, event);\n            },\n            onerror: (_a = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onerror) !== null && _a !== void 0 ? _a : function (e) {\n            },\n            onclose: (_b = callbacks === null || callbacks === void 0 ? void 0 : callbacks.onclose) !== null && _b !== void 0 ? _b : function (e) {\n            },\n        };\n        const conn = this.webSocketFactory.create(url, headersToMap(headers), websocketCallbacks);\n        conn.connect();\n        // Wait for the websocket to open before sending requests.\n        await onopenPromise;\n        let transformedModel = tModel(this.apiClient, params.model);\n        if (this.apiClient.isVertexAI() &&\n            transformedModel.startsWith('publishers/')) {\n            const project = this.apiClient.getProject();\n            const location = this.apiClient.getLocation();\n            transformedModel =\n                `projects/${project}/locations/${location}/` + transformedModel;\n        }\n        let clientMessage = {};\n        if (this.apiClient.isVertexAI() &&\n            ((_c = params.config) === null || _c === void 0 ? void 0 : _c.responseModalities) === undefined) {\n            // Set default to AUDIO to align with MLDev API.\n            if (params.config === undefined) {\n                params.config = { responseModalities: [Modality.AUDIO] };\n            }\n            else {\n                params.config.responseModalities = [Modality.AUDIO];\n            }\n        }\n        if ((_d = params.config) === null || _d === void 0 ? void 0 : _d.generationConfig) {\n            // Raise deprecation warning for generationConfig.\n            console.warn('Setting `LiveConnectConfig.generation_config` is deprecated, please set the fields on `LiveConnectConfig` directly. This will become an error in a future version (not before Q3 2025).');\n        }\n        const inputTools = (_f = (_e = params.config) === null || _e === void 0 ? void 0 : _e.tools) !== null && _f !== void 0 ? _f : [];\n        const convertedTools = [];\n        for (const tool of inputTools) {\n            if (this.isCallableTool(tool)) {\n                const callableTool = tool;\n                convertedTools.push(await callableTool.tool());\n            }\n            else {\n                convertedTools.push(tool);\n            }\n        }\n        if (convertedTools.length > 0) {\n            params.config.tools = convertedTools;\n        }\n        const liveConnectParameters = {\n            model: transformedModel,\n            config: params.config,\n            callbacks: params.callbacks,\n        };\n        if (this.apiClient.isVertexAI()) {\n            clientMessage = liveConnectParametersToVertex(this.apiClient, liveConnectParameters);\n        }\n        else {\n            clientMessage = liveConnectParametersToMldev(this.apiClient, liveConnectParameters);\n        }\n        delete clientMessage['config'];\n        conn.send(JSON.stringify(clientMessage));\n        return new Session(conn, this.apiClient);\n    }\n    // TODO: b/416041229 - Abstract this method to a common place.\n    isCallableTool(tool) {\n        return 'callTool' in tool && typeof tool.callTool === 'function';\n    }\n}\nconst defaultLiveSendClientContentParamerters = {\n    turnComplete: true,\n};\n/**\n   Represents a connection to the API.\n\n   @experimental\n  */\nclass Session {\n    constructor(conn, apiClient) {\n        this.conn = conn;\n        this.apiClient = apiClient;\n    }\n    tLiveClientContent(apiClient, params) {\n        if (params.turns !== null && params.turns !== undefined) {\n            let contents = [];\n            try {\n                contents = tContents(params.turns);\n                if (apiClient.isVertexAI()) {\n                    contents = contents.map((item) => contentToVertex(item));\n                }\n                else {\n                    contents = contents.map((item) => contentToMldev$1(item));\n                }\n            }\n            catch (_a) {\n                throw new Error(`Failed to parse client content \"turns\", type: '${typeof params.turns}'`);\n            }\n            return {\n                clientContent: { turns: contents, turnComplete: params.turnComplete },\n            };\n        }\n        return {\n            clientContent: { turnComplete: params.turnComplete },\n        };\n    }\n    tLiveClienttToolResponse(apiClient, params) {\n        let functionResponses = [];\n        if (params.functionResponses == null) {\n            throw new Error('functionResponses is required.');\n        }\n        if (!Array.isArray(params.functionResponses)) {\n            functionResponses = [params.functionResponses];\n        }\n        else {\n            functionResponses = params.functionResponses;\n        }\n        if (functionResponses.length === 0) {\n            throw new Error('functionResponses is required.');\n        }\n        for (const functionResponse of functionResponses) {\n            if (typeof functionResponse !== 'object' ||\n                functionResponse === null ||\n                !('name' in functionResponse) ||\n                !('response' in functionResponse)) {\n                throw new Error(`Could not parse function response, type '${typeof functionResponse}'.`);\n            }\n            if (!apiClient.isVertexAI() && !('id' in functionResponse)) {\n                throw new Error(FUNCTION_RESPONSE_REQUIRES_ID);\n            }\n        }\n        const clientMessage = {\n            toolResponse: { functionResponses: functionResponses },\n        };\n        return clientMessage;\n    }\n    /**\n      Send a message over the established connection.\n  \n      @param params - Contains two **optional** properties, `turns` and\n          `turnComplete`.\n  \n        - `turns` will be converted to a `Content[]`\n        - `turnComplete: true` [default] indicates that you are done sending\n          content and expect a response. If `turnComplete: false`, the server\n          will wait for additional messages before starting generation.\n  \n      @experimental\n  \n      @remarks\n      There are two ways to send messages to the live API:\n      `sendClientContent` and `sendRealtimeInput`.\n  \n      `sendClientContent` messages are added to the model context **in order**.\n      Having a conversation using `sendClientContent` messages is roughly\n      equivalent to using the `Chat.sendMessageStream`, except that the state of\n      the `chat` history is stored on the API server instead of locally.\n  \n      Because of `sendClientContent`'s order guarantee, the model cannot respons\n      as quickly to `sendClientContent` messages as to `sendRealtimeInput`\n      messages. This makes the biggest difference when sending objects that have\n      significant preprocessing time (typically images).\n  \n      The `sendClientContent` message sends a `Content[]`\n      which has more options than the `Blob` sent by `sendRealtimeInput`.\n  \n      So the main use-cases for `sendClientContent` over `sendRealtimeInput` are:\n  \n      - Sending anything that can't be represented as a `Blob` (text,\n      `sendClientContent({turns=\"Hello?\"}`)).\n      - Managing turns when not using audio input and voice activity detection.\n        (`sendClientContent({turnComplete:true})` or the short form\n      `sendClientContent()`)\n      - Prefilling a conversation context\n        ```\n        sendClientContent({\n            turns: [\n              Content({role:user, parts:...}),\n              Content({role:user, parts:...}),\n              ...\n            ]\n        })\n        ```\n      @experimental\n     */\n    sendClientContent(params) {\n        params = Object.assign(Object.assign({}, defaultLiveSendClientContentParamerters), params);\n        const clientMessage = this.tLiveClientContent(this.apiClient, params);\n        this.conn.send(JSON.stringify(clientMessage));\n    }\n    /**\n      Send a realtime message over the established connection.\n  \n      @param params - Contains one property, `media`.\n  \n        - `media` will be converted to a `Blob`\n  \n      @experimental\n  \n      @remarks\n      Use `sendRealtimeInput` for realtime audio chunks and video frames (images).\n  \n      With `sendRealtimeInput` the api will respond to audio automatically\n      based on voice activity detection (VAD).\n  \n      `sendRealtimeInput` is optimized for responsivness at the expense of\n      deterministic ordering guarantees. Audio and video tokens are to the\n      context when they become available.\n  \n      Note: The Call signature expects a `Blob` object, but only a subset\n      of audio and image mimetypes are allowed.\n     */\n    sendRealtimeInput(params) {\n        let clientMessage = {};\n        if (this.apiClient.isVertexAI()) {\n            clientMessage = {\n                'realtimeInput': liveSendRealtimeInputParametersToVertex(params),\n            };\n        }\n        else {\n            clientMessage = {\n                'realtimeInput': liveSendRealtimeInputParametersToMldev(params),\n            };\n        }\n        this.conn.send(JSON.stringify(clientMessage));\n    }\n    /**\n      Send a function response message over the established connection.\n  \n      @param params - Contains property `functionResponses`.\n  \n        - `functionResponses` will be converted to a `functionResponses[]`\n  \n      @remarks\n      Use `sendFunctionResponse` to reply to `LiveServerToolCall` from the server.\n  \n      Use {@link types.LiveConnectConfig#tools} to configure the callable functions.\n  \n      @experimental\n     */\n    sendToolResponse(params) {\n        if (params.functionResponses == null) {\n            throw new Error('Tool response parameters are required.');\n        }\n        const clientMessage = this.tLiveClienttToolResponse(this.apiClient, params);\n        this.conn.send(JSON.stringify(clientMessage));\n    }\n    /**\n       Terminates the WebSocket connection.\n  \n       @experimental\n  \n       @example\n       ```ts\n       let model: string;\n       if (GOOGLE_GENAI_USE_VERTEXAI) {\n         model = 'gemini-2.0-flash-live-preview-04-09';\n       } else {\n         model = 'gemini-2.0-flash-live-001';\n       }\n       const session = await ai.live.connect({\n         model: model,\n         config: {\n           responseModalities: [Modality.AUDIO],\n         }\n       });\n  \n       session.close();\n       ```\n     */\n    close() {\n        this.conn.close();\n    }\n}\n// Converts an headers object to a \"map\" object as expected by the WebSocket\n// constructor. We use this as the Auth interface works with Headers objects\n// while the WebSocket constructor takes a map.\nfunction headersToMap(headers) {\n    const headerMap = {};\n    headers.forEach((value, key) => {\n        headerMap[key] = value;\n    });\n    return headerMap;\n}\n// Converts a \"map\" object to a headers object. We use this as the Auth\n// interface works with Headers objects while the API client default headers\n// returns a map.\nfunction mapToHeaders(map) {\n    const headers = new Headers();\n    for (const [key, value] of Object.entries(map)) {\n        headers.append(key, value);\n    }\n    return headers;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst DEFAULT_MAX_REMOTE_CALLS = 10;\n/** Returns whether automatic function calling is disabled. */\nfunction shouldDisableAfc(config) {\n    var _a, _b, _c;\n    if ((_a = config === null || config === void 0 ? void 0 : config.automaticFunctionCalling) === null || _a === void 0 ? void 0 : _a.disable) {\n        return true;\n    }\n    let callableToolsPresent = false;\n    for (const tool of (_b = config === null || config === void 0 ? void 0 : config.tools) !== null && _b !== void 0 ? _b : []) {\n        if (isCallableTool(tool)) {\n            callableToolsPresent = true;\n            break;\n        }\n    }\n    if (!callableToolsPresent) {\n        return true;\n    }\n    const maxCalls = (_c = config === null || config === void 0 ? void 0 : config.automaticFunctionCalling) === null || _c === void 0 ? void 0 : _c.maximumRemoteCalls;\n    if ((maxCalls && (maxCalls < 0 || !Number.isInteger(maxCalls))) ||\n        maxCalls == 0) {\n        console.warn('Invalid maximumRemoteCalls value provided for automatic function calling. Disabled automatic function calling. Please provide a valid integer value greater than 0. maximumRemoteCalls provided:', maxCalls);\n        return true;\n    }\n    return false;\n}\nfunction isCallableTool(tool) {\n    return 'callTool' in tool && typeof tool.callTool === 'function';\n}\n/**\n * Returns whether to append automatic function calling history to the\n * response.\n */\nfunction shouldAppendAfcHistory(config) {\n    var _a;\n    return !((_a = config === null || config === void 0 ? void 0 : config.automaticFunctionCalling) === null || _a === void 0 ? void 0 : _a.ignoreCallHistory);\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Models extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n        /**\n         * Makes an API request to generate content with a given model.\n         *\n         * For the `model` parameter, supported formats for Vertex AI API include:\n         * - The Gemini model ID, for example: 'gemini-2.0-flash'\n         * - The full resource name starts with 'projects/', for example:\n         *  'projects/my-project-id/locations/us-central1/publishers/google/models/gemini-2.0-flash'\n         * - The partial resource name with 'publishers/', for example:\n         *  'publishers/google/models/gemini-2.0-flash' or\n         *  'publishers/meta/models/llama-3.1-405b-instruct-maas'\n         * - `/` separated publisher and model name, for example:\n         * 'google/gemini-2.0-flash' or 'meta/llama-3.1-405b-instruct-maas'\n         *\n         * For the `model` parameter, supported formats for Gemini API include:\n         * - The Gemini model ID, for example: 'gemini-2.0-flash'\n         * - The model name starts with 'models/', for example:\n         *  'models/gemini-2.0-flash'\n         * - For tuned models, the model name starts with 'tunedModels/',\n         * for example:\n         * 'tunedModels/1234567890123456789'\n         *\n         * Some models support multimodal input and output.\n         *\n         * @param params - The parameters for generating content.\n         * @return The response from generating content.\n         *\n         * @example\n         * ```ts\n         * const response = await ai.models.generateContent({\n         *   model: 'gemini-2.0-flash',\n         *   contents: 'why is the sky blue?',\n         *   config: {\n         *     candidateCount: 2,\n         *   }\n         * });\n         * console.log(response);\n         * ```\n         */\n        this.generateContent = async (params) => {\n            var _a, _b, _c, _d, _e;\n            const transformedParams = await this.processParamsForMcpUsage(params);\n            if (!hasMcpClientTools(params) || shouldDisableAfc(params.config)) {\n                return await this.generateContentInternal(transformedParams);\n            }\n            if (hasNonMcpTools(params)) {\n                throw new Error('Automatic function calling with CallableTools and Tools is not yet supported.');\n            }\n            let response;\n            let functionResponseContent;\n            const automaticFunctionCallingHistory = tContents(transformedParams.contents);\n            const maxRemoteCalls = (_c = (_b = (_a = transformedParams.config) === null || _a === void 0 ? void 0 : _a.automaticFunctionCalling) === null || _b === void 0 ? void 0 : _b.maximumRemoteCalls) !== null && _c !== void 0 ? _c : DEFAULT_MAX_REMOTE_CALLS;\n            let remoteCalls = 0;\n            while (remoteCalls < maxRemoteCalls) {\n                response = await this.generateContentInternal(transformedParams);\n                if (!response.functionCalls || response.functionCalls.length === 0) {\n                    break;\n                }\n                const responseContent = response.candidates[0].content;\n                const functionResponseParts = [];\n                for (const tool of (_e = (_d = params.config) === null || _d === void 0 ? void 0 : _d.tools) !== null && _e !== void 0 ? _e : []) {\n                    if (isCallableTool(tool)) {\n                        const callableTool = tool;\n                        const parts = await callableTool.callTool(response.functionCalls);\n                        functionResponseParts.push(...parts);\n                    }\n                }\n                remoteCalls++;\n                functionResponseContent = {\n                    role: 'user',\n                    parts: functionResponseParts,\n                };\n                transformedParams.contents = tContents(transformedParams.contents);\n                transformedParams.contents.push(responseContent);\n                transformedParams.contents.push(functionResponseContent);\n                if (shouldAppendAfcHistory(transformedParams.config)) {\n                    automaticFunctionCallingHistory.push(responseContent);\n                    automaticFunctionCallingHistory.push(functionResponseContent);\n                }\n            }\n            if (shouldAppendAfcHistory(transformedParams.config)) {\n                response.automaticFunctionCallingHistory =\n                    automaticFunctionCallingHistory;\n            }\n            return response;\n        };\n        /**\n         * Makes an API request to generate content with a given model and yields the\n         * response in chunks.\n         *\n         * For the `model` parameter, supported formats for Vertex AI API include:\n         * - The Gemini model ID, for example: 'gemini-2.0-flash'\n         * - The full resource name starts with 'projects/', for example:\n         *  'projects/my-project-id/locations/us-central1/publishers/google/models/gemini-2.0-flash'\n         * - The partial resource name with 'publishers/', for example:\n         *  'publishers/google/models/gemini-2.0-flash' or\n         *  'publishers/meta/models/llama-3.1-405b-instruct-maas'\n         * - `/` separated publisher and model name, for example:\n         * 'google/gemini-2.0-flash' or 'meta/llama-3.1-405b-instruct-maas'\n         *\n         * For the `model` parameter, supported formats for Gemini API include:\n         * - The Gemini model ID, for example: 'gemini-2.0-flash'\n         * - The model name starts with 'models/', for example:\n         *  'models/gemini-2.0-flash'\n         * - For tuned models, the model name starts with 'tunedModels/',\n         * for example:\n         *  'tunedModels/1234567890123456789'\n         *\n         * Some models support multimodal input and output.\n         *\n         * @param params - The parameters for generating content with streaming response.\n         * @return The response from generating content.\n         *\n         * @example\n         * ```ts\n         * const response = await ai.models.generateContentStream({\n         *   model: 'gemini-2.0-flash',\n         *   contents: 'why is the sky blue?',\n         *   config: {\n         *     maxOutputTokens: 200,\n         *   }\n         * });\n         * for await (const chunk of response) {\n         *   console.log(chunk);\n         * }\n         * ```\n         */\n        this.generateContentStream = async (params) => {\n            if (shouldDisableAfc(params.config)) {\n                const transformedParams = await this.processParamsForMcpUsage(params);\n                return await this.generateContentStreamInternal(transformedParams);\n            }\n            else {\n                return await this.processAfcStream(params);\n            }\n        };\n        /**\n         * Generates an image based on a text description and configuration.\n         *\n         * @param params - The parameters for generating images.\n         * @return The response from the API.\n         *\n         * @example\n         * ```ts\n         * const response = await client.models.generateImages({\n         *  model: 'imagen-3.0-generate-002',\n         *  prompt: 'Robot holding a red skateboard',\n         *  config: {\n         *    numberOfImages: 1,\n         *    includeRaiReason: true,\n         *  },\n         * });\n         * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n         * ```\n         */\n        this.generateImages = async (params) => {\n            return await this.generateImagesInternal(params).then((apiResponse) => {\n                var _a;\n                let positivePromptSafetyAttributes;\n                const generatedImages = [];\n                if (apiResponse === null || apiResponse === void 0 ? void 0 : apiResponse.generatedImages) {\n                    for (const generatedImage of apiResponse.generatedImages) {\n                        if (generatedImage &&\n                            (generatedImage === null || generatedImage === void 0 ? void 0 : generatedImage.safetyAttributes) &&\n                            ((_a = generatedImage === null || generatedImage === void 0 ? void 0 : generatedImage.safetyAttributes) === null || _a === void 0 ? void 0 : _a.contentType) === 'Positive Prompt') {\n                            positivePromptSafetyAttributes = generatedImage === null || generatedImage === void 0 ? void 0 : generatedImage.safetyAttributes;\n                        }\n                        else {\n                            generatedImages.push(generatedImage);\n                        }\n                    }\n                }\n                let response;\n                if (positivePromptSafetyAttributes) {\n                    response = {\n                        generatedImages: generatedImages,\n                        positivePromptSafetyAttributes: positivePromptSafetyAttributes,\n                    };\n                }\n                else {\n                    response = {\n                        generatedImages: generatedImages,\n                    };\n                }\n                return response;\n            });\n        };\n        this.list = async (params) => {\n            var _a;\n            const defaultConfig = {\n                queryBase: true,\n            };\n            const actualConfig = Object.assign(Object.assign({}, defaultConfig), params === null || params === void 0 ? void 0 : params.config);\n            const actualParams = {\n                config: actualConfig,\n            };\n            if (this.apiClient.isVertexAI()) {\n                if (!actualParams.config.queryBase) {\n                    if ((_a = actualParams.config) === null || _a === void 0 ? void 0 : _a.filter) {\n                        throw new Error('Filtering tuned models list for Vertex AI is not currently supported');\n                    }\n                    else {\n                        actualParams.config.filter = 'labels.tune-type:*';\n                    }\n                }\n            }\n            return new Pager(PagedItem.PAGED_ITEM_MODELS, (x) => this.listInternal(x), await this.listInternal(actualParams), actualParams);\n        };\n        /**\n         * Edits an image based on a prompt, list of reference images, and configuration.\n         *\n         * @param params - The parameters for editing an image.\n         * @return The response from the API.\n         *\n         * @example\n         * ```ts\n         * const response = await client.models.editImage({\n         *  model: 'imagen-3.0-capability-001',\n         *  prompt: 'Generate an image containing a mug with the product logo [1] visible on the side of the mug.',\n         *  referenceImages: [subjectReferenceImage]\n         *  config: {\n         *    numberOfImages: 1,\n         *    includeRaiReason: true,\n         *  },\n         * });\n         * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n         * ```\n         */\n        this.editImage = async (params) => {\n            const paramsInternal = {\n                model: params.model,\n                prompt: params.prompt,\n                referenceImages: [],\n                config: params.config,\n            };\n            if (params.referenceImages) {\n                if (params.referenceImages) {\n                    paramsInternal.referenceImages = params.referenceImages.map((img) => img.toReferenceImageAPI());\n                }\n            }\n            return await this.editImageInternal(paramsInternal);\n        };\n        /**\n         * Upscales an image based on an image, upscale factor, and configuration.\n         * Only supported in Vertex AI currently.\n         *\n         * @param params - The parameters for upscaling an image.\n         * @return The response from the API.\n         *\n         * @example\n         * ```ts\n         * const response = await client.models.upscaleImage({\n         *  model: 'imagen-3.0-generate-002',\n         *  image: image,\n         *  upscaleFactor: 'x2',\n         *  config: {\n         *    includeRaiReason: true,\n         *  },\n         * });\n         * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n         * ```\n         */\n        this.upscaleImage = async (params) => {\n            let apiConfig = {\n                numberOfImages: 1,\n                mode: 'upscale',\n            };\n            if (params.config) {\n                apiConfig = Object.assign(Object.assign({}, apiConfig), params.config);\n            }\n            const apiParams = {\n                model: params.model,\n                image: params.image,\n                upscaleFactor: params.upscaleFactor,\n                config: apiConfig,\n            };\n            return await this.upscaleImageInternal(apiParams);\n        };\n    }\n    /**\n     * Transforms the CallableTools in the parameters to be simply Tools, it\n     * copies the params into a new object and replaces the tools, it does not\n     * modify the original params. Also sets the MCP usage header if there are\n     * MCP tools in the parameters.\n     */\n    async processParamsForMcpUsage(params) {\n        var _a, _b, _c;\n        const tools = (_a = params.config) === null || _a === void 0 ? void 0 : _a.tools;\n        if (!tools) {\n            return params;\n        }\n        const transformedTools = await Promise.all(tools.map(async (tool) => {\n            if (isCallableTool(tool)) {\n                const callableTool = tool;\n                return await callableTool.tool();\n            }\n            return tool;\n        }));\n        const newParams = {\n            model: params.model,\n            contents: params.contents,\n            config: Object.assign(Object.assign({}, params.config), { tools: transformedTools }),\n        };\n        newParams.config.tools = transformedTools;\n        if (params.config &&\n            params.config.tools &&\n            hasMcpToolUsage(params.config.tools)) {\n            const headers = (_c = (_b = params.config.httpOptions) === null || _b === void 0 ? void 0 : _b.headers) !== null && _c !== void 0 ? _c : {};\n            let newHeaders = Object.assign({}, headers);\n            if (Object.keys(newHeaders).length === 0) {\n                newHeaders = this.apiClient.getDefaultHeaders();\n            }\n            setMcpUsageHeader(newHeaders);\n            newParams.config.httpOptions = Object.assign(Object.assign({}, params.config.httpOptions), { headers: newHeaders });\n        }\n        return newParams;\n    }\n    async initAfcToolsMap(params) {\n        var _a, _b, _c;\n        const afcTools = new Map();\n        for (const tool of (_b = (_a = params.config) === null || _a === void 0 ? void 0 : _a.tools) !== null && _b !== void 0 ? _b : []) {\n            if (isCallableTool(tool)) {\n                const callableTool = tool;\n                const toolDeclaration = await callableTool.tool();\n                for (const declaration of (_c = toolDeclaration.functionDeclarations) !== null && _c !== void 0 ? _c : []) {\n                    if (!declaration.name) {\n                        throw new Error('Function declaration name is required.');\n                    }\n                    if (afcTools.has(declaration.name)) {\n                        throw new Error(`Duplicate tool declaration name: ${declaration.name}`);\n                    }\n                    afcTools.set(declaration.name, callableTool);\n                }\n            }\n        }\n        return afcTools;\n    }\n    async processAfcStream(params) {\n        var _a, _b, _c;\n        const maxRemoteCalls = (_c = (_b = (_a = params.config) === null || _a === void 0 ? void 0 : _a.automaticFunctionCalling) === null || _b === void 0 ? void 0 : _b.maximumRemoteCalls) !== null && _c !== void 0 ? _c : DEFAULT_MAX_REMOTE_CALLS;\n        let wereFunctionsCalled = false;\n        let remoteCallCount = 0;\n        const afcToolsMap = await this.initAfcToolsMap(params);\n        return (function (models, afcTools, params) {\n            var _a, _b;\n            return __asyncGenerator(this, arguments, function* () {\n                var _c, e_1, _d, _e;\n                while (remoteCallCount < maxRemoteCalls) {\n                    if (wereFunctionsCalled) {\n                        remoteCallCount++;\n                        wereFunctionsCalled = false;\n                    }\n                    const transformedParams = yield __await(models.processParamsForMcpUsage(params));\n                    const response = yield __await(models.generateContentStreamInternal(transformedParams));\n                    const functionResponses = [];\n                    const responseContents = [];\n                    try {\n                        for (var _f = true, response_1 = (e_1 = void 0, __asyncValues(response)), response_1_1; response_1_1 = yield __await(response_1.next()), _c = response_1_1.done, !_c; _f = true) {\n                            _e = response_1_1.value;\n                            _f = false;\n                            const chunk = _e;\n                            yield yield __await(chunk);\n                            if (chunk.candidates && ((_a = chunk.candidates[0]) === null || _a === void 0 ? void 0 : _a.content)) {\n                                responseContents.push(chunk.candidates[0].content);\n                                for (const part of (_b = chunk.candidates[0].content.parts) !== null && _b !== void 0 ? _b : []) {\n                                    if (remoteCallCount < maxRemoteCalls && part.functionCall) {\n                                        if (!part.functionCall.name) {\n                                            throw new Error('Function call name was not returned by the model.');\n                                        }\n                                        if (!afcTools.has(part.functionCall.name)) {\n                                            throw new Error(`Automatic function calling was requested, but not all the tools the model used implement the CallableTool interface. Available tools: ${afcTools.keys()}, mising tool: ${part.functionCall.name}`);\n                                        }\n                                        else {\n                                            const responseParts = yield __await(afcTools\n                                                .get(part.functionCall.name)\n                                                .callTool([part.functionCall]));\n                                            functionResponses.push(...responseParts);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_f && !_c && (_d = response_1.return)) yield __await(_d.call(response_1));\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    if (functionResponses.length > 0) {\n                        wereFunctionsCalled = true;\n                        const typedResponseChunk = new GenerateContentResponse();\n                        typedResponseChunk.candidates = [\n                            {\n                                content: {\n                                    role: 'user',\n                                    parts: functionResponses,\n                                },\n                            },\n                        ];\n                        yield yield __await(typedResponseChunk);\n                        const newContents = [];\n                        newContents.push(...responseContents);\n                        newContents.push({\n                            role: 'user',\n                            parts: functionResponses,\n                        });\n                        const updatedContents = tContents(params.contents).concat(newContents);\n                        params.contents = updatedContents;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            });\n        })(this, afcToolsMap, params);\n    }\n    async generateContentInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = generateContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:generateContent', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateContentResponseFromVertex(apiResponse);\n                const typedResp = new GenerateContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = generateContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:generateContent', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateContentResponseFromMldev(apiResponse);\n                const typedResp = new GenerateContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    async generateContentStreamInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = generateContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:streamGenerateContent?alt=sse', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            const apiClient = this.apiClient;\n            response = apiClient.requestStream({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            });\n            return response.then(function (apiResponse) {\n                return __asyncGenerator(this, arguments, function* () {\n                    var _a, e_2, _b, _c;\n                    try {\n                        for (var _d = true, apiResponse_1 = __asyncValues(apiResponse), apiResponse_1_1; apiResponse_1_1 = yield __await(apiResponse_1.next()), _a = apiResponse_1_1.done, !_a; _d = true) {\n                            _c = apiResponse_1_1.value;\n                            _d = false;\n                            const chunk = _c;\n                            const resp = generateContentResponseFromVertex((yield __await(chunk.json())));\n                            const typedResp = new GenerateContentResponse();\n                            Object.assign(typedResp, resp);\n                            yield yield __await(typedResp);\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = apiResponse_1.return)) yield __await(_b.call(apiResponse_1));\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                });\n            });\n        }\n        else {\n            const body = generateContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:streamGenerateContent?alt=sse', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            const apiClient = this.apiClient;\n            response = apiClient.requestStream({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            });\n            return response.then(function (apiResponse) {\n                return __asyncGenerator(this, arguments, function* () {\n                    var _a, e_3, _b, _c;\n                    try {\n                        for (var _d = true, apiResponse_2 = __asyncValues(apiResponse), apiResponse_2_1; apiResponse_2_1 = yield __await(apiResponse_2.next()), _a = apiResponse_2_1.done, !_a; _d = true) {\n                            _c = apiResponse_2_1.value;\n                            _d = false;\n                            const chunk = _c;\n                            const resp = generateContentResponseFromMldev((yield __await(chunk.json())));\n                            const typedResp = new GenerateContentResponse();\n                            Object.assign(typedResp, resp);\n                            yield yield __await(typedResp);\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = apiResponse_2.return)) yield __await(_b.call(apiResponse_2));\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Calculates embeddings for the given contents. Only text is supported.\n     *\n     * @param params - The parameters for embedding contents.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.embedContent({\n     *  model: 'text-embedding-004',\n     *  contents: [\n     *    'What is your name?',\n     *    'What is your favorite color?',\n     *  ],\n     *  config: {\n     *    outputDimensionality: 64,\n     *  },\n     * });\n     * console.log(response);\n     * ```\n     */\n    async embedContent(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = embedContentParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:predict', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = embedContentResponseFromVertex(apiResponse);\n                const typedResp = new EmbedContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = embedContentParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:batchEmbedContents', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = embedContentResponseFromMldev(apiResponse);\n                const typedResp = new EmbedContentResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Generates an image based on a text description and configuration.\n     *\n     * @param params - The parameters for generating images.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.generateImages({\n     *  model: 'imagen-3.0-generate-002',\n     *  prompt: 'Robot holding a red skateboard',\n     *  config: {\n     *    numberOfImages: 1,\n     *    includeRaiReason: true,\n     *  },\n     * });\n     * console.log(response?.generatedImages?.[0]?.image?.imageBytes);\n     * ```\n     */\n    async generateImagesInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = generateImagesParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:predict', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateImagesResponseFromVertex(apiResponse);\n                const typedResp = new GenerateImagesResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = generateImagesParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:predict', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateImagesResponseFromMldev(apiResponse);\n                const typedResp = new GenerateImagesResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    async editImageInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = editImageParametersInternalToVertex(this.apiClient, params);\n            path = formatMap('{model}:predict', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = editImageResponseFromVertex(apiResponse);\n                const typedResp = new EditImageResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            throw new Error('This method is only supported by the Vertex AI.');\n        }\n    }\n    async upscaleImageInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = upscaleImageAPIParametersInternalToVertex(this.apiClient, params);\n            path = formatMap('{model}:predict', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = upscaleImageResponseFromVertex(apiResponse);\n                const typedResp = new UpscaleImageResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            throw new Error('This method is only supported by the Vertex AI.');\n        }\n    }\n    /**\n     * Fetches information about a model by name.\n     *\n     * @example\n     * ```ts\n     * const modelInfo = await ai.models.get({model: 'gemini-2.0-flash'});\n     * ```\n     */\n    async get(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = getModelParametersToVertex(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = modelFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = getModelParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = modelFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    async listInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = listModelsParametersToVertex(this.apiClient, params);\n            path = formatMap('{models_url}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listModelsResponseFromVertex(this.apiClient, apiResponse);\n                const typedResp = new ListModelsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = listModelsParametersToMldev(this.apiClient, params);\n            path = formatMap('{models_url}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listModelsResponseFromMldev(this.apiClient, apiResponse);\n                const typedResp = new ListModelsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Updates a tuned model by its name.\n     *\n     * @param params - The parameters for updating the model.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.update({\n     *   model: 'tuned-model-name',\n     *   config: {\n     *     displayName: 'New display name',\n     *     description: 'New description',\n     *   },\n     * });\n     * ```\n     */\n    async update(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = updateModelParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'PATCH',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = modelFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = updateModelParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'PATCH',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = modelFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    /**\n     * Deletes a tuned model by its name.\n     *\n     * @param params - The parameters for deleting the model.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.delete({model: 'tuned-model-name'});\n     * ```\n     */\n    async delete(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = deleteModelParametersToVertex(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'DELETE',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = deleteModelResponseFromVertex();\n                const typedResp = new DeleteModelResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = deleteModelParametersToMldev(this.apiClient, params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'DELETE',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then(() => {\n                const resp = deleteModelResponseFromMldev();\n                const typedResp = new DeleteModelResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Counts the number of tokens in the given contents. Multimodal input is\n     * supported for Gemini models.\n     *\n     * @param params - The parameters for counting tokens.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.countTokens({\n     *  model: 'gemini-2.0-flash',\n     *  contents: 'The quick brown fox jumps over the lazy dog.'\n     * });\n     * console.log(response);\n     * ```\n     */\n    async countTokens(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = countTokensParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:countTokens', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = countTokensResponseFromVertex(apiResponse);\n                const typedResp = new CountTokensResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = countTokensParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:countTokens', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = countTokensResponseFromMldev(apiResponse);\n                const typedResp = new CountTokensResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    /**\n     * Given a list of contents, returns a corresponding TokensInfo containing\n     * the list of tokens and list of token ids.\n     *\n     * This method is not supported by the Gemini Developer API.\n     *\n     * @param params - The parameters for computing tokens.\n     * @return The response from the API.\n     *\n     * @example\n     * ```ts\n     * const response = await ai.models.computeTokens({\n     *  model: 'gemini-2.0-flash',\n     *  contents: 'What is your name?'\n     * });\n     * console.log(response);\n     * ```\n     */\n    async computeTokens(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = computeTokensParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:computeTokens', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = computeTokensResponseFromVertex(apiResponse);\n                const typedResp = new ComputeTokensResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            throw new Error('This method is only supported by the Vertex AI.');\n        }\n    }\n    /**\n     *  Generates videos based on a text description and configuration.\n     *\n     * @param params - The parameters for generating videos.\n     * @return A Promise<GenerateVideosOperation> which allows you to track the progress and eventually retrieve the generated videos using the operations.get method.\n     *\n     * @example\n     * ```ts\n     * const operation = await ai.models.generateVideos({\n     *  model: 'veo-2.0-generate-001',\n     *  prompt: 'A neon hologram of a cat driving at top speed',\n     *  config: {\n     *    numberOfVideos: 1\n     * });\n     *\n     * while (!operation.done) {\n     *   await new Promise(resolve => setTimeout(resolve, 10000));\n     *   operation = await ai.operations.getVideosOperation({operation: operation});\n     * }\n     *\n     * console.log(operation.response?.generatedVideos?.[0]?.video?.uri);\n     * ```\n     */\n    async generateVideos(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = generateVideosParametersToVertex(this.apiClient, params);\n            path = formatMap('{model}:predictLongRunning', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromVertex$1(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = generateVideosParametersToMldev(this.apiClient, params);\n            path = formatMap('{model}:predictLongRunning', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromMldev$1(apiResponse);\n                return resp;\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\nfunction getOperationParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromOperationName = getValueByPath(fromObject, [\n        'operationName',\n    ]);\n    if (fromOperationName != null) {\n        setValueByPath(toObject, ['_url', 'operationName'], fromOperationName);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction getOperationParametersToVertex(fromObject) {\n    const toObject = {};\n    const fromOperationName = getValueByPath(fromObject, [\n        'operationName',\n    ]);\n    if (fromOperationName != null) {\n        setValueByPath(toObject, ['_url', 'operationName'], fromOperationName);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction fetchPredictOperationParametersToVertex(fromObject) {\n    const toObject = {};\n    const fromOperationName = getValueByPath(fromObject, [\n        'operationName',\n    ]);\n    if (fromOperationName != null) {\n        setValueByPath(toObject, ['operationName'], fromOperationName);\n    }\n    const fromResourceName = getValueByPath(fromObject, ['resourceName']);\n    if (fromResourceName != null) {\n        setValueByPath(toObject, ['_url', 'resourceName'], fromResourceName);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction videoFromMldev(fromObject) {\n    const toObject = {};\n    const fromUri = getValueByPath(fromObject, ['video', 'uri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromVideoBytes = getValueByPath(fromObject, [\n        'video',\n        'encodedVideo',\n    ]);\n    if (fromVideoBytes != null) {\n        setValueByPath(toObject, ['videoBytes'], tBytes(fromVideoBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['encoding']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generatedVideoFromMldev(fromObject) {\n    const toObject = {};\n    const fromVideo = getValueByPath(fromObject, ['_self']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['video'], videoFromMldev(fromVideo));\n    }\n    return toObject;\n}\nfunction generateVideosResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromGeneratedVideos = getValueByPath(fromObject, [\n        'generatedSamples',\n    ]);\n    if (fromGeneratedVideos != null) {\n        let transformedList = fromGeneratedVideos;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return generatedVideoFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['generatedVideos'], transformedList);\n    }\n    const fromRaiMediaFilteredCount = getValueByPath(fromObject, [\n        'raiMediaFilteredCount',\n    ]);\n    if (fromRaiMediaFilteredCount != null) {\n        setValueByPath(toObject, ['raiMediaFilteredCount'], fromRaiMediaFilteredCount);\n    }\n    const fromRaiMediaFilteredReasons = getValueByPath(fromObject, [\n        'raiMediaFilteredReasons',\n    ]);\n    if (fromRaiMediaFilteredReasons != null) {\n        setValueByPath(toObject, ['raiMediaFilteredReasons'], fromRaiMediaFilteredReasons);\n    }\n    return toObject;\n}\nfunction generateVideosOperationFromMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], fromMetadata);\n    }\n    const fromDone = getValueByPath(fromObject, ['done']);\n    if (fromDone != null) {\n        setValueByPath(toObject, ['done'], fromDone);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    const fromResponse = getValueByPath(fromObject, [\n        'response',\n        'generateVideoResponse',\n    ]);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], generateVideosResponseFromMldev(fromResponse));\n    }\n    return toObject;\n}\nfunction videoFromVertex(fromObject) {\n    const toObject = {};\n    const fromUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromUri != null) {\n        setValueByPath(toObject, ['uri'], fromUri);\n    }\n    const fromVideoBytes = getValueByPath(fromObject, [\n        'bytesBase64Encoded',\n    ]);\n    if (fromVideoBytes != null) {\n        setValueByPath(toObject, ['videoBytes'], tBytes(fromVideoBytes));\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction generatedVideoFromVertex(fromObject) {\n    const toObject = {};\n    const fromVideo = getValueByPath(fromObject, ['_self']);\n    if (fromVideo != null) {\n        setValueByPath(toObject, ['video'], videoFromVertex(fromVideo));\n    }\n    return toObject;\n}\nfunction generateVideosResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromGeneratedVideos = getValueByPath(fromObject, ['videos']);\n    if (fromGeneratedVideos != null) {\n        let transformedList = fromGeneratedVideos;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return generatedVideoFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['generatedVideos'], transformedList);\n    }\n    const fromRaiMediaFilteredCount = getValueByPath(fromObject, [\n        'raiMediaFilteredCount',\n    ]);\n    if (fromRaiMediaFilteredCount != null) {\n        setValueByPath(toObject, ['raiMediaFilteredCount'], fromRaiMediaFilteredCount);\n    }\n    const fromRaiMediaFilteredReasons = getValueByPath(fromObject, [\n        'raiMediaFilteredReasons',\n    ]);\n    if (fromRaiMediaFilteredReasons != null) {\n        setValueByPath(toObject, ['raiMediaFilteredReasons'], fromRaiMediaFilteredReasons);\n    }\n    return toObject;\n}\nfunction generateVideosOperationFromVertex(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], fromMetadata);\n    }\n    const fromDone = getValueByPath(fromObject, ['done']);\n    if (fromDone != null) {\n        setValueByPath(toObject, ['done'], fromDone);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], generateVideosResponseFromVertex(fromResponse));\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Operations extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n    }\n    /**\n     * Gets the status of a long-running operation.\n     *\n     * @param parameters The parameters for the get operation request.\n     * @return The updated Operation object, with the latest status or result.\n     */\n    async getVideosOperation(parameters) {\n        const operation = parameters.operation;\n        const config = parameters.config;\n        if (operation.name === undefined || operation.name === '') {\n            throw new Error('Operation name is required.');\n        }\n        if (this.apiClient.isVertexAI()) {\n            const resourceName = operation.name.split('/operations/')[0];\n            let httpOptions = undefined;\n            if (config && 'httpOptions' in config) {\n                httpOptions = config.httpOptions;\n            }\n            return this.fetchPredictVideosOperationInternal({\n                operationName: operation.name,\n                resourceName: resourceName,\n                config: { httpOptions: httpOptions },\n            });\n        }\n        else {\n            return this.getVideosOperationInternal({\n                operationName: operation.name,\n                config: config,\n            });\n        }\n    }\n    async getVideosOperationInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = getOperationParametersToVertex(params);\n            path = formatMap('{operationName}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = getOperationParametersToMldev(params);\n            path = formatMap('{operationName}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    async fetchPredictVideosOperationInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = fetchPredictOperationParametersToVertex(params);\n            path = formatMap('{resourceName}:fetchPredictOperation', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = generateVideosOperationFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            throw new Error('This method is only supported by the Vertex AI.');\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction prebuiltVoiceConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromVoiceName = getValueByPath(fromObject, ['voiceName']);\n    if (fromVoiceName != null) {\n        setValueByPath(toObject, ['voiceName'], fromVoiceName);\n    }\n    return toObject;\n}\nfunction voiceConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromPrebuiltVoiceConfig = getValueByPath(fromObject, [\n        'prebuiltVoiceConfig',\n    ]);\n    if (fromPrebuiltVoiceConfig != null) {\n        setValueByPath(toObject, ['prebuiltVoiceConfig'], prebuiltVoiceConfigToMldev(fromPrebuiltVoiceConfig));\n    }\n    return toObject;\n}\nfunction speakerVoiceConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromSpeaker = getValueByPath(fromObject, ['speaker']);\n    if (fromSpeaker != null) {\n        setValueByPath(toObject, ['speaker'], fromSpeaker);\n    }\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToMldev(fromVoiceConfig));\n    }\n    return toObject;\n}\nfunction multiSpeakerVoiceConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromSpeakerVoiceConfigs = getValueByPath(fromObject, [\n        'speakerVoiceConfigs',\n    ]);\n    if (fromSpeakerVoiceConfigs != null) {\n        let transformedList = fromSpeakerVoiceConfigs;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return speakerVoiceConfigToMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['speakerVoiceConfigs'], transformedList);\n    }\n    return toObject;\n}\nfunction speechConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromVoiceConfig = getValueByPath(fromObject, ['voiceConfig']);\n    if (fromVoiceConfig != null) {\n        setValueByPath(toObject, ['voiceConfig'], voiceConfigToMldev(fromVoiceConfig));\n    }\n    const fromMultiSpeakerVoiceConfig = getValueByPath(fromObject, [\n        'multiSpeakerVoiceConfig',\n    ]);\n    if (fromMultiSpeakerVoiceConfig != null) {\n        setValueByPath(toObject, ['multiSpeakerVoiceConfig'], multiSpeakerVoiceConfigToMldev(fromMultiSpeakerVoiceConfig));\n    }\n    const fromLanguageCode = getValueByPath(fromObject, ['languageCode']);\n    if (fromLanguageCode != null) {\n        setValueByPath(toObject, ['languageCode'], fromLanguageCode);\n    }\n    return toObject;\n}\nfunction videoMetadataToMldev(fromObject) {\n    const toObject = {};\n    const fromFps = getValueByPath(fromObject, ['fps']);\n    if (fromFps != null) {\n        setValueByPath(toObject, ['fps'], fromFps);\n    }\n    const fromEndOffset = getValueByPath(fromObject, ['endOffset']);\n    if (fromEndOffset != null) {\n        setValueByPath(toObject, ['endOffset'], fromEndOffset);\n    }\n    const fromStartOffset = getValueByPath(fromObject, ['startOffset']);\n    if (fromStartOffset != null) {\n        setValueByPath(toObject, ['startOffset'], fromStartOffset);\n    }\n    return toObject;\n}\nfunction blobToMldev(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromData = getValueByPath(fromObject, ['data']);\n    if (fromData != null) {\n        setValueByPath(toObject, ['data'], fromData);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction fileDataToMldev(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['displayName']) !== undefined) {\n        throw new Error('displayName parameter is not supported in Gemini API.');\n    }\n    const fromFileUri = getValueByPath(fromObject, ['fileUri']);\n    if (fromFileUri != null) {\n        setValueByPath(toObject, ['fileUri'], fromFileUri);\n    }\n    const fromMimeType = getValueByPath(fromObject, ['mimeType']);\n    if (fromMimeType != null) {\n        setValueByPath(toObject, ['mimeType'], fromMimeType);\n    }\n    return toObject;\n}\nfunction partToMldev(fromObject) {\n    const toObject = {};\n    const fromVideoMetadata = getValueByPath(fromObject, [\n        'videoMetadata',\n    ]);\n    if (fromVideoMetadata != null) {\n        setValueByPath(toObject, ['videoMetadata'], videoMetadataToMldev(fromVideoMetadata));\n    }\n    const fromThought = getValueByPath(fromObject, ['thought']);\n    if (fromThought != null) {\n        setValueByPath(toObject, ['thought'], fromThought);\n    }\n    const fromInlineData = getValueByPath(fromObject, ['inlineData']);\n    if (fromInlineData != null) {\n        setValueByPath(toObject, ['inlineData'], blobToMldev(fromInlineData));\n    }\n    const fromFileData = getValueByPath(fromObject, ['fileData']);\n    if (fromFileData != null) {\n        setValueByPath(toObject, ['fileData'], fileDataToMldev(fromFileData));\n    }\n    const fromThoughtSignature = getValueByPath(fromObject, [\n        'thoughtSignature',\n    ]);\n    if (fromThoughtSignature != null) {\n        setValueByPath(toObject, ['thoughtSignature'], fromThoughtSignature);\n    }\n    const fromCodeExecutionResult = getValueByPath(fromObject, [\n        'codeExecutionResult',\n    ]);\n    if (fromCodeExecutionResult != null) {\n        setValueByPath(toObject, ['codeExecutionResult'], fromCodeExecutionResult);\n    }\n    const fromExecutableCode = getValueByPath(fromObject, [\n        'executableCode',\n    ]);\n    if (fromExecutableCode != null) {\n        setValueByPath(toObject, ['executableCode'], fromExecutableCode);\n    }\n    const fromFunctionCall = getValueByPath(fromObject, ['functionCall']);\n    if (fromFunctionCall != null) {\n        setValueByPath(toObject, ['functionCall'], fromFunctionCall);\n    }\n    const fromFunctionResponse = getValueByPath(fromObject, [\n        'functionResponse',\n    ]);\n    if (fromFunctionResponse != null) {\n        setValueByPath(toObject, ['functionResponse'], fromFunctionResponse);\n    }\n    const fromText = getValueByPath(fromObject, ['text']);\n    if (fromText != null) {\n        setValueByPath(toObject, ['text'], fromText);\n    }\n    return toObject;\n}\nfunction contentToMldev(fromObject) {\n    const toObject = {};\n    const fromParts = getValueByPath(fromObject, ['parts']);\n    if (fromParts != null) {\n        let transformedList = fromParts;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return partToMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['parts'], transformedList);\n    }\n    const fromRole = getValueByPath(fromObject, ['role']);\n    if (fromRole != null) {\n        setValueByPath(toObject, ['role'], fromRole);\n    }\n    return toObject;\n}\nfunction functionDeclarationToMldev(fromObject) {\n    const toObject = {};\n    const fromBehavior = getValueByPath(fromObject, ['behavior']);\n    if (fromBehavior != null) {\n        setValueByPath(toObject, ['behavior'], fromBehavior);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromParameters = getValueByPath(fromObject, ['parameters']);\n    if (fromParameters != null) {\n        setValueByPath(toObject, ['parameters'], fromParameters);\n    }\n    const fromParametersJsonSchema = getValueByPath(fromObject, [\n        'parametersJsonSchema',\n    ]);\n    if (fromParametersJsonSchema != null) {\n        setValueByPath(toObject, ['parametersJsonSchema'], fromParametersJsonSchema);\n    }\n    const fromResponse = getValueByPath(fromObject, ['response']);\n    if (fromResponse != null) {\n        setValueByPath(toObject, ['response'], fromResponse);\n    }\n    const fromResponseJsonSchema = getValueByPath(fromObject, [\n        'responseJsonSchema',\n    ]);\n    if (fromResponseJsonSchema != null) {\n        setValueByPath(toObject, ['responseJsonSchema'], fromResponseJsonSchema);\n    }\n    return toObject;\n}\nfunction intervalToMldev(fromObject) {\n    const toObject = {};\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    return toObject;\n}\nfunction googleSearchToMldev(fromObject) {\n    const toObject = {};\n    const fromTimeRangeFilter = getValueByPath(fromObject, [\n        'timeRangeFilter',\n    ]);\n    if (fromTimeRangeFilter != null) {\n        setValueByPath(toObject, ['timeRangeFilter'], intervalToMldev(fromTimeRangeFilter));\n    }\n    return toObject;\n}\nfunction dynamicRetrievalConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromMode = getValueByPath(fromObject, ['mode']);\n    if (fromMode != null) {\n        setValueByPath(toObject, ['mode'], fromMode);\n    }\n    const fromDynamicThreshold = getValueByPath(fromObject, [\n        'dynamicThreshold',\n    ]);\n    if (fromDynamicThreshold != null) {\n        setValueByPath(toObject, ['dynamicThreshold'], fromDynamicThreshold);\n    }\n    return toObject;\n}\nfunction googleSearchRetrievalToMldev(fromObject) {\n    const toObject = {};\n    const fromDynamicRetrievalConfig = getValueByPath(fromObject, [\n        'dynamicRetrievalConfig',\n    ]);\n    if (fromDynamicRetrievalConfig != null) {\n        setValueByPath(toObject, ['dynamicRetrievalConfig'], dynamicRetrievalConfigToMldev(fromDynamicRetrievalConfig));\n    }\n    return toObject;\n}\nfunction urlContextToMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction toolToMldev(fromObject) {\n    const toObject = {};\n    const fromFunctionDeclarations = getValueByPath(fromObject, [\n        'functionDeclarations',\n    ]);\n    if (fromFunctionDeclarations != null) {\n        let transformedList = fromFunctionDeclarations;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return functionDeclarationToMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['functionDeclarations'], transformedList);\n    }\n    if (getValueByPath(fromObject, ['retrieval']) !== undefined) {\n        throw new Error('retrieval parameter is not supported in Gemini API.');\n    }\n    const fromGoogleSearch = getValueByPath(fromObject, ['googleSearch']);\n    if (fromGoogleSearch != null) {\n        setValueByPath(toObject, ['googleSearch'], googleSearchToMldev(fromGoogleSearch));\n    }\n    const fromGoogleSearchRetrieval = getValueByPath(fromObject, [\n        'googleSearchRetrieval',\n    ]);\n    if (fromGoogleSearchRetrieval != null) {\n        setValueByPath(toObject, ['googleSearchRetrieval'], googleSearchRetrievalToMldev(fromGoogleSearchRetrieval));\n    }\n    if (getValueByPath(fromObject, ['enterpriseWebSearch']) !== undefined) {\n        throw new Error('enterpriseWebSearch parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['googleMaps']) !== undefined) {\n        throw new Error('googleMaps parameter is not supported in Gemini API.');\n    }\n    const fromUrlContext = getValueByPath(fromObject, ['urlContext']);\n    if (fromUrlContext != null) {\n        setValueByPath(toObject, ['urlContext'], urlContextToMldev());\n    }\n    const fromCodeExecution = getValueByPath(fromObject, [\n        'codeExecution',\n    ]);\n    if (fromCodeExecution != null) {\n        setValueByPath(toObject, ['codeExecution'], fromCodeExecution);\n    }\n    return toObject;\n}\nfunction sessionResumptionConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromHandle = getValueByPath(fromObject, ['handle']);\n    if (fromHandle != null) {\n        setValueByPath(toObject, ['handle'], fromHandle);\n    }\n    if (getValueByPath(fromObject, ['transparent']) !== undefined) {\n        throw new Error('transparent parameter is not supported in Gemini API.');\n    }\n    return toObject;\n}\nfunction audioTranscriptionConfigToMldev() {\n    const toObject = {};\n    return toObject;\n}\nfunction automaticActivityDetectionToMldev(fromObject) {\n    const toObject = {};\n    const fromDisabled = getValueByPath(fromObject, ['disabled']);\n    if (fromDisabled != null) {\n        setValueByPath(toObject, ['disabled'], fromDisabled);\n    }\n    const fromStartOfSpeechSensitivity = getValueByPath(fromObject, [\n        'startOfSpeechSensitivity',\n    ]);\n    if (fromStartOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['startOfSpeechSensitivity'], fromStartOfSpeechSensitivity);\n    }\n    const fromEndOfSpeechSensitivity = getValueByPath(fromObject, [\n        'endOfSpeechSensitivity',\n    ]);\n    if (fromEndOfSpeechSensitivity != null) {\n        setValueByPath(toObject, ['endOfSpeechSensitivity'], fromEndOfSpeechSensitivity);\n    }\n    const fromPrefixPaddingMs = getValueByPath(fromObject, [\n        'prefixPaddingMs',\n    ]);\n    if (fromPrefixPaddingMs != null) {\n        setValueByPath(toObject, ['prefixPaddingMs'], fromPrefixPaddingMs);\n    }\n    const fromSilenceDurationMs = getValueByPath(fromObject, [\n        'silenceDurationMs',\n    ]);\n    if (fromSilenceDurationMs != null) {\n        setValueByPath(toObject, ['silenceDurationMs'], fromSilenceDurationMs);\n    }\n    return toObject;\n}\nfunction realtimeInputConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromAutomaticActivityDetection = getValueByPath(fromObject, [\n        'automaticActivityDetection',\n    ]);\n    if (fromAutomaticActivityDetection != null) {\n        setValueByPath(toObject, ['automaticActivityDetection'], automaticActivityDetectionToMldev(fromAutomaticActivityDetection));\n    }\n    const fromActivityHandling = getValueByPath(fromObject, [\n        'activityHandling',\n    ]);\n    if (fromActivityHandling != null) {\n        setValueByPath(toObject, ['activityHandling'], fromActivityHandling);\n    }\n    const fromTurnCoverage = getValueByPath(fromObject, ['turnCoverage']);\n    if (fromTurnCoverage != null) {\n        setValueByPath(toObject, ['turnCoverage'], fromTurnCoverage);\n    }\n    return toObject;\n}\nfunction slidingWindowToMldev(fromObject) {\n    const toObject = {};\n    const fromTargetTokens = getValueByPath(fromObject, ['targetTokens']);\n    if (fromTargetTokens != null) {\n        setValueByPath(toObject, ['targetTokens'], fromTargetTokens);\n    }\n    return toObject;\n}\nfunction contextWindowCompressionConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromTriggerTokens = getValueByPath(fromObject, [\n        'triggerTokens',\n    ]);\n    if (fromTriggerTokens != null) {\n        setValueByPath(toObject, ['triggerTokens'], fromTriggerTokens);\n    }\n    const fromSlidingWindow = getValueByPath(fromObject, [\n        'slidingWindow',\n    ]);\n    if (fromSlidingWindow != null) {\n        setValueByPath(toObject, ['slidingWindow'], slidingWindowToMldev(fromSlidingWindow));\n    }\n    return toObject;\n}\nfunction proactivityConfigToMldev(fromObject) {\n    const toObject = {};\n    const fromProactiveAudio = getValueByPath(fromObject, [\n        'proactiveAudio',\n    ]);\n    if (fromProactiveAudio != null) {\n        setValueByPath(toObject, ['proactiveAudio'], fromProactiveAudio);\n    }\n    return toObject;\n}\nfunction liveConnectConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromGenerationConfig = getValueByPath(fromObject, [\n        'generationConfig',\n    ]);\n    if (parentObject !== undefined && fromGenerationConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig'], fromGenerationConfig);\n    }\n    const fromResponseModalities = getValueByPath(fromObject, [\n        'responseModalities',\n    ]);\n    if (parentObject !== undefined && fromResponseModalities != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'responseModalities'], fromResponseModalities);\n    }\n    const fromTemperature = getValueByPath(fromObject, ['temperature']);\n    if (parentObject !== undefined && fromTemperature != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'temperature'], fromTemperature);\n    }\n    const fromTopP = getValueByPath(fromObject, ['topP']);\n    if (parentObject !== undefined && fromTopP != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topP'], fromTopP);\n    }\n    const fromTopK = getValueByPath(fromObject, ['topK']);\n    if (parentObject !== undefined && fromTopK != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'topK'], fromTopK);\n    }\n    const fromMaxOutputTokens = getValueByPath(fromObject, [\n        'maxOutputTokens',\n    ]);\n    if (parentObject !== undefined && fromMaxOutputTokens != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'maxOutputTokens'], fromMaxOutputTokens);\n    }\n    const fromMediaResolution = getValueByPath(fromObject, [\n        'mediaResolution',\n    ]);\n    if (parentObject !== undefined && fromMediaResolution != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'mediaResolution'], fromMediaResolution);\n    }\n    const fromSeed = getValueByPath(fromObject, ['seed']);\n    if (parentObject !== undefined && fromSeed != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'seed'], fromSeed);\n    }\n    const fromSpeechConfig = getValueByPath(fromObject, ['speechConfig']);\n    if (parentObject !== undefined && fromSpeechConfig != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'speechConfig'], speechConfigToMldev(tLiveSpeechConfig(fromSpeechConfig)));\n    }\n    const fromEnableAffectiveDialog = getValueByPath(fromObject, [\n        'enableAffectiveDialog',\n    ]);\n    if (parentObject !== undefined && fromEnableAffectiveDialog != null) {\n        setValueByPath(parentObject, ['setup', 'generationConfig', 'enableAffectiveDialog'], fromEnableAffectiveDialog);\n    }\n    const fromSystemInstruction = getValueByPath(fromObject, [\n        'systemInstruction',\n    ]);\n    if (parentObject !== undefined && fromSystemInstruction != null) {\n        setValueByPath(parentObject, ['setup', 'systemInstruction'], contentToMldev(tContent(fromSystemInstruction)));\n    }\n    const fromTools = getValueByPath(fromObject, ['tools']);\n    if (parentObject !== undefined && fromTools != null) {\n        let transformedList = tTools(fromTools);\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return toolToMldev(tTool(item));\n            });\n        }\n        setValueByPath(parentObject, ['setup', 'tools'], transformedList);\n    }\n    const fromSessionResumption = getValueByPath(fromObject, [\n        'sessionResumption',\n    ]);\n    if (parentObject !== undefined && fromSessionResumption != null) {\n        setValueByPath(parentObject, ['setup', 'sessionResumption'], sessionResumptionConfigToMldev(fromSessionResumption));\n    }\n    const fromInputAudioTranscription = getValueByPath(fromObject, [\n        'inputAudioTranscription',\n    ]);\n    if (parentObject !== undefined && fromInputAudioTranscription != null) {\n        setValueByPath(parentObject, ['setup', 'inputAudioTranscription'], audioTranscriptionConfigToMldev());\n    }\n    const fromOutputAudioTranscription = getValueByPath(fromObject, [\n        'outputAudioTranscription',\n    ]);\n    if (parentObject !== undefined && fromOutputAudioTranscription != null) {\n        setValueByPath(parentObject, ['setup', 'outputAudioTranscription'], audioTranscriptionConfigToMldev());\n    }\n    const fromRealtimeInputConfig = getValueByPath(fromObject, [\n        'realtimeInputConfig',\n    ]);\n    if (parentObject !== undefined && fromRealtimeInputConfig != null) {\n        setValueByPath(parentObject, ['setup', 'realtimeInputConfig'], realtimeInputConfigToMldev(fromRealtimeInputConfig));\n    }\n    const fromContextWindowCompression = getValueByPath(fromObject, [\n        'contextWindowCompression',\n    ]);\n    if (parentObject !== undefined && fromContextWindowCompression != null) {\n        setValueByPath(parentObject, ['setup', 'contextWindowCompression'], contextWindowCompressionConfigToMldev(fromContextWindowCompression));\n    }\n    const fromProactivity = getValueByPath(fromObject, ['proactivity']);\n    if (parentObject !== undefined && fromProactivity != null) {\n        setValueByPath(parentObject, ['setup', 'proactivity'], proactivityConfigToMldev(fromProactivity));\n    }\n    return toObject;\n}\nfunction liveConnectConstraintsToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['setup', 'model'], tModel(apiClient, fromModel));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], liveConnectConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction createAuthTokenConfigToMldev(apiClient, fromObject, parentObject) {\n    const toObject = {};\n    const fromExpireTime = getValueByPath(fromObject, ['expireTime']);\n    if (parentObject !== undefined && fromExpireTime != null) {\n        setValueByPath(parentObject, ['expireTime'], fromExpireTime);\n    }\n    const fromNewSessionExpireTime = getValueByPath(fromObject, [\n        'newSessionExpireTime',\n    ]);\n    if (parentObject !== undefined && fromNewSessionExpireTime != null) {\n        setValueByPath(parentObject, ['newSessionExpireTime'], fromNewSessionExpireTime);\n    }\n    const fromUses = getValueByPath(fromObject, ['uses']);\n    if (parentObject !== undefined && fromUses != null) {\n        setValueByPath(parentObject, ['uses'], fromUses);\n    }\n    const fromLiveConnectConstraints = getValueByPath(fromObject, [\n        'liveConnectConstraints',\n    ]);\n    if (parentObject !== undefined && fromLiveConnectConstraints != null) {\n        setValueByPath(parentObject, ['bidiGenerateContentSetup'], liveConnectConstraintsToMldev(apiClient, fromLiveConnectConstraints));\n    }\n    const fromLockAdditionalFields = getValueByPath(fromObject, [\n        'lockAdditionalFields',\n    ]);\n    if (parentObject !== undefined && fromLockAdditionalFields != null) {\n        setValueByPath(parentObject, ['fieldMask'], fromLockAdditionalFields);\n    }\n    return toObject;\n}\nfunction createAuthTokenParametersToMldev(apiClient, fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], createAuthTokenConfigToMldev(apiClient, fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction authTokenFromMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * Returns a comma-separated list of field masks from a given object.\n *\n * @param setup The object to extract field masks from.\n * @return A comma-separated list of field masks.\n */\nfunction getFieldMasks(setup) {\n    const fields = [];\n    for (const key in setup) {\n        if (Object.prototype.hasOwnProperty.call(setup, key)) {\n            const value = setup[key];\n            // 2nd layer, recursively get field masks see TODO(b/418290100)\n            if (typeof value === 'object' &&\n                value != null &&\n                Object.keys(value).length > 0) {\n                const field = Object.keys(value).map((kk) => `${key}.${kk}`);\n                fields.push(...field);\n            }\n            else {\n                fields.push(key); // 1st layer\n            }\n        }\n    }\n    return fields.join(',');\n}\n/**\n * Converts bidiGenerateContentSetup.\n * @param requestDict - The request dictionary.\n * @param config - The configuration object.\n * @return - The modified request dictionary.\n */\nfunction convertBidiSetupToTokenSetup(requestDict, config) {\n    // Convert bidiGenerateContentSetup from bidiGenerateContentSetup.setup.\n    let setupForMaskGeneration = null;\n    const bidiGenerateContentSetupValue = requestDict['bidiGenerateContentSetup'];\n    if (typeof bidiGenerateContentSetupValue === 'object' &&\n        bidiGenerateContentSetupValue !== null &&\n        'setup' in bidiGenerateContentSetupValue) {\n        // Now we know bidiGenerateContentSetupValue is an object and has a 'setup'\n        // property.\n        const innerSetup = bidiGenerateContentSetupValue\n            .setup;\n        if (typeof innerSetup === 'object' && innerSetup !== null) {\n            // Valid inner setup found.\n            requestDict['bidiGenerateContentSetup'] = innerSetup;\n            setupForMaskGeneration = innerSetup;\n        }\n        else {\n            // `bidiGenerateContentSetupValue.setup` is not a valid object; treat as\n            // if bidiGenerateContentSetup is invalid.\n            delete requestDict['bidiGenerateContentSetup'];\n        }\n    }\n    else if (bidiGenerateContentSetupValue !== undefined) {\n        // `bidiGenerateContentSetup` exists but not in the expected\n        // shape {setup: {...}}; treat as invalid.\n        delete requestDict['bidiGenerateContentSetup'];\n    }\n    const preExistingFieldMask = requestDict['fieldMask'];\n    // Handle mask generation setup.\n    if (setupForMaskGeneration) {\n        const generatedMaskFromBidi = getFieldMasks(setupForMaskGeneration);\n        if (Array.isArray(config === null || config === void 0 ? void 0 : config.lockAdditionalFields) &&\n            (config === null || config === void 0 ? void 0 : config.lockAdditionalFields.length) === 0) {\n            // Case 1: lockAdditionalFields is an empty array. Lock only fields from\n            // bidi setup.\n            if (generatedMaskFromBidi) {\n                // Only assign if mask is not empty\n                requestDict['fieldMask'] = generatedMaskFromBidi;\n            }\n            else {\n                delete requestDict['fieldMask']; // If mask is empty, effectively no\n                // specific fields locked by bidi\n            }\n        }\n        else if ((config === null || config === void 0 ? void 0 : config.lockAdditionalFields) &&\n            config.lockAdditionalFields.length > 0 &&\n            preExistingFieldMask !== null &&\n            Array.isArray(preExistingFieldMask) &&\n            preExistingFieldMask.length > 0) {\n            // Case 2: Lock fields from bidi setup + additional fields\n            // (preExistingFieldMask).\n            const generationConfigFields = [\n                'temperature',\n                'topK',\n                'topP',\n                'maxOutputTokens',\n                'responseModalities',\n                'seed',\n                'speechConfig',\n            ];\n            let mappedFieldsFromPreExisting = [];\n            if (preExistingFieldMask.length > 0) {\n                mappedFieldsFromPreExisting = preExistingFieldMask.map((field) => {\n                    if (generationConfigFields.includes(field)) {\n                        return `generationConfig.${field}`;\n                    }\n                    return field; // Keep original field name if not in\n                    // generationConfigFields\n                });\n            }\n            const finalMaskParts = [];\n            if (generatedMaskFromBidi) {\n                finalMaskParts.push(generatedMaskFromBidi);\n            }\n            if (mappedFieldsFromPreExisting.length > 0) {\n                finalMaskParts.push(...mappedFieldsFromPreExisting);\n            }\n            if (finalMaskParts.length > 0) {\n                requestDict['fieldMask'] = finalMaskParts.join(',');\n            }\n            else {\n                // If no fields from bidi and no valid additional fields from\n                // pre-existing mask.\n                delete requestDict['fieldMask'];\n            }\n        }\n        else {\n            // Case 3: \"Lock all fields\" (meaning, don't send a field_mask, let server\n            // defaults apply or all are mutable). This is hit if:\n            //  - `config.lockAdditionalFields` is undefined.\n            //  - `config.lockAdditionalFields` is non-empty, BUT\n            //  `preExistingFieldMask` is null, not a string, or an empty string.\n            delete requestDict['fieldMask'];\n        }\n    }\n    else {\n        // No valid `bidiGenerateContentSetup` was found or extracted.\n        // \"Lock additional null fields if any\".\n        if (preExistingFieldMask !== null &&\n            Array.isArray(preExistingFieldMask) &&\n            preExistingFieldMask.length > 0) {\n            // If there's a pre-existing field mask, it's a string, and it's not\n            // empty, then we should lock all fields.\n            requestDict['fieldMask'] = preExistingFieldMask.join(',');\n        }\n        else {\n            delete requestDict['fieldMask'];\n        }\n    }\n    return requestDict;\n}\nclass Tokens extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n    }\n    /**\n     * Creates an ephemeral auth token resource.\n     *\n     * @experimental\n     *\n     * @remarks\n     * Ephermeral auth tokens is only supported in the Gemini Developer API.\n     * It can be used for the session connection to the Live constrained API.\n     *\n     * @param params - The parameters for the create request.\n     * @return The created auth token.\n     *\n     * @example\n     * ```ts\n     * // Case 1: If LiveEphemeralParameters is unset, unlock LiveConnectConfig\n     * // when using the token in Live API sessions. Each session connection can\n     * // use a different configuration.\n     * const config: CreateAuthTokenConfig = {\n     *     uses: 3,\n     *     expireTime: '2025-05-01T00:00:00Z',\n     * }\n     * const token = await ai.tokens.create(config);\n     *\n     * // Case 2: If LiveEphemeralParameters is set, lock all fields in\n     * // LiveConnectConfig when using the token in Live API sessions. For\n     * // example, changing `outputAudioTranscription` in the Live API\n     * // connection will be ignored by the API.\n     * const config: CreateAuthTokenConfig =\n     *     uses: 3,\n     *     expireTime: '2025-05-01T00:00:00Z',\n     *     LiveEphemeralParameters: {\n     *        model: 'gemini-2.0-flash-001',\n     *        config: {\n     *           'responseModalities': ['AUDIO'],\n     *           'systemInstruction': 'Always answer in English.',\n     *        }\n     *     }\n     * }\n     * const token = await ai.tokens.create(config);\n     *\n     * // Case 3: If LiveEphemeralParameters is set and lockAdditionalFields is\n     * // set, lock LiveConnectConfig with set and additional fields (e.g.\n     * // responseModalities, systemInstruction, temperature in this example) when\n     * // using the token in Live API sessions.\n     * const config: CreateAuthTokenConfig =\n     *     uses: 3,\n     *     expireTime: '2025-05-01T00:00:00Z',\n     *     LiveEphemeralParameters: {\n     *        model: 'gemini-2.0-flash-001',\n     *        config: {\n     *           'responseModalities': ['AUDIO'],\n     *           'systemInstruction': 'Always answer in English.',\n     *        }\n     *     },\n     *     lockAdditionalFields: ['temperature'],\n     * }\n     * const token = await ai.tokens.create(config);\n     *\n     * // Case 4: If LiveEphemeralParameters is set and lockAdditionalFields is\n     * // empty array, lock LiveConnectConfig with set fields (e.g.\n     * // responseModalities, systemInstruction in this example) when using the\n     * // token in Live API sessions.\n     * const config: CreateAuthTokenConfig =\n     *     uses: 3,\n     *     expireTime: '2025-05-01T00:00:00Z',\n     *     LiveEphemeralParameters: {\n     *        model: 'gemini-2.0-flash-001',\n     *        config: {\n     *           'responseModalities': ['AUDIO'],\n     *           'systemInstruction': 'Always answer in English.',\n     *        }\n     *     },\n     *     lockAdditionalFields: [],\n     * }\n     * const token = await ai.tokens.create(config);\n     * ```\n     */\n    async create(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('The client.tokens.create method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = createAuthTokenParametersToMldev(this.apiClient, params);\n            path = formatMap('auth_tokens', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            const transformedBody = convertBidiSetupToTokenSetup(body, params.config);\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(transformedBody),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = authTokenFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Code generated by the Google Gen AI SDK generator DO NOT EDIT.\nfunction getTuningJobParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], fromName);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction listTuningJobsConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    const fromFilter = getValueByPath(fromObject, ['filter']);\n    if (parentObject !== undefined && fromFilter != null) {\n        setValueByPath(parentObject, ['_query', 'filter'], fromFilter);\n    }\n    return toObject;\n}\nfunction listTuningJobsParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listTuningJobsConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction tuningExampleToMldev(fromObject) {\n    const toObject = {};\n    const fromTextInput = getValueByPath(fromObject, ['textInput']);\n    if (fromTextInput != null) {\n        setValueByPath(toObject, ['textInput'], fromTextInput);\n    }\n    const fromOutput = getValueByPath(fromObject, ['output']);\n    if (fromOutput != null) {\n        setValueByPath(toObject, ['output'], fromOutput);\n    }\n    return toObject;\n}\nfunction tuningDatasetToMldev(fromObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['gcsUri']) !== undefined) {\n        throw new Error('gcsUri parameter is not supported in Gemini API.');\n    }\n    const fromExamples = getValueByPath(fromObject, ['examples']);\n    if (fromExamples != null) {\n        let transformedList = fromExamples;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return tuningExampleToMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['examples', 'examples'], transformedList);\n    }\n    return toObject;\n}\nfunction createTuningJobConfigToMldev(fromObject, parentObject) {\n    const toObject = {};\n    if (getValueByPath(fromObject, ['validationDataset']) !== undefined) {\n        throw new Error('validationDataset parameter is not supported in Gemini API.');\n    }\n    const fromTunedModelDisplayName = getValueByPath(fromObject, [\n        'tunedModelDisplayName',\n    ]);\n    if (parentObject !== undefined && fromTunedModelDisplayName != null) {\n        setValueByPath(parentObject, ['displayName'], fromTunedModelDisplayName);\n    }\n    if (getValueByPath(fromObject, ['description']) !== undefined) {\n        throw new Error('description parameter is not supported in Gemini API.');\n    }\n    const fromEpochCount = getValueByPath(fromObject, ['epochCount']);\n    if (parentObject !== undefined && fromEpochCount != null) {\n        setValueByPath(parentObject, ['tuningTask', 'hyperparameters', 'epochCount'], fromEpochCount);\n    }\n    const fromLearningRateMultiplier = getValueByPath(fromObject, [\n        'learningRateMultiplier',\n    ]);\n    if (fromLearningRateMultiplier != null) {\n        setValueByPath(toObject, ['tuningTask', 'hyperparameters', 'learningRateMultiplier'], fromLearningRateMultiplier);\n    }\n    if (getValueByPath(fromObject, ['exportLastCheckpointOnly']) !==\n        undefined) {\n        throw new Error('exportLastCheckpointOnly parameter is not supported in Gemini API.');\n    }\n    if (getValueByPath(fromObject, ['adapterSize']) !== undefined) {\n        throw new Error('adapterSize parameter is not supported in Gemini API.');\n    }\n    const fromBatchSize = getValueByPath(fromObject, ['batchSize']);\n    if (parentObject !== undefined && fromBatchSize != null) {\n        setValueByPath(parentObject, ['tuningTask', 'hyperparameters', 'batchSize'], fromBatchSize);\n    }\n    const fromLearningRate = getValueByPath(fromObject, ['learningRate']);\n    if (parentObject !== undefined && fromLearningRate != null) {\n        setValueByPath(parentObject, ['tuningTask', 'hyperparameters', 'learningRate'], fromLearningRate);\n    }\n    return toObject;\n}\nfunction createTuningJobParametersToMldev(fromObject) {\n    const toObject = {};\n    const fromBaseModel = getValueByPath(fromObject, ['baseModel']);\n    if (fromBaseModel != null) {\n        setValueByPath(toObject, ['baseModel'], fromBaseModel);\n    }\n    const fromTrainingDataset = getValueByPath(fromObject, [\n        'trainingDataset',\n    ]);\n    if (fromTrainingDataset != null) {\n        setValueByPath(toObject, ['tuningTask', 'trainingData'], tuningDatasetToMldev(fromTrainingDataset));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], createTuningJobConfigToMldev(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction getTuningJobParametersToVertex(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['_url', 'name'], fromName);\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], fromConfig);\n    }\n    return toObject;\n}\nfunction listTuningJobsConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromPageSize = getValueByPath(fromObject, ['pageSize']);\n    if (parentObject !== undefined && fromPageSize != null) {\n        setValueByPath(parentObject, ['_query', 'pageSize'], fromPageSize);\n    }\n    const fromPageToken = getValueByPath(fromObject, ['pageToken']);\n    if (parentObject !== undefined && fromPageToken != null) {\n        setValueByPath(parentObject, ['_query', 'pageToken'], fromPageToken);\n    }\n    const fromFilter = getValueByPath(fromObject, ['filter']);\n    if (parentObject !== undefined && fromFilter != null) {\n        setValueByPath(parentObject, ['_query', 'filter'], fromFilter);\n    }\n    return toObject;\n}\nfunction listTuningJobsParametersToVertex(fromObject) {\n    const toObject = {};\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], listTuningJobsConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction tuningDatasetToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromGcsUri = getValueByPath(fromObject, ['gcsUri']);\n    if (parentObject !== undefined && fromGcsUri != null) {\n        setValueByPath(parentObject, ['supervisedTuningSpec', 'trainingDatasetUri'], fromGcsUri);\n    }\n    if (getValueByPath(fromObject, ['examples']) !== undefined) {\n        throw new Error('examples parameter is not supported in Vertex AI.');\n    }\n    return toObject;\n}\nfunction tuningValidationDatasetToVertex(fromObject) {\n    const toObject = {};\n    const fromGcsUri = getValueByPath(fromObject, ['gcsUri']);\n    if (fromGcsUri != null) {\n        setValueByPath(toObject, ['validationDatasetUri'], fromGcsUri);\n    }\n    return toObject;\n}\nfunction createTuningJobConfigToVertex(fromObject, parentObject) {\n    const toObject = {};\n    const fromValidationDataset = getValueByPath(fromObject, [\n        'validationDataset',\n    ]);\n    if (parentObject !== undefined && fromValidationDataset != null) {\n        setValueByPath(parentObject, ['supervisedTuningSpec'], tuningValidationDatasetToVertex(fromValidationDataset));\n    }\n    const fromTunedModelDisplayName = getValueByPath(fromObject, [\n        'tunedModelDisplayName',\n    ]);\n    if (parentObject !== undefined && fromTunedModelDisplayName != null) {\n        setValueByPath(parentObject, ['tunedModelDisplayName'], fromTunedModelDisplayName);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (parentObject !== undefined && fromDescription != null) {\n        setValueByPath(parentObject, ['description'], fromDescription);\n    }\n    const fromEpochCount = getValueByPath(fromObject, ['epochCount']);\n    if (parentObject !== undefined && fromEpochCount != null) {\n        setValueByPath(parentObject, ['supervisedTuningSpec', 'hyperParameters', 'epochCount'], fromEpochCount);\n    }\n    const fromLearningRateMultiplier = getValueByPath(fromObject, [\n        'learningRateMultiplier',\n    ]);\n    if (parentObject !== undefined && fromLearningRateMultiplier != null) {\n        setValueByPath(parentObject, ['supervisedTuningSpec', 'hyperParameters', 'learningRateMultiplier'], fromLearningRateMultiplier);\n    }\n    const fromExportLastCheckpointOnly = getValueByPath(fromObject, [\n        'exportLastCheckpointOnly',\n    ]);\n    if (parentObject !== undefined && fromExportLastCheckpointOnly != null) {\n        setValueByPath(parentObject, ['supervisedTuningSpec', 'exportLastCheckpointOnly'], fromExportLastCheckpointOnly);\n    }\n    const fromAdapterSize = getValueByPath(fromObject, ['adapterSize']);\n    if (parentObject !== undefined && fromAdapterSize != null) {\n        setValueByPath(parentObject, ['supervisedTuningSpec', 'hyperParameters', 'adapterSize'], fromAdapterSize);\n    }\n    if (getValueByPath(fromObject, ['batchSize']) !== undefined) {\n        throw new Error('batchSize parameter is not supported in Vertex AI.');\n    }\n    if (getValueByPath(fromObject, ['learningRate']) !== undefined) {\n        throw new Error('learningRate parameter is not supported in Vertex AI.');\n    }\n    return toObject;\n}\nfunction createTuningJobParametersToVertex(fromObject) {\n    const toObject = {};\n    const fromBaseModel = getValueByPath(fromObject, ['baseModel']);\n    if (fromBaseModel != null) {\n        setValueByPath(toObject, ['baseModel'], fromBaseModel);\n    }\n    const fromTrainingDataset = getValueByPath(fromObject, [\n        'trainingDataset',\n    ]);\n    if (fromTrainingDataset != null) {\n        setValueByPath(toObject, ['supervisedTuningSpec', 'trainingDatasetUri'], tuningDatasetToVertex(fromTrainingDataset, toObject));\n    }\n    const fromConfig = getValueByPath(fromObject, ['config']);\n    if (fromConfig != null) {\n        setValueByPath(toObject, ['config'], createTuningJobConfigToVertex(fromConfig, toObject));\n    }\n    return toObject;\n}\nfunction tunedModelFromMldev(fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['name']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], fromModel);\n    }\n    const fromEndpoint = getValueByPath(fromObject, ['name']);\n    if (fromEndpoint != null) {\n        setValueByPath(toObject, ['endpoint'], fromEndpoint);\n    }\n    return toObject;\n}\nfunction tuningJobFromMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromState = getValueByPath(fromObject, ['state']);\n    if (fromState != null) {\n        setValueByPath(toObject, ['state'], tTuningJobStatus(fromState));\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromStartTime = getValueByPath(fromObject, [\n        'tuningTask',\n        'startTime',\n    ]);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, [\n        'tuningTask',\n        'completeTime',\n    ]);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromBaseModel = getValueByPath(fromObject, ['baseModel']);\n    if (fromBaseModel != null) {\n        setValueByPath(toObject, ['baseModel'], fromBaseModel);\n    }\n    const fromTunedModel = getValueByPath(fromObject, ['_self']);\n    if (fromTunedModel != null) {\n        setValueByPath(toObject, ['tunedModel'], tunedModelFromMldev(fromTunedModel));\n    }\n    const fromDistillationSpec = getValueByPath(fromObject, [\n        'distillationSpec',\n    ]);\n    if (fromDistillationSpec != null) {\n        setValueByPath(toObject, ['distillationSpec'], fromDistillationSpec);\n    }\n    const fromExperiment = getValueByPath(fromObject, ['experiment']);\n    if (fromExperiment != null) {\n        setValueByPath(toObject, ['experiment'], fromExperiment);\n    }\n    const fromLabels = getValueByPath(fromObject, ['labels']);\n    if (fromLabels != null) {\n        setValueByPath(toObject, ['labels'], fromLabels);\n    }\n    const fromPipelineJob = getValueByPath(fromObject, ['pipelineJob']);\n    if (fromPipelineJob != null) {\n        setValueByPath(toObject, ['pipelineJob'], fromPipelineJob);\n    }\n    const fromServiceAccount = getValueByPath(fromObject, [\n        'serviceAccount',\n    ]);\n    if (fromServiceAccount != null) {\n        setValueByPath(toObject, ['serviceAccount'], fromServiceAccount);\n    }\n    const fromTunedModelDisplayName = getValueByPath(fromObject, [\n        'tunedModelDisplayName',\n    ]);\n    if (fromTunedModelDisplayName != null) {\n        setValueByPath(toObject, ['tunedModelDisplayName'], fromTunedModelDisplayName);\n    }\n    return toObject;\n}\nfunction listTuningJobsResponseFromMldev(fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromTuningJobs = getValueByPath(fromObject, ['tunedModels']);\n    if (fromTuningJobs != null) {\n        let transformedList = fromTuningJobs;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return tuningJobFromMldev(item);\n            });\n        }\n        setValueByPath(toObject, ['tuningJobs'], transformedList);\n    }\n    return toObject;\n}\nfunction operationFromMldev(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromMetadata = getValueByPath(fromObject, ['metadata']);\n    if (fromMetadata != null) {\n        setValueByPath(toObject, ['metadata'], fromMetadata);\n    }\n    const fromDone = getValueByPath(fromObject, ['done']);\n    if (fromDone != null) {\n        setValueByPath(toObject, ['done'], fromDone);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    return toObject;\n}\nfunction tunedModelCheckpointFromVertex(fromObject) {\n    const toObject = {};\n    const fromCheckpointId = getValueByPath(fromObject, ['checkpointId']);\n    if (fromCheckpointId != null) {\n        setValueByPath(toObject, ['checkpointId'], fromCheckpointId);\n    }\n    const fromEpoch = getValueByPath(fromObject, ['epoch']);\n    if (fromEpoch != null) {\n        setValueByPath(toObject, ['epoch'], fromEpoch);\n    }\n    const fromStep = getValueByPath(fromObject, ['step']);\n    if (fromStep != null) {\n        setValueByPath(toObject, ['step'], fromStep);\n    }\n    const fromEndpoint = getValueByPath(fromObject, ['endpoint']);\n    if (fromEndpoint != null) {\n        setValueByPath(toObject, ['endpoint'], fromEndpoint);\n    }\n    return toObject;\n}\nfunction tunedModelFromVertex(fromObject) {\n    const toObject = {};\n    const fromModel = getValueByPath(fromObject, ['model']);\n    if (fromModel != null) {\n        setValueByPath(toObject, ['model'], fromModel);\n    }\n    const fromEndpoint = getValueByPath(fromObject, ['endpoint']);\n    if (fromEndpoint != null) {\n        setValueByPath(toObject, ['endpoint'], fromEndpoint);\n    }\n    const fromCheckpoints = getValueByPath(fromObject, ['checkpoints']);\n    if (fromCheckpoints != null) {\n        let transformedList = fromCheckpoints;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return tunedModelCheckpointFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['checkpoints'], transformedList);\n    }\n    return toObject;\n}\nfunction tuningJobFromVertex(fromObject) {\n    const toObject = {};\n    const fromName = getValueByPath(fromObject, ['name']);\n    if (fromName != null) {\n        setValueByPath(toObject, ['name'], fromName);\n    }\n    const fromState = getValueByPath(fromObject, ['state']);\n    if (fromState != null) {\n        setValueByPath(toObject, ['state'], tTuningJobStatus(fromState));\n    }\n    const fromCreateTime = getValueByPath(fromObject, ['createTime']);\n    if (fromCreateTime != null) {\n        setValueByPath(toObject, ['createTime'], fromCreateTime);\n    }\n    const fromStartTime = getValueByPath(fromObject, ['startTime']);\n    if (fromStartTime != null) {\n        setValueByPath(toObject, ['startTime'], fromStartTime);\n    }\n    const fromEndTime = getValueByPath(fromObject, ['endTime']);\n    if (fromEndTime != null) {\n        setValueByPath(toObject, ['endTime'], fromEndTime);\n    }\n    const fromUpdateTime = getValueByPath(fromObject, ['updateTime']);\n    if (fromUpdateTime != null) {\n        setValueByPath(toObject, ['updateTime'], fromUpdateTime);\n    }\n    const fromError = getValueByPath(fromObject, ['error']);\n    if (fromError != null) {\n        setValueByPath(toObject, ['error'], fromError);\n    }\n    const fromDescription = getValueByPath(fromObject, ['description']);\n    if (fromDescription != null) {\n        setValueByPath(toObject, ['description'], fromDescription);\n    }\n    const fromBaseModel = getValueByPath(fromObject, ['baseModel']);\n    if (fromBaseModel != null) {\n        setValueByPath(toObject, ['baseModel'], fromBaseModel);\n    }\n    const fromTunedModel = getValueByPath(fromObject, ['tunedModel']);\n    if (fromTunedModel != null) {\n        setValueByPath(toObject, ['tunedModel'], tunedModelFromVertex(fromTunedModel));\n    }\n    const fromSupervisedTuningSpec = getValueByPath(fromObject, [\n        'supervisedTuningSpec',\n    ]);\n    if (fromSupervisedTuningSpec != null) {\n        setValueByPath(toObject, ['supervisedTuningSpec'], fromSupervisedTuningSpec);\n    }\n    const fromTuningDataStats = getValueByPath(fromObject, [\n        'tuningDataStats',\n    ]);\n    if (fromTuningDataStats != null) {\n        setValueByPath(toObject, ['tuningDataStats'], fromTuningDataStats);\n    }\n    const fromEncryptionSpec = getValueByPath(fromObject, [\n        'encryptionSpec',\n    ]);\n    if (fromEncryptionSpec != null) {\n        setValueByPath(toObject, ['encryptionSpec'], fromEncryptionSpec);\n    }\n    const fromPartnerModelTuningSpec = getValueByPath(fromObject, [\n        'partnerModelTuningSpec',\n    ]);\n    if (fromPartnerModelTuningSpec != null) {\n        setValueByPath(toObject, ['partnerModelTuningSpec'], fromPartnerModelTuningSpec);\n    }\n    const fromDistillationSpec = getValueByPath(fromObject, [\n        'distillationSpec',\n    ]);\n    if (fromDistillationSpec != null) {\n        setValueByPath(toObject, ['distillationSpec'], fromDistillationSpec);\n    }\n    const fromExperiment = getValueByPath(fromObject, ['experiment']);\n    if (fromExperiment != null) {\n        setValueByPath(toObject, ['experiment'], fromExperiment);\n    }\n    const fromLabels = getValueByPath(fromObject, ['labels']);\n    if (fromLabels != null) {\n        setValueByPath(toObject, ['labels'], fromLabels);\n    }\n    const fromPipelineJob = getValueByPath(fromObject, ['pipelineJob']);\n    if (fromPipelineJob != null) {\n        setValueByPath(toObject, ['pipelineJob'], fromPipelineJob);\n    }\n    const fromServiceAccount = getValueByPath(fromObject, [\n        'serviceAccount',\n    ]);\n    if (fromServiceAccount != null) {\n        setValueByPath(toObject, ['serviceAccount'], fromServiceAccount);\n    }\n    const fromTunedModelDisplayName = getValueByPath(fromObject, [\n        'tunedModelDisplayName',\n    ]);\n    if (fromTunedModelDisplayName != null) {\n        setValueByPath(toObject, ['tunedModelDisplayName'], fromTunedModelDisplayName);\n    }\n    return toObject;\n}\nfunction listTuningJobsResponseFromVertex(fromObject) {\n    const toObject = {};\n    const fromNextPageToken = getValueByPath(fromObject, [\n        'nextPageToken',\n    ]);\n    if (fromNextPageToken != null) {\n        setValueByPath(toObject, ['nextPageToken'], fromNextPageToken);\n    }\n    const fromTuningJobs = getValueByPath(fromObject, ['tuningJobs']);\n    if (fromTuningJobs != null) {\n        let transformedList = fromTuningJobs;\n        if (Array.isArray(transformedList)) {\n            transformedList = transformedList.map((item) => {\n                return tuningJobFromVertex(item);\n            });\n        }\n        setValueByPath(toObject, ['tuningJobs'], transformedList);\n    }\n    return toObject;\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass Tunings extends BaseModule {\n    constructor(apiClient) {\n        super();\n        this.apiClient = apiClient;\n        /**\n         * Gets a TuningJob.\n         *\n         * @param name - The resource name of the tuning job.\n         * @return - A TuningJob object.\n         *\n         * @experimental - The SDK's tuning implementation is experimental, and may\n         * change in future versions.\n         */\n        this.get = async (params) => {\n            return await this.getInternal(params);\n        };\n        /**\n         * Lists tuning jobs.\n         *\n         * @param config - The configuration for the list request.\n         * @return - A list of tuning jobs.\n         *\n         * @experimental - The SDK's tuning implementation is experimental, and may\n         * change in future versions.\n         */\n        this.list = async (params = {}) => {\n            return new Pager(PagedItem.PAGED_ITEM_TUNING_JOBS, (x) => this.listInternal(x), await this.listInternal(params), params);\n        };\n        /**\n         * Creates a supervised fine-tuning job.\n         *\n         * @param params - The parameters for the tuning job.\n         * @return - A TuningJob operation.\n         *\n         * @experimental - The SDK's tuning implementation is experimental, and may\n         * change in future versions.\n         */\n        this.tune = async (params) => {\n            if (this.apiClient.isVertexAI()) {\n                return await this.tuneInternal(params);\n            }\n            else {\n                const operation = await this.tuneMldevInternal(params);\n                let tunedModelName = '';\n                if (operation['metadata'] !== undefined &&\n                    operation['metadata']['tunedModel'] !== undefined) {\n                    tunedModelName = operation['metadata']['tunedModel'];\n                }\n                else if (operation['name'] !== undefined &&\n                    operation['name'].includes('/operations/')) {\n                    tunedModelName = operation['name'].split('/operations/')[0];\n                }\n                const tuningJob = {\n                    name: tunedModelName,\n                    state: JobState.JOB_STATE_QUEUED,\n                };\n                return tuningJob;\n            }\n        };\n    }\n    async getInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = getTuningJobParametersToVertex(params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = tuningJobFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            const body = getTuningJobParametersToMldev(params);\n            path = formatMap('{name}', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = tuningJobFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n    async listInternal(params) {\n        var _a, _b, _c, _d;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = listTuningJobsParametersToVertex(params);\n            path = formatMap('tuningJobs', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listTuningJobsResponseFromVertex(apiResponse);\n                const typedResp = new ListTuningJobsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n        else {\n            const body = listTuningJobsParametersToMldev(params);\n            path = formatMap('tunedModels', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'GET',\n                httpOptions: (_c = params.config) === null || _c === void 0 ? void 0 : _c.httpOptions,\n                abortSignal: (_d = params.config) === null || _d === void 0 ? void 0 : _d.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = listTuningJobsResponseFromMldev(apiResponse);\n                const typedResp = new ListTuningJobsResponse();\n                Object.assign(typedResp, resp);\n                return typedResp;\n            });\n        }\n    }\n    async tuneInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            const body = createTuningJobParametersToVertex(params);\n            path = formatMap('tuningJobs', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = tuningJobFromVertex(apiResponse);\n                return resp;\n            });\n        }\n        else {\n            throw new Error('This method is only supported by the Vertex AI.');\n        }\n    }\n    async tuneMldevInternal(params) {\n        var _a, _b;\n        let response;\n        let path = '';\n        let queryParams = {};\n        if (this.apiClient.isVertexAI()) {\n            throw new Error('This method is only supported by the Gemini Developer API.');\n        }\n        else {\n            const body = createTuningJobParametersToMldev(params);\n            path = formatMap('tunedModels', body['_url']);\n            queryParams = body['_query'];\n            delete body['config'];\n            delete body['_url'];\n            delete body['_query'];\n            response = this.apiClient\n                .request({\n                path: path,\n                queryParams: queryParams,\n                body: JSON.stringify(body),\n                httpMethod: 'POST',\n                httpOptions: (_a = params.config) === null || _a === void 0 ? void 0 : _a.httpOptions,\n                abortSignal: (_b = params.config) === null || _b === void 0 ? void 0 : _b.abortSignal,\n            })\n                .then((httpResponse) => {\n                return httpResponse.json();\n            });\n            return response.then((apiResponse) => {\n                const resp = operationFromMldev(apiResponse);\n                return resp;\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass BrowserDownloader {\n    async download(_params, _apiClient) {\n        throw new Error('Download to file is not supported in the browser, please use a browser compliant download like an <a> tag.');\n    }\n}\n\nconst MAX_CHUNK_SIZE = 1024 * 1024 * 8; // bytes\nconst MAX_RETRY_COUNT = 3;\nconst INITIAL_RETRY_DELAY_MS = 1000;\nconst DELAY_MULTIPLIER = 2;\nconst X_GOOG_UPLOAD_STATUS_HEADER_FIELD = 'x-goog-upload-status';\nasync function uploadBlob(file, uploadUrl, apiClient) {\n    var _a, _b, _c;\n    let fileSize = 0;\n    let offset = 0;\n    let response = new HttpResponse(new Response());\n    let uploadCommand = 'upload';\n    fileSize = file.size;\n    while (offset < fileSize) {\n        const chunkSize = Math.min(MAX_CHUNK_SIZE, fileSize - offset);\n        const chunk = file.slice(offset, offset + chunkSize);\n        if (offset + chunkSize >= fileSize) {\n            uploadCommand += ', finalize';\n        }\n        let retryCount = 0;\n        let currentDelayMs = INITIAL_RETRY_DELAY_MS;\n        while (retryCount < MAX_RETRY_COUNT) {\n            response = await apiClient.request({\n                path: '',\n                body: chunk,\n                httpMethod: 'POST',\n                httpOptions: {\n                    apiVersion: '',\n                    baseUrl: uploadUrl,\n                    headers: {\n                        'X-Goog-Upload-Command': uploadCommand,\n                        'X-Goog-Upload-Offset': String(offset),\n                        'Content-Length': String(chunkSize),\n                    },\n                },\n            });\n            if ((_a = response === null || response === void 0 ? void 0 : response.headers) === null || _a === void 0 ? void 0 : _a[X_GOOG_UPLOAD_STATUS_HEADER_FIELD]) {\n                break;\n            }\n            retryCount++;\n            await sleep(currentDelayMs);\n            currentDelayMs = currentDelayMs * DELAY_MULTIPLIER;\n        }\n        offset += chunkSize;\n        // The `x-goog-upload-status` header field can be `active`, `final` and\n        //`cancelled` in resposne.\n        if (((_b = response === null || response === void 0 ? void 0 : response.headers) === null || _b === void 0 ? void 0 : _b[X_GOOG_UPLOAD_STATUS_HEADER_FIELD]) !== 'active') {\n            break;\n        }\n        // TODO(b/401391430) Investigate why the upload status is not finalized\n        // even though all content has been uploaded.\n        if (fileSize <= offset) {\n            throw new Error('All content has been uploaded, but the upload status is not finalized.');\n        }\n    }\n    const responseJson = (await (response === null || response === void 0 ? void 0 : response.json()));\n    if (((_c = response === null || response === void 0 ? void 0 : response.headers) === null || _c === void 0 ? void 0 : _c[X_GOOG_UPLOAD_STATUS_HEADER_FIELD]) !== 'final') {\n        throw new Error('Failed to upload file: Upload status is not finalized.');\n    }\n    return responseJson['file'];\n}\nasync function getBlobStat(file) {\n    const fileStat = { size: file.size, type: file.type };\n    return fileStat;\n}\nfunction sleep(ms) {\n    return new Promise((resolvePromise) => setTimeout(resolvePromise, ms));\n}\n\nclass BrowserUploader {\n    async upload(file, uploadUrl, apiClient) {\n        if (typeof file === 'string') {\n            throw new Error('File path is not supported in browser uploader.');\n        }\n        return await uploadBlob(file, uploadUrl, apiClient);\n    }\n    async stat(file) {\n        if (typeof file === 'string') {\n            throw new Error('File path is not supported in browser uploader.');\n        }\n        else {\n            return await getBlobStat(file);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nclass BrowserWebSocketFactory {\n    create(url, headers, callbacks) {\n        return new BrowserWebSocket(url, headers, callbacks);\n    }\n}\nclass BrowserWebSocket {\n    constructor(url, headers, callbacks) {\n        this.url = url;\n        this.headers = headers;\n        this.callbacks = callbacks;\n    }\n    connect() {\n        this.ws = new WebSocket(this.url);\n        this.ws.onopen = this.callbacks.onopen;\n        this.ws.onerror = this.callbacks.onerror;\n        this.ws.onclose = this.callbacks.onclose;\n        this.ws.onmessage = this.callbacks.onmessage;\n    }\n    send(message) {\n        if (this.ws === undefined) {\n            throw new Error('WebSocket is not connected');\n        }\n        this.ws.send(message);\n    }\n    close() {\n        if (this.ws === undefined) {\n            throw new Error('WebSocket is not connected');\n        }\n        this.ws.close();\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst GOOGLE_API_KEY_HEADER = 'x-goog-api-key';\n// TODO(b/395122533): We need a secure client side authentication mechanism.\nclass WebAuth {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    async addAuthHeaders(headers) {\n        if (headers.get(GOOGLE_API_KEY_HEADER) !== null) {\n            return;\n        }\n        if (this.apiKey.startsWith('auth_tokens/')) {\n            throw new Error('Ephemeral tokens are only supported by the live API.');\n        }\n        // Check if API key is empty or null\n        if (!this.apiKey) {\n            throw new Error('API key is missing. Please provide a valid API key.');\n        }\n        headers.append(GOOGLE_API_KEY_HEADER, this.apiKey);\n    }\n}\n\n/**\n * @license\n * Copyright 2025 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst LANGUAGE_LABEL_PREFIX = 'gl-node/';\n/**\n * The Google GenAI SDK.\n *\n * @remarks\n * Provides access to the GenAI features through either the {@link\n * https://cloud.google.com/vertex-ai/docs/reference/rest | Gemini API} or\n * the {@link https://cloud.google.com/vertex-ai/docs/reference/rest | Vertex AI\n * API}.\n *\n * The {@link GoogleGenAIOptions.vertexai} value determines which of the API\n * services to use.\n *\n * When using the Gemini API, a {@link GoogleGenAIOptions.apiKey} must also be\n * set. When using Vertex AI, currently only {@link GoogleGenAIOptions.apiKey}\n * is supported via Express mode. {@link GoogleGenAIOptions.project} and {@link\n * GoogleGenAIOptions.location} should not be set.\n *\n * @example\n * Initializing the SDK for using the Gemini API:\n * ```ts\n * import {GoogleGenAI} from '@google/genai';\n * const ai = new GoogleGenAI({apiKey: 'GEMINI_API_KEY'});\n * ```\n *\n * @example\n * Initializing the SDK for using the Vertex AI API:\n * ```ts\n * import {GoogleGenAI} from '@google/genai';\n * const ai = new GoogleGenAI({\n *   vertexai: true,\n *   project: 'PROJECT_ID',\n *   location: 'PROJECT_LOCATION'\n * });\n * ```\n *\n */\nclass GoogleGenAI {\n    constructor(options) {\n        var _a;\n        if (options.apiKey == null) {\n            throw new Error('An API Key must be set when running in a browser');\n        }\n        // Web client only supports API key mode for Vertex AI.\n        if (options.project || options.location) {\n            throw new Error('Vertex AI project based authentication is not supported on browser runtimes. Please do not provide a project or location.');\n        }\n        this.vertexai = (_a = options.vertexai) !== null && _a !== void 0 ? _a : false;\n        this.apiKey = options.apiKey;\n        const baseUrl = getBaseUrl(options, \n        /*vertexBaseUrlFromEnv*/ undefined, \n        /*geminiBaseUrlFromEnv*/ undefined);\n        if (baseUrl) {\n            if (options.httpOptions) {\n                options.httpOptions.baseUrl = baseUrl;\n            }\n            else {\n                options.httpOptions = { baseUrl: baseUrl };\n            }\n        }\n        this.apiVersion = options.apiVersion;\n        const auth = new WebAuth(this.apiKey);\n        this.apiClient = new ApiClient({\n            auth: auth,\n            apiVersion: this.apiVersion,\n            apiKey: this.apiKey,\n            vertexai: this.vertexai,\n            httpOptions: options.httpOptions,\n            userAgentExtra: LANGUAGE_LABEL_PREFIX + 'web',\n            uploader: new BrowserUploader(),\n            downloader: new BrowserDownloader(),\n        });\n        this.models = new Models(this.apiClient);\n        this.live = new Live(this.apiClient, auth, new BrowserWebSocketFactory());\n        this.batches = new Batches(this.apiClient);\n        this.chats = new Chats(this.models, this.apiClient);\n        this.caches = new Caches(this.apiClient);\n        this.files = new Files(this.apiClient);\n        this.operations = new Operations(this.apiClient);\n        this.authTokens = new Tokens(this.apiClient);\n        this.tunings = new Tunings(this.apiClient);\n    }\n}\n\nexport { ActivityHandling, AdapterSize, ApiError, AuthType, Batches, Behavior, BlockedReason, Caches, Chat, Chats, ComputeTokensResponse, ControlReferenceImage, ControlReferenceType, CountTokensResponse, CreateFileResponse, DeleteCachedContentResponse, DeleteFileResponse, DeleteModelResponse, DynamicRetrievalConfigMode, EditImageResponse, EditMode, EmbedContentResponse, EndSensitivity, FeatureSelectionPreference, FileSource, FileState, Files, FinishReason, FunctionCallingConfigMode, FunctionResponse, FunctionResponseScheduling, GenerateContentResponse, GenerateContentResponsePromptFeedback, GenerateContentResponseUsageMetadata, GenerateImagesResponse, GenerateVideosResponse, GoogleGenAI, HarmBlockMethod, HarmBlockThreshold, HarmCategory, HarmProbability, HarmSeverity, HttpResponse, ImagePromptLanguage, InlinedResponse, JobState, Language, ListBatchJobsResponse, ListCachedContentsResponse, ListFilesResponse, ListModelsResponse, ListTuningJobsResponse, Live, LiveClientToolResponse, LiveMusicPlaybackControl, LiveMusicServerMessage, LiveSendToolResponseParameters, LiveServerMessage, MaskReferenceImage, MaskReferenceMode, MediaModality, MediaResolution, Modality, Mode, Models, Operations, Outcome, PagedItem, Pager, PersonGeneration, RawReferenceImage, ReplayResponse, SafetyFilterLevel, Scale, Session, StartSensitivity, StyleReferenceImage, SubjectReferenceImage, SubjectReferenceType, Tokens, TrafficType, TurnCoverage, Type, UpscaleImageResponse, UrlRetrievalStatus, VideoCompressionQuality, createModelContent, createPartFromBase64, createPartFromCodeExecutionResult, createPartFromExecutableCode, createPartFromFunctionCall, createPartFromFunctionResponse, createPartFromText, createPartFromUri, createUserContent, mcpToTool, setDefaultBaseUrls };\n//# sourceMappingURL=index.mjs.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["titleIndications","text","backTitle","document","title","setTimeout","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","sentenceSimilarity","str1","str2","longerLength","length","matrix","str1WithoutSpaces","replace","str2WithoutSpaces","i","push","j","Math","min","levenshteinDistance","pickBestReponse","answer","arr","bestResponse","element","similarity","obj","SuppressedError","Logs","question","console","log","bestAnswer","round","toPourcentage","array","response","gptAnswer","normalizedResponse","normalizeText","toLowerCase","trim","SYSTEM_INSTRUCTION_MESSAGE","role","content","getContent","config","questionElement","imagesElements","querySelectorAll","includeImages","version","versionNumber","match","Number","isGPTModelGreaterOrEqualTo4","model","contentWithImages","base64Images","Array","from","map","imgEl","imageElement","quality","canvas","createElement","ctx","getContext","remove","img","Image","crossOrigin","onload","width","height","drawImage","base64","toDataURL","onerror","err","src","imageToBase64","base64ImagesResolved","allSettled","status","type","image_url","url","logs","error","reason","getContentWithHistory","message","history","messages","pastHistory","JSON","parse","_a","sessionStorage","moodleGPTHistory","loadPastHistory","newHistory","urlParams","URLSearchParams","location","search","host","cmid","get","attempt","_b","createNewHistory","a","b","KEYS_TO_COMPARE","key","areHistoryFromSameQuiz","saveResponse","stringify","default_format","formatters","RFC1738","v","String","RFC3986","is_array","isArray","hex_table","toString","toUpperCase","limit","maybe_map","val","fn","mapped","has","Object","prototype","hasOwnProperty","array_prefix_generators","brackets","prefix","comma","indices","repeat","push_to_array","value_or_array","to_ISO","Date","toISOString","defaults","addQueryPrefix","allowDots","allowEmptyArrays","arrayFormat","charset","charsetSentinel","delimiter","encode","encodeDotInKeys","encoder","str","_defaultEncoder","_kind","format","string","Symbol","call","escape","$0","parseInt","slice","out","segment","c","charCodeAt","charAt","join","encodeValuesOnly","formatter","serializeDate","date","skipNulls","strictNullHandling","sentinel","inner_stringify","object","generateArrayPrefix","commaRoundTrip","filter","sort","sideChannel","tmp_sc","find_flag","pos","RangeError","constructor","isBuffer","is_buffer","key_value","values","obj_keys","keys","encoded_prefix","adjusted_prefix","encoded_key","key_prefix","set","valueSideChannel","WeakMap","opts","options","TypeError","normalize_stringify_options","joined","VERSION","kind","fetch","FormData","File","ReadableStream","getMultipartRequestOptions","getDefaultAgent","fileFromPath","isFsReadStream","auto","MultipartBody","body","this","toStringTag","init","shims.kind","shims","Error","shims.setShims","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","Request","Response","Headers","Blob","async","form","auto.getRuntime","OpenAIError","APIError","headers","super","makeMessage","request_id","data","code","param","msg","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError","_LineDecoder_carriageReturnIndex","__classPrivateFieldSet","receiver","state","f","__classPrivateFieldGet","LineDecoder","buffer","Uint8Array","decode","chunk","binaryChunk","ArrayBuffer","TextEncoder","newData","lines","patternIndex","findNewlineIndex","carriage","index","decodeText","endIndex","preceding","line","bytes","Buffer","name","TextDecoder","textDecoder","flush","startIndex","findDoubleNewlineIndex","ReadableStreamToAsyncIterable","stream","asyncIterator","reader","getReader","read","releaseLock","cancelPromise","cancel","NEWLINE_CHARS","Set","NEWLINE_REGEXP","Stream","iterator","controller","fromSSEResponse","consumed","sse","abort","sseDecoder","SSEDecoder","lineDecoder","iter","sseChunk","iterSSEChunks","_iterSSEMessages","startsWith","event","raw","createResponseHeaders","fromReadableStream","readableStream","iterLines","tee","left","right","teeIterator","queue","shift","toReadableStream","self","start","pull","ctrl","close","enqueue","return","chunks","endsWith","substring","fieldname","_","indexOf","partition","isResponseLike","blob","isFileLike","lastModified","isBlobLike","size","arrayBuffer","toFile","URL","pathname","split","pop","bits","parts","isView","isAsyncIterableIterator","props","getOwnPropertyNames","p","propsForError","getBytes","getStringFromMaybeBuffer","filename","path","getName","x","isMultipartBody","multipartFormRequestOptions","createForm","all","entries","addFormValue","append","isUploadable","file","entry","prop","_AbstractPage_client","defaultParseResponse","debug","__streamClass","__binaryResponse","contentType","mediaType","includes","json","_addRequestID","defineProperty","enumerable","APIPromise","responsePromise","parseResponse","_thenUnwrap","transform","asResponse","withResponse","parsedPromise","onfulfilled","onrejected","catch","onfinally","finally","APIClient","baseURL","maxRetries","timeout","httpAgent","overriddenFetch","validatePositiveInteger","authHeaders","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","post","patch","put","method","request","DataView","getAPIList","Page","requestAPIList","calculateContentLength","byteLength","buildRequest","inputOptions","retryCount","query","__binaryRequest","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","req","buildHeaders","agent","signal","reqHeaders","applyHeadersMut","shimsKind","getHeader","trunc","prepareOptions","prepareRequest","parseHeaders","fromEntries","header","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","retryRequest","responseHeaders","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","PagePromise","isAbsoluteURL","defaultQuery","isEmptyObj","stringifyQuery","encodeURIComponent","ms","addEventListener","fetchOptions","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","isNaN","retryAfterHeader","timeoutSeconds","now","calculateDefaultRetryTimeoutMillis","sleep","numRetries","pow","random","AbstractPage","client","hasNextPage","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","iterPages","page","item","Proxy","target","requestOptionsKeys","__metadata","isRequestOptions","every","k","hasOwn","getPlatformProperties","Deno","build","normalizePlatform","os","normalizeArch","arch","deno","EdgeRuntime","process","platform","browserInfo","navigator","browserPatterns","pattern","exec","userAgent","browser","getBrowserInfo","_platformHeaders","startsWithSchemeRegexp","test","n","isInteger","readEnv","env","_k","targetHeaders","newHeaders","lowerKey","SENSITIVE_HEADERS","action","args","modifiedArgs","arg","modifiedArg","r","lowerCasedHeader","isHeadersProtocol","intercapsHeader","_m","g1","g2","warn","isObj","nextPageParams","CursorPage","has_more","info","id","after","APIResource","_client","list","completionId","ChatCompletionStoreMessagesPage","arguments","MessagesAPI.Messages","create","retrieve","update","ChatCompletionsPage","del","delete","Completions","Messages","completions","CompletionsAPI.Completions","Chat","Speech","Transcriptions","Core.multipartFormRequestOptions","Translations","Audio","transcriptions","TranscriptionsAPI.Transcriptions","translations","TranslationsAPI.Translations","speech","SpeechAPI.Speech","batchId","BatchesPage","Batches","_EventStream_instances","_EventStream_connectedPromise","_EventStream_resolveConnectedPromise","_EventStream_rejectConnectedPromise","_EventStream_endPromise","_EventStream_resolveEndPromise","_EventStream_rejectEndPromise","_EventStream_listeners","_EventStream_ended","_EventStream_errored","_EventStream_aborted","_EventStream_catchingPromiseCreated","_EventStream_handleError","EventStream","add","_run","executor","_emitFinal","_emit","bind","_connected","ended","errored","on","listener","off","listeners","findIndex","l","splice","once","emitted","forEach","WeakSet","openAIError","_AssistantStream_instances","_AssistantStream_events","_AssistantStream_runStepSnapshots","_AssistantStream_messageSnapshots","_AssistantStream_messageSnapshot","_AssistantStream_finalRun","_AssistantStream_currentContentIndex","_AssistantStream_currentContent","_AssistantStream_currentToolCallIndex","_AssistantStream_currentToolCall","_AssistantStream_currentEvent","_AssistantStream_currentRunSnapshot","_AssistantStream_currentRunStepSnapshot","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","AssistantStream","pushQueue","readQueue","runner","_fromReadableStream","_addRun","createToolAssistantStream","threadId","runId","runs","_runToolAssistantStream","_createToolAssistantStream","run","submitToolOutputs","createThreadAssistantStream","thread","_threadAssistantStream","createAssistantStream","_runAssistantStream","currentEvent","currentRun","currentMessageSnapshot","currentRunStepSnapshot","finalRunSteps","finalMessages","finalRun","_createThreadAssistantStream","createAndRun","_createAssistantStream","accumulateDelta","acc","delta","deltaValue","accValue","Core.isObj","deltaEntry","accEntry","accumulatedMessage","newContent","snapshotContent","textDelta","snapshot","image_file","currentContent","accumulatedRunStep","step_details","tool_calls","toolCall","accumulated","contentElement","Assistants","assistantId","AssistantsPage","isRunnableFunctionWithParse","isAssistantMessage","isFunctionMessage","isToolMessage","isAutoParsableResponseFormat","response_format","isAutoParsableTool","tool","parseChatCompletion","completion","choices","choice","finish_reason","inputTool","tools","find","function","parsed_arguments","$parseRaw","strict","parseToolCall","parsed","refusal","parseResponseFormat","shouldParseToolCall","hasAutoParseableInput","some","t","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionCall","_AbstractChatCompletionRunner_getFinalFunctionCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","_chatCompletions","_addChatCompletion","chatCompletion","_addMessage","emit","function_call","tool_call","finalChatCompletion","finalContent","finalMessage","finalFunctionCall","finalFunctionCallResult","totalUsage","allChatCompletions","usage","_createChatCompletion","chat","_runChatCompletion","_runFunctions","restParams","singleFunctionToCall","maxChatCompletions","functionsByName","functions","parameters","description","rawContent","_runTools","tool_choice","inputTools","$callback","tool_call_id","rest","ret","at","y","total","completion_tokens","prompt_tokens","total_tokens","ChatCompletionRunner","runFunctions","runTools","Allow","ATOM","PartialJSON","MalformedJSON","_parseJSON","jsonString","allow","markPartialJSON","throwMalformedError","parseAny","skipBlank","parseStr","parseObj","parseArr","Infinity","NaN","parseNum","lastIndexOf","writable","configurable","partialParse","input","allowPartial","parseJSON","_ChatCompletionStream_instances","_ChatCompletionStream_params","_ChatCompletionStream_choiceEventStates","_ChatCompletionStream_currentChatCompletionSnapshot","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","ChatCompletionStream","currentChatCompletionSnapshot","createChatCompletion","chatId","content_done","refusal_done","logprobs_content_done","logprobs_refusal_done","done_tool_calls","current_tool_call_index","choiceSnapshot","logprobs","toolCallDelta","toolCallSnapshot","arguments_delta","assertNever","toolCallIndex","responseFormat","created","system_fingerprint","choiceRest","messageRest","toolRest","fnRest","maybeParseChatCompletion","finalizeChatCompletion","_c","_d","assign","other","_x","ChatCompletionStreamingRunner","validateInputTools","Sessions","TranscriptionSessions","Realtime","sessions","SessionsAPI.Sessions","transcriptionSessions","TranscriptionSessionsAPI.TranscriptionSessions","messageId","MessagesPage","Steps","stepId","RunStepsPage","steps","StepsAPI.Steps","include","RunsPage","createAndPoll","poll","createAndStream","beta","threads","pollIntervalMs","sleepInterval","headerInterval","headerIntervalMs","submitToolOutputsAndPoll","submitToolOutputsStream","Runs","Threads","RunsAPI.Runs","createAndRunPoll","thread_id","createAndRunStream","Beta","realtime","RealtimeAPI.Realtime","ChatAPI.Chat","assistants","AssistantsAPI.Assistants","ThreadsAPI.Threads","Content","containerId","fileId","ContentAPI.Content","FileListResponsesPage","Files","Containers","files","FilesAPI.Files","ContainerListResponsesPage","Embeddings","hasUserProvidedEncodingFormat","encoding_format","Core.debug","embeddingBase64Obj","embeddingBase64Str","embedding","base64Str","buf","Float32Array","byteOffset","BYTES_PER_ELEMENT","binaryStr","atob","len","Core.toFloat32Array","OutputItems","evalId","outputItemId","OutputItemListResponsesPage","outputItems","OutputItemsAPI.OutputItems","RunListResponsesPage","Evals","EvalListResponsesPage","FileObjectsPage","retrieveContent","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","Methods","validate","Alpha","graders","GradersAPI.Graders","Graders","Permissions","fineTunedModelCheckpoint","PermissionCreateResponsesPage","permissionId","permissions","PermissionsAPI.Permissions","Checkpoints","fineTuningJobId","FineTuningJobCheckpointsPage","Jobs","checkpoints","CheckpointsAPI.Checkpoints","FineTuningJobsPage","listEvents","FineTuningJobEventsPage","pause","resume","FineTuning","methods","MethodsAPI.Methods","jobs","JobsAPI.Jobs","alpha","AlphaAPI.Alpha","GraderModels","graderModels","GraderModelsAPI.GraderModels","Images","createVariation","edit","ModelsPage","Models","Moderations","maybeParseResponse","output_parsed","output","parseTextFormat","getOwnPropertyDescriptor","addOutputText","text_format","input_tools","rsp","texts","output_text","InputItems","responseId","ResponseItemsPage","_ResponseStream_instances","_ResponseStream_params","_ResponseStream_currentResponseSnapshot","_ResponseStream_finalResponse","_ResponseStream_beginRequest","_ResponseStream_addEvent","_ResponseStream_endRequest","_ResponseStream_accumulateResponse","ResponseStream","createResponse","_createOrRetrieveResponse","starting_after","responses","response_id","maybeEmit","sequence_number","output_index","content_index","parsedResponse","finalizeResponse","part","finalResponse","Responses","inputItems","InputItemsAPI.InputItems","Parts","uploadId","Uploads","PartsAPI.Parts","complete","vectorStoreId","VectorStoreFilesPage","fileResponse","upload","fileInfo","purpose","file_id","uploadAndPoll","FileContentResponsesPage","FileBatches","batch","listFiles","fileIds","configuredConcurrency","maxConcurrency","concurrencyLimit","fileIterator","allFileIds","workers","fill","fileObj","promises","results","allSettledWithThrow","file_ids","VectorStores","fileBatches","FileBatchesAPI.FileBatches","VectorStoresPage","VectorStoreSearchResponsesPage","util","objectUtil","OpenAI","Core.APIClient","Core.readEnv","apiKey","organization","project","Errors.OpenAIError","dangerouslyAllowBrowser","window","API.Completions","API.Chat","embeddings","API.Embeddings","API.Files","images","API.Images","audio","API.Audio","moderations","API.Moderations","models","API.Models","fineTuning","API.FineTuning","API.Graders","vectorStores","API.VectorStores","API.Beta","batches","API.Batches","uploads","API.Uploads","API.Responses","evals","API.Evals","containers","API.Containers","_options","Authorization","qs.stringify","DEFAULT_TIMEOUT","Errors.APIError","Errors.APIConnectionError","Errors.APIConnectionTimeoutError","Errors.APIUserAbortError","Errors.NotFoundError","Errors.ConflictError","Errors.RateLimitError","Errors.BadRequestError","Errors.AuthenticationError","Errors.InternalServerError","Errors.PermissionDeniedError","Errors.UnprocessableEntityError","Uploads.toFile","Uploads.fileFromPath","UploadsAPIUploads","assertEqual","assertIs","_arg","arrayToEnum","items","getValidEnumValues","validKeys","objectKeys","filtered","objectValues","checker","isFinite","floor","joinValues","separator","jsonStringifyReplacer","mergeShapes","first","second","ZodParsedType","getParsedType","nan","number","boolean","bigint","symbol","null","promise","Map","unknown","ZodIssueCode","ZodError","errors","issues","addIssue","sub","addIssues","subs","actualProto","setPrototypeOf","__proto__","_mapper","mapper","issue","fieldErrors","_errors","processError","unionErrors","returnTypeError","argumentsError","curr","el","assert","isEmpty","flatten","formErrors","errorMap","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","position","too_small","exact","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","not_finite","defaultError","overrideErrorMap","defaultErrorMap","addIssueToContext","issueData","overrideMap","errorMaps","fullPath","fullIssue","errorMessage","maps","m","reverse","makeIssue","common","contextualErrorMap","schemaErrorMap","ParseStatus","dirty","mergeArray","arrayValue","s","INVALID","mergeObjectAsync","pairs","syncPairs","pair","mergeObjectSync","finalObject","alwaysSet","freeze","DIRTY","OK","isAborted","isDirty","isValid","isAsync","errorUtil","errToObj","ParseInputLazyPath","parent","_cachedPath","_path","_key","handleResult","success","_error","processCreateParams","invalid_type_error","required_error","iss","ZodType","_def","_getType","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","safeParse","parseAsync","safeParseAsync","maybeAsyncResult","refine","check","getIssueProperties","_refinement","setError","refinement","refinementData","ZodEffects","schema","typeName","ZodFirstPartyTypeKind","effect","superRefine","def","spa","optional","nullable","nullish","or","and","brand","default","describe","pipe","readonly","isNullable","isOptional","vendor","ZodOptional","ZodNullable","ZodArray","ZodPromise","option","ZodUnion","incoming","ZodIntersection","defaultValueFunc","ZodDefault","innerType","defaultValue","ZodBranded","catchValueFunc","ZodCatch","catchValue","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","jwtRegex","durationRegex","emailRegex","emojiRegex","ipv4Regex","ipv4CidrRegex","ipv6Regex","ipv6CidrRegex","base64Regex","base64urlRegex","dateRegexSource","dateRegex","RegExp","timeRegexSource","secondsRegexSource","precision","timeRegex","datetimeRegex","regex","local","offset","isValidIP","ip","isValidJWT","jwt","alg","padEnd","decoded","typ","isValidCidr","ZodString","coerce","checks","tooBig","tooSmall","lastIndex","_regex","_addCheck","email","emoji","uuid","nanoid","cuid","cuid2","ulid","base64url","cidr","datetime","time","duration","minLength","max","maxLength","nonempty","isDatetime","ch","isDate","isTime","isDuration","isEmail","isURL","isEmoji","isUUID","isNANOID","isCUID","isCUID2","isULID","isIP","isCIDR","isBase64","isBase64url","floatSafeRemainder","valDecCount","stepDecCount","decCount","toFixed","ZodNumber","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","finite","safe","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","minValue","maxValue","isInt","ZodBigInt","BigInt","_getInvalidInput","ZodBoolean","Boolean","ZodDate","getTime","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","_any","ZodUnknown","_unknown","ZodNever","never","ZodVoid","void","exactLength","deepPartialify","ZodObject","newShape","shape","fieldSchema","unwrap","ZodTuple","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","catchall","unknownKeys","keyValidator","strip","augmentation","merge","merging","setKey","pick","mask","omit","deepPartial","partial","required","newField","keyof","createZodEnum","strictCreate","lazycreate","childCtx","mergeValues","aType","bType","valid","bKeys","sharedKeys","newObj","sharedValue","newArray","types","handleParsed","parsedLeft","parsedRight","merged","itemIndex","schemas","ZodRecord","keySchema","keyType","valueSchema","valueType","third","ZodMap","finalMap","ZodSet","minSize","maxSize","finalizeSet","elements","parsedSet","ZodLazy","getter","ZodLiteral","ZodEnum","expectedValues","_cache","enum","enumValues","Values","Enum","extract","newDef","exclude","opt","ZodNativeEnum","nativeEnumValues","promisified","sourceType","checkCtx","fatal","processed","executeRefinement","inner","base","createWithPreprocess","preprocess","removeDefault","newCtx","removeCatch","ZodNaN","inResult","in","handleAsync","stringType","numberType","booleanType","unknownType","arrayType","objectType","unionType","recordType","lazyType","enumType","_defaultBaseGeminiUrl","_defaultBaseVertexUrl","getBaseUrl","vertexBaseUrlFromEnv","geminiBaseUrlFromEnv","httpOptions","baseUrl","defaultBaseUrls","geminiUrl","vertexUrl","vertexai","BaseModule","formatMap","templateString","valueMap","setValueByPath","keyName","arrayData","d","keyToSet","existingData","getValueByPath","Outcome","Language","Type","HarmCategory","HarmBlockMethod","HarmBlockThreshold","Mode","AuthType","FinishReason","HarmProbability","HarmSeverity","BlockedReason","TrafficType","Modality","MediaResolution","JobState","AdapterSize","FeatureSelectionPreference","Behavior","DynamicRetrievalConfigMode","FunctionCallingConfigMode","UrlRetrievalStatus","SafetyFilterLevel","PersonGeneration","ImagePromptLanguage","MaskReferenceMode","ControlReferenceType","SubjectReferenceType","EditMode","VideoCompressionQuality","FileState","FileSource","MediaModality","StartSensitivity","EndSensitivity","ActivityHandling","TurnCoverage","FunctionResponseScheduling","Scale","LiveMusicPlaybackControl","HttpResponse","responseInternal","GenerateContentResponse","_e","_f","_g","_h","candidates","anyTextPartText","nonTextParts","fieldName","fieldValue","thought","nonDataParts","inlineData","btoa","functionCalls","functionCall","executableCode","_j","codeExecutionResult","EmbedContentResponse","GenerateImagesResponse","EditImageResponse","UpscaleImageResponse","ListModelsResponse","DeleteModelResponse","CountTokensResponse","ComputeTokensResponse","ListTuningJobsResponse","DeleteCachedContentResponse","ListCachedContentsResponse","ListFilesResponse","CreateFileResponse","DeleteFileResponse","ListBatchJobsResponse","LiveServerMessage","anyTextPartFound","serverContent","modelTurn","LiveMusicServerMessage","audioChunk","audioChunks","tModel","apiClient","isVertexAI","tCachesModel","transformedModel","getProject","getLocation","tBlobs","blobs","tBlob","tPart","origin","tParts","_isContent","_isFunctionCallPart","_isFunctionResponsePart","tContent","tContentsForEmbed","flatMap","tContents","accumulatedParts","isContentArray","isContent","supportedJsonSchemaFields","jsonSchemaTypeValidator","z.enum","schemaTypeUnion","z.union","z.array","processJsonSchema","_jsonSchema","genAISchema","schemaFieldNames","listSchemaFieldNames","dictSchemaFieldNames","incomingAnyOf","typeList","resultingSchema","listWithoutNull","TYPE_UNSPECIFIED","flattenTypeArrayToAnyOf","listSchemaFieldValue","dictSchemaFieldValue","tSchema","strictMode","jsonSchemaValidator","z.lazy","baseShape","z.object","z.string","z.unknown","minItems","z.coerce","maxItems","properties","z.record","minProperties","maxProperties","propertyOrdering","z.number","anyOf","additionalProperties","z.boolean","createJsonSchemaValidator","tSpeechConfig","speechConfig","voiceConfig","prebuiltVoiceConfig","voiceName","tLiveSpeechConfig","tTool","functionDeclarations","functionDeclaration","tTools","tCachedContentName","resourceName","resourcePrefix","splitsAfterPrefix","shouldAppendPrefix","tTuningJobStatus","tBytes","fromImageBytes","tFileName","fromName","isVideo","uri","isGeneratedVideo","video","tModelsUrl","baseModels","res","tExtractModels","hasField","mcpToGeminiTool","mcpTool","mcpToolSchema","filterToJsonSchema","behavior","filterListSchemaField","listFieldValue","filterDictSchemaField","valueRecord","filteredSchema","typeValue","tBatchJobSource","gcsUri","bigqueryUri","inlinedRequests","fileName","tBatchJobName","nameString","tJobState","partToMldev$4","fromObject","toObject","fromVideoMetadata","fromFps","fromEndOffset","fromStartOffset","videoMetadataToMldev$4","fromThought","fromInlineData","fromData","fromMimeType","blobToMldev$4","fromFileData","fromFileUri","fileDataToMldev$4","fromThoughtSignature","fromCodeExecutionResult","fromExecutableCode","fromFunctionCall","fromFunctionResponse","fromText","contentToMldev$4","fromParts","transformedList","fromRole","googleSearchToMldev$4","fromTimeRangeFilter","fromStartTime","fromEndTime","intervalToMldev$4","googleSearchRetrievalToMldev$4","fromDynamicRetrievalConfig","fromMode","fromDynamicThreshold","dynamicRetrievalConfigToMldev$4","toolToMldev$4","fromFunctionDeclarations","fromBehavior","fromDescription","fromParameters","fromParametersJsonSchema","fromResponse","fromResponseJsonSchema","functionDeclarationToMldev$4","fromGoogleSearch","fromGoogleSearchRetrieval","fromCodeExecution","retrievalConfigToMldev$2","fromLatLng","fromLatitude","fromLongitude","latLngToMldev$2","fromLanguageCode","toolConfigToMldev$2","fromFunctionCallingConfig","fromAllowedFunctionNames","functionCallingConfigToMldev$2","fromRetrievalConfig","voiceConfigToMldev$3","fromPrebuiltVoiceConfig","fromVoiceName","prebuiltVoiceConfigToMldev$3","multiSpeakerVoiceConfigToMldev$3","fromSpeakerVoiceConfigs","fromSpeaker","fromVoiceConfig","speakerVoiceConfigToMldev$3","generateContentConfigToMldev$1","parentObject","fromSystemInstruction","fromTemperature","fromTopP","fromTopK","fromCandidateCount","fromMaxOutputTokens","fromStopSequences","fromResponseLogprobs","fromLogprobs","fromPresencePenalty","fromFrequencyPenalty","fromSeed","fromResponseMimeType","fromResponseSchema","fromAnyOf","fromDefault","fromEnum","fromExample","fromFormat","fromItems","fromMaxItems","fromMaxLength","fromMaxProperties","fromMaximum","fromMinItems","fromMinLength","fromMinProperties","fromMinimum","fromNullable","fromPattern","fromProperties","fromPropertyOrdering","fromRequired","fromTitle","fromType","schemaToMldev$1","fromSafetySettings","fromCategory","fromThreshold","safetySettingToMldev$1","fromTools","fromToolConfig","fromCachedContent","fromResponseModalities","fromMediaResolution","fromSpeechConfig","fromMultiSpeakerVoiceConfig","speechConfigToMldev$3","fromThinkingConfig","fromIncludeThoughts","fromThinkingBudget","thinkingConfigToMldev$1","batchJobSourceToMldev","fromFileName","fromInlinedRequests","fromModel","fromContents","fromConfig","inlinedRequestToMldev","createBatchJobParametersToMldev","fromSrc","fromDisplayName","createBatchJobConfigToMldev","listBatchJobsParametersToMldev","fromPageSize","fromPageToken","listBatchJobsConfigToMldev","createBatchJobConfigToVertex","fromDest","fromGcsUri","fromBigqueryUri","batchJobDestinationToVertex","dest","destString","tBatchJobDestination","createBatchJobParametersToVertex","batchJobSourceToVertex","listBatchJobsParametersToVertex","fromFilter","listBatchJobsConfigToVertex","partFromMldev$2","videoMetadataFromMldev$2","blobFromMldev$2","fileDataFromMldev$2","urlContextMetadataFromMldev$2","fromUrlMetadata","fromRetrievedUrl","fromUrlRetrievalStatus","urlMetadataFromMldev$2","candidateFromMldev$1","fromContent","contentFromMldev$2","fromCitationMetadata","fromCitations","citationMetadataFromMldev$1","fromTokenCount","fromFinishReason","fromUrlContextMetadata","fromAvgLogprobs","fromGroundingMetadata","fromIndex","fromLogprobsResult","fromSafetyRatings","inlinedResponseFromMldev","fromCandidates","fromModelVersion","fromPromptFeedback","fromUsageMetadata","generateContentResponseFromMldev$1","batchJobFromMldev","fromState","fromCreateTime","fromUpdateTime","fromInlinedResponses","batchJobDestinationFromMldev","batchJobFromVertex","fromError","fromDetails","fromCode","fromMessage","jobErrorFromVertex","batchJobSourceFromVertex","batchJobDestinationFromVertex","PagedItem","Pager","pageInternal","paramsInternal","requestInternal","nameInternal","idxInternal","requestParams","pageInternalSize","initNextPage","pageSize","pageLength","getItem","nextPage","displayName","createInternal","PAGED_ITEM_BATCH_JOBS","listInternal","queryParams","httpMethod","abortSignal","httpResponse","apiResponse","getBatchJobParametersToVertex","getBatchJobParametersToMldev","cancelBatchJobParametersToVertex","cancelBatchJobParametersToMldev","resp","fromNextPageToken","fromBatchJobs","listBatchJobsResponseFromVertex","typedResp","listBatchJobsResponseFromMldev","partToMldev$3","videoMetadataToMldev$3","blobToMldev$3","fileDataToMldev$3","contentToMldev$3","googleSearchToMldev$3","intervalToMldev$3","googleSearchRetrievalToMldev$3","dynamicRetrievalConfigToMldev$3","toolToMldev$3","functionDeclarationToMldev$3","retrievalConfigToMldev$1","latLngToMldev$1","toolConfigToMldev$1","functionCallingConfigToMldev$1","createCachedContentParametersToMldev","fromTtl","fromExpireTime","createCachedContentConfigToMldev","updateCachedContentParametersToMldev","updateCachedContentConfigToMldev","listCachedContentsParametersToMldev","listCachedContentsConfigToMldev","partToVertex$2","videoMetadataToVertex$2","blobToVertex$2","fileDataToVertex$2","contentToVertex$2","googleSearchToVertex$2","intervalToVertex$2","googleSearchRetrievalToVertex$2","dynamicRetrievalConfigToVertex$2","authConfigToVertex$2","fromApiKeyConfig","fromApiKeyString","apiKeyConfigToVertex$2","fromAuthType","fromGoogleServiceAccountConfig","fromHttpBasicAuthConfig","fromOauthConfig","fromOidcConfig","toolToVertex$2","functionDeclarationToVertex$2","fromRetrieval","fromGoogleMaps","fromAuthConfig","googleMapsToVertex$2","retrievalConfigToVertex$1","latLngToVertex$1","toolConfigToVertex$1","functionCallingConfigToVertex$1","createCachedContentParametersToVertex","fromKmsKeyName","createCachedContentConfigToVertex","updateCachedContentParametersToVertex","updateCachedContentConfigToVertex","listCachedContentsParametersToVertex","listCachedContentsConfigToVertex","cachedContentFromMldev","cachedContentFromVertex","Caches","PAGED_ITEM_CACHED_CONTENTS","getCachedContentParametersToVertex","getCachedContentParametersToMldev","deleteCachedContentParametersToVertex","deleteCachedContentParametersToMldev","fromCachedContents","listCachedContentsResponseFromVertex","listCachedContentsResponseFromMldev","__values","o","__await","__asyncGenerator","g","q","AsyncIterator","verb","fulfill","settle","__asyncValues","isValidResponse","isValidContent","extractCuratedHistory","comprehensiveHistory","curatedHistory","modelOutput","Chats","modelsModule","structuredClone","sendPromise","validateHistory","sendMessage","inputContent","generateContent","contents","getHistory","concat","outputContent","fullAutomaticFunctionCallingHistory","automaticFunctionCallingHistory","recordHistory","sendMessageStream","streamResponse","generateContentStream","processStreamResponse","curated","e_1","streamResponse_1_1","streamResponse_1","e_1_1","userInput","outputContents","ApiError","listFilesParametersToMldev","listFilesConfigToMldev","fileToMldev","fromSizeBytes","fromExpirationTime","fromSha256Hash","fromUri","fromDownloadUri","fromSource","fileStatusToMldev","fileFromMldev","fileStatusFromMldev","PAGED_ITEM_FILES","uploadFile","download","downloadFile","fromFiles","listFilesResponseFromMldev","fromFile","createFileParametersToMldev","getFileParametersToMldev","deleteFileParametersToMldev","voiceConfigToMldev$2","prebuiltVoiceConfigToMldev$2","voiceConfigToVertex$1","prebuiltVoiceConfigToVertex$1","multiSpeakerVoiceConfigToMldev$2","speakerVoiceConfigToMldev$2","partToMldev$2","videoMetadataToMldev$2","blobToMldev$2","fileDataToMldev$2","partToVertex$1","videoMetadataToVertex$1","blobToVertex$1","fileDataToVertex$1","googleSearchToMldev$2","intervalToMldev$2","googleSearchToVertex$1","intervalToVertex$1","googleSearchRetrievalToMldev$2","dynamicRetrievalConfigToMldev$2","googleSearchRetrievalToVertex$1","dynamicRetrievalConfigToVertex$1","authConfigToVertex$1","apiKeyConfigToVertex$1","toolToMldev$2","functionDeclarationToMldev$2","toolToVertex$1","functionDeclarationToVertex$1","googleMapsToVertex$1","realtimeInputConfigToMldev$1","fromAutomaticActivityDetection","fromDisabled","fromStartOfSpeechSensitivity","fromEndOfSpeechSensitivity","fromPrefixPaddingMs","fromSilenceDurationMs","automaticActivityDetectionToMldev$1","fromActivityHandling","fromTurnCoverage","realtimeInputConfigToVertex","automaticActivityDetectionToVertex","contextWindowCompressionConfigToMldev$1","fromTriggerTokens","fromSlidingWindow","fromTargetTokens","slidingWindowToMldev$1","contextWindowCompressionConfigToVertex","slidingWindowToVertex","liveConnectConfigToMldev$1","fromGenerationConfig","speechConfigToMldev$2","fromEnableAffectiveDialog","contentToMldev$2","fromSessionResumption","fromHandle","sessionResumptionConfigToMldev$1","fromInputAudioTranscription","fromOutputAudioTranscription","fromRealtimeInputConfig","fromContextWindowCompression","fromProactivity","fromProactiveAudio","proactivityConfigToMldev$1","liveConnectConfigToVertex","speechConfigToVertex$1","contentToVertex$1","fromTransparent","sessionResumptionConfigToVertex","proactivityConfigToVertex","liveSendRealtimeInputParametersToMldev","fromMedia","fromAudio","transformedBlob","mimeType","tAudioBlob","fromAudioStreamEnd","fromVideo","tImageBlob","liveSendRealtimeInputParametersToVertex","weightedPromptToMldev","fromWeight","liveMusicGenerationConfigToMldev","fromGuidance","fromBpm","fromDensity","fromBrightness","fromScale","fromMuteBass","fromMuteDrums","fromOnlyBassAndDrums","liveMusicClientSetupToMldev","liveMusicClientContentToMldev","fromWeightedPrompts","liveMusicClientMessageToMldev","fromSetup","fromClientContent","fromMusicGenerationConfig","fromPlaybackControl","partFromMldev$1","videoMetadataFromMldev$1","blobFromMldev$1","fileDataFromMldev$1","partFromVertex$1","videoMetadataFromVertex$1","blobFromVertex$1","fileDataFromVertex$1","transcriptionFromMldev","fromFinished","transcriptionFromVertex","urlContextMetadataFromMldev$1","urlMetadataFromMldev$1","liveServerContentFromMldev","fromModelTurn","contentFromMldev$1","fromTurnComplete","fromInterrupted","fromGenerationComplete","fromInputTranscription","fromOutputTranscription","liveServerContentFromVertex","contentFromVertex$1","liveServerToolCallFromMldev","fromFunctionCalls","fromId","fromArgs","functionCallFromMldev","liveServerToolCallFromVertex","functionCallFromVertex","modalityTokenCountFromMldev","fromModality","modalityTokenCountFromVertex","liveServerMessageFromMldev","fromServerContent","fromToolCall","fromToolCallCancellation","fromIds","liveServerToolCallCancellationFromMldev","fromPromptTokenCount","fromCachedContentTokenCount","fromResponseTokenCount","fromToolUsePromptTokenCount","fromThoughtsTokenCount","fromTotalTokenCount","fromPromptTokensDetails","fromCacheTokensDetails","fromResponseTokensDetails","fromToolUsePromptTokensDetails","usageMetadataFromMldev","fromGoAway","fromTimeLeft","liveServerGoAwayFromMldev","fromSessionResumptionUpdate","fromNewHandle","fromResumable","fromLastConsumedClientMessageIndex","liveServerSessionResumptionUpdateFromMldev","liveServerMessageFromVertex","liveServerToolCallCancellationFromVertex","fromTrafficType","usageMetadataFromVertex","liveServerGoAwayFromVertex","liveServerSessionResumptionUpdateFromVertex","liveMusicClientContentFromMldev","weightedPromptFromMldev","liveMusicSourceMetadataFromMldev","liveMusicGenerationConfigFromMldev","liveMusicServerContentFromMldev","fromAudioChunks","fromSourceMetadata","audioChunkFromMldev","liveMusicServerMessageFromMldev","fromFilteredPrompt","fromFilteredReason","liveMusicFilteredPromptFromMldev","partToMldev$1","videoMetadataToMldev$1","blobToMldev$1","fileDataToMldev$1","contentToMldev$1","googleSearchToMldev$1","intervalToMldev$1","googleSearchRetrievalToMldev$1","dynamicRetrievalConfigToMldev$1","toolToMldev$1","functionDeclarationToMldev$1","retrievalConfigToMldev","latLngToMldev","toolConfigToMldev","functionCallingConfigToMldev","voiceConfigToMldev$1","prebuiltVoiceConfigToMldev$1","multiSpeakerVoiceConfigToMldev$1","speakerVoiceConfigToMldev$1","generateContentConfigToMldev","schemaToMldev","safetySettingToMldev","speechConfigToMldev$1","thinkingConfigToMldev","generateContentParametersToMldev","embedContentParametersToMldev","fromTaskType","fromOutputDimensionality","embedContentConfigToMldev","fromModelForEmbedContent","generateImagesParametersToMldev","fromPrompt","fromNumberOfImages","fromAspectRatio","fromGuidanceScale","fromSafetyFilterLevel","fromPersonGeneration","fromIncludeSafetyAttributes","fromIncludeRaiReason","fromLanguage","fromOutputMimeType","fromOutputCompressionQuality","generateImagesConfigToMldev","listModelsParametersToMldev","fromQueryBase","listModelsConfigToMldev","updateModelParametersToMldev","fromDefaultCheckpointId","updateModelConfigToMldev","countTokensParametersToMldev","countTokensConfigToMldev","generateVideosParametersToMldev","fromImage","imageToMldev","fromNumberOfVideos","fromDurationSeconds","fromNegativePrompt","fromEnhancePrompt","generateVideosConfigToMldev","partToVertex","videoMetadataToVertex","blobToVertex","fileDataToVertex","contentToVertex","googleSearchToVertex","intervalToVertex","googleSearchRetrievalToVertex","dynamicRetrievalConfigToVertex","authConfigToVertex","apiKeyConfigToVertex","toolToVertex","functionDeclarationToVertex","googleMapsToVertex","retrievalConfigToVertex","latLngToVertex","toolConfigToVertex","functionCallingConfigToVertex","voiceConfigToVertex","prebuiltVoiceConfigToVertex","generateContentConfigToVertex","schemaToVertex","fromRoutingConfig","fromModelSelectionConfig","fromFeatureSelectionPreference","modelSelectionConfigToVertex","fromMethod","safetySettingToVertex","fromLabels","speechConfigToVertex","fromAudioTimestamp","thinkingConfigToVertex","generateContentParametersToVertex","embedContentParametersToVertex","fromAutoTruncate","embedContentConfigToVertex","generateImagesParametersToVertex","fromOutputGcsUri","fromAddWatermark","generateImagesConfigToVertex","imageToVertex","referenceImageAPIInternalToVertex","fromReferenceImage","fromReferenceId","fromReferenceType","fromMaskImageConfig","fromMaskMode","fromSegmentationClasses","fromMaskDilation","maskReferenceConfigToVertex","fromControlImageConfig","fromControlType","fromEnableControlImageComputation","controlReferenceConfigToVertex","fromStyleImageConfig","fromStyleDescription","styleReferenceConfigToVertex","fromSubjectImageConfig","fromSubjectType","fromSubjectDescription","subjectReferenceConfigToVertex","editImageParametersInternalToVertex","fromReferenceImages","fromEditMode","fromBaseSteps","editImageConfigToVertex","upscaleImageAPIParametersInternalToVertex","fromUpscaleFactor","fromEnhanceInputImage","fromImagePreservationFactor","upscaleImageAPIConfigInternalToVertex","listModelsParametersToVertex","listModelsConfigToVertex","updateModelParametersToVertex","updateModelConfigToVertex","countTokensParametersToVertex","countTokensConfigToVertex","generateVideosParametersToVertex","fromVideoBytes","videoToVertex","fromResolution","fromPubsubTopic","fromGenerateAudio","fromLastFrame","fromCompressionQuality","generateVideosConfigToVertex","partFromMldev","videoMetadataFromMldev","blobFromMldev","fileDataFromMldev","urlContextMetadataFromMldev","urlMetadataFromMldev","candidateFromMldev","contentFromMldev","citationMetadataFromMldev","generateContentResponseFromMldev","embedContentResponseFromMldev","fromEmbeddings","fromValues","contentEmbeddingFromMldev","safetyAttributesFromMldev","fromCategories","fromScores","fromContentType","generatedImageFromMldev","imageFromMldev","fromRaiFilteredReason","fromSafetyAttributes","modelFromMldev","fromVersion","fromTunedModelInfo","fromBaseModel","tunedModelInfoFromMldev","fromInputTokenLimit","fromOutputTokenLimit","fromSupportedActions","generatedVideoFromMldev$1","videoFromMldev$1","generateVideosOperationFromMldev$1","fromMetadata","fromDone","fromGeneratedVideos","fromRaiMediaFilteredCount","fromRaiMediaFilteredReasons","generateVideosResponseFromMldev$1","partFromVertex","videoMetadataFromVertex","blobFromVertex","fileDataFromVertex","urlContextMetadataFromVertex","urlMetadataFromVertex","candidateFromVertex","contentFromVertex","citationMetadataFromVertex","fromFinishMessage","generateContentResponseFromVertex","fromResponseId","contentEmbeddingFromVertex","fromStatistics","fromTruncated","contentEmbeddingStatisticsFromVertex","embedContentResponseFromVertex","fromBillableCharacterCount","embedContentMetadataFromVertex","safetyAttributesFromVertex","generatedImageFromVertex","imageFromVertex","fromEnhancedPrompt","modelFromVertex","fromEndpoints","fromDeployedModelId","endpointFromVertex","tunedModelInfoFromVertex","fromCheckpoints","fromCheckpointId","fromEpoch","fromStep","checkpointFromVertex","generatedVideoFromVertex$1","videoFromVertex$1","generateVideosOperationFromVertex$1","generateVideosResponseFromVertex$1","GOOGLE_API_CLIENT_HEADER","responseLineRE","ApiClient","clientOptions","initHttpOptions","apiVersion","baseUrlFromProjectLocation","normalizeAuthParameters","getDefaultHeaders","patchHttpOptions","getApiVersion","getRequestUrl","getRequestUrlInternal","getHeaders","urlElement","getBaseResourcePath","getApiKey","getWebsocketBaseUrl","urlParts","protocol","setBaseUrl","constructUrl","prependProjectLocation","shouldPrependVertexProjectPath","patchedHttpOptions","requestInit","includeExtraHttpOptionsToRequestInit","unaryApiCall","baseHttpOptions","requestHttpOptions","requestStream","streamApiCall","abortController","extraBody","currentBodyObject","parsedBody","deepMerge","source","sourceValue","targetValue","mergedBody","includeExtraBodyToRequestInit","getHeadersInternal","apiCall","throwErrorIfNotOK","decoder","chunkString","chunkJson","errorJson","processedChunkString","partialResponse","statusText","versionHeaderValue","LIBRARY_LABEL","userAgentExtra","ceil","auth","addAuthHeaders","fileToUpload","uploader","fileStat","stat","sizeBytes","uploadUrl","fetchUploadUrl","downloader","errorBody","hasMcpToolUsage","isMcpCallableTool","setMcpUsageHeader","existingHeader","trimStart","McpCallableTool","listAllTools","mcpClient","maxTools","cursor","numTools","listTools","nextCursor","mcpClients","mcpTools","functionNameToMcpClient","initialize","functionMap","mcpToolName","toolNames","geminiTool","mcpToolsToGeminiTool","callTool","functionCallResponseParts","requestOptions","callToolResponse","functionResponse","isError","LiveMusic","webSocketFactory","connect","websocketBaseUrl","mapToHeaders$1","onopenResolve","onopenPromise","callbacks","websocketCallbacks","onopen","onmessage","serverMessage","handleWebSocketMessage$1","onclose","conn","headerMap","headersToMap$1","clientMessage","setup","send","LiveMusicSession","setWeightedPrompts","weightedPrompts","clientContent","liveMusicSetWeightedPromptsParametersToMldev","setMusicGenerationConfig","musicGenerationConfig","liveMusicSetConfigParametersToMldev","sendPlaybackControl","playbackControl","play","PLAY","PAUSE","stop","STOP","resetContext","RESET_CONTEXT","Live","music","mapToHeaders","jsonData","handleWebSocketMessage","headersToMap","responseModalities","AUDIO","generationConfig","convertedTools","isCallableTool","callableTool","liveConnectParameters","liveConnectParametersToVertex","liveConnectParametersToMldev","Session","defaultLiveSendClientContentParamerters","turnComplete","tLiveClientContent","turns","tLiveClienttToolResponse","functionResponses","toolResponse","sendClientContent","sendRealtimeInput","realtimeInput","sendToolResponse","shouldDisableAfc","automaticFunctionCalling","disable","callableToolsPresent","maxCalls","maximumRemoteCalls","shouldAppendAfcHistory","ignoreCallHistory","transformedParams","processParamsForMcpUsage","hasMcpClientTools","generateContentInternal","hasNonMcpTools","functionResponseContent","maxRemoteCalls","remoteCalls","responseContent","functionResponseParts","generateContentStreamInternal","processAfcStream","generateImages","generateImagesInternal","positivePromptSafetyAttributes","generatedImages","generatedImage","safetyAttributes","actualParams","queryBase","PAGED_ITEM_MODELS","editImage","prompt","referenceImages","toReferenceImageAPI","editImageInternal","upscaleImage","apiConfig","numberOfImages","mode","apiParams","image","upscaleFactor","upscaleImageInternal","transformedTools","newParams","initAfcToolsMap","afcTools","toolDeclaration","declaration","wereFunctionsCalled","remoteCallCount","responseContents","response_1_1","response_1","responseParts","typedResponseChunk","newContents","updatedContents","e_2","apiResponse_1_1","apiResponse_1","e_2_1","e_3","apiResponse_2_1","apiResponse_2","e_3_1","embedContent","fromGeneratedImages","fromPositivePromptSafetyAttributes","generateImagesResponseFromVertex","generateImagesResponseFromMldev","editImageResponseFromVertex","upscaleImageResponseFromVertex","getModelParametersToVertex","getModelParametersToMldev","fromModels","listModelsResponseFromVertex","listModelsResponseFromMldev","deleteModelParametersToVertex","deleteModelParametersToMldev","countTokens","fromTotalTokens","countTokensResponseFromVertex","countTokensResponseFromMldev","computeTokens","computeTokensParametersToVertex","fromTokensInfo","computeTokensResponseFromVertex","generateVideos","generatedVideoFromMldev","videoFromMldev","generateVideosOperationFromMldev","generateVideosResponseFromMldev","generatedVideoFromVertex","videoFromVertex","generateVideosOperationFromVertex","generateVideosResponseFromVertex","Operations","getVideosOperation","operation","fetchPredictVideosOperationInternal","operationName","getVideosOperationInternal","fromOperationName","getOperationParametersToVertex","getOperationParametersToMldev","fromResourceName","fetchPredictOperationParametersToVertex","voiceConfigToMldev","prebuiltVoiceConfigToMldev","multiSpeakerVoiceConfigToMldev","speakerVoiceConfigToMldev","partToMldev","videoMetadataToMldev","blobToMldev","fileDataToMldev","googleSearchToMldev","intervalToMldev","googleSearchRetrievalToMldev","dynamicRetrievalConfigToMldev","toolToMldev","functionDeclarationToMldev","realtimeInputConfigToMldev","automaticActivityDetectionToMldev","contextWindowCompressionConfigToMldev","slidingWindowToMldev","liveConnectConfigToMldev","speechConfigToMldev","contentToMldev","sessionResumptionConfigToMldev","proactivityConfigToMldev","createAuthTokenConfigToMldev","fromNewSessionExpireTime","fromUses","fromLiveConnectConstraints","liveConnectConstraintsToMldev","fromLockAdditionalFields","convertBidiSetupToTokenSetup","requestDict","setupForMaskGeneration","bidiGenerateContentSetupValue","innerSetup","preExistingFieldMask","generatedMaskFromBidi","fields","field","kk","getFieldMasks","lockAdditionalFields","generationConfigFields","mappedFieldsFromPreExisting","finalMaskParts","Tokens","createAuthTokenParametersToMldev","transformedBody","authTokenFromMldev","listTuningJobsParametersToMldev","listTuningJobsConfigToMldev","tuningDatasetToMldev","fromExamples","fromTextInput","fromOutput","tuningExampleToMldev","createTuningJobParametersToMldev","fromTrainingDataset","fromTunedModelDisplayName","fromEpochCount","fromLearningRateMultiplier","fromBatchSize","fromLearningRate","createTuningJobConfigToMldev","listTuningJobsParametersToVertex","listTuningJobsConfigToVertex","createTuningJobConfigToVertex","fromValidationDataset","tuningValidationDatasetToVertex","fromExportLastCheckpointOnly","fromAdapterSize","createTuningJobParametersToVertex","tuningDatasetToVertex","tuningJobFromMldev","fromTunedModel","fromEndpoint","tunedModelFromMldev","fromDistillationSpec","fromExperiment","fromPipelineJob","fromServiceAccount","tunedModelFromVertex","tunedModelCheckpointFromVertex","tuningJobFromVertex","fromSupervisedTuningSpec","fromTuningDataStats","fromEncryptionSpec","fromPartnerModelTuningSpec","Tunings","getInternal","PAGED_ITEM_TUNING_JOBS","tune","tuneInternal","tuneMldevInternal","tunedModelName","JOB_STATE_QUEUED","getTuningJobParametersToVertex","getTuningJobParametersToMldev","fromTuningJobs","listTuningJobsResponseFromVertex","listTuningJobsResponseFromMldev","operationFromMldev","BrowserDownloader","_params","_apiClient","X_GOOG_UPLOAD_STATUS_HEADER_FIELD","resolvePromise","BrowserUploader","fileSize","uploadCommand","chunkSize","currentDelayMs","responseJson","uploadBlob","getBlobStat","BrowserWebSocketFactory","BrowserWebSocket","ws","WebSocket","GOOGLE_API_KEY_HEADER","WebAuth","GoogleGenAI","LANGUAGE_LABEL_PREFIX","live","chats","caches","operations","authTokens","tunings","htmlTableToString","table","tab","maxColumnsLength","cellsContent","cell","textContent","headerLineLength","lineSeparationSize","reduce","jointure","lineSeparation","mappedTab","handleClipboard","clipboard","writeText","handleContentEditable","inputList","contenteditable","getAttribute","isContentEditable","typing","eventHandler","preventDefault","removeEventListener","focus","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","handleNumber","eventHanlder","handleRadio","firstInput","possibleAnswers","inp","parentElement","correctInput","mouseover","click","handleCheckbox","corrects","correctElements","correct","needAction","checked","handleSelect","tagName","correctOption","currentSelect","closest","selected","handleTextbox","handleAtto","classList","contains","iframe","querySelector","contentDocument","contentWindow","textContainer","textNode","createTextNode","appendChild","reply","style","questionContainer","innerText","accesshideElements","useless","attoText","tables","createAndNormalizeQuestion","inputQuery","timeoutControler","contentHandler","responseText","apiProvider","geminiApiKey","genAI","geminiMessages","convertToGeminiMessages","geminiParams","safetySettings","category","HARM_CATEGORY_HARASSMENT","threshold","BLOCK_NONE","HARM_CATEGORY_HATE_SPEECH","HARM_CATEGORY_SEXUALLY_EXPLICIT","HARM_CATEGORY_DANGEROUS_CONTENT","max_tokens","max_completion_tokens","temperature","top_p","fixeO1","presence_penalty","maxTokens","getChatGPTResponse","haveError","infinite","removeListener","clipboardMode","questionBackup","innerHTML","whiteSpace","contentIsResponse","questionToAnswerMode","handlers","handler","autoCompleteMode","pressedKeys","setUpMoodleGpt","forms","injectionFunction","chrome","storage","sync","moodleGPT","codeListener"],"mappings":"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","x_google_ignoreList":[1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93]}